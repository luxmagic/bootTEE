ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"socket.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.data.sock_any_port,"aw"
  20              		.align	1
  23              	sock_any_port:
  24 0000 00C0     		.short	-16384
  25              		.section	.bss.sock_io_mode,"aw",%nobits
  26              		.align	1
  29              	sock_io_mode:
  30 0000 0000     		.space	2
  31              		.section	.bss.sock_is_sending,"aw",%nobits
  32              		.align	1
  35              	sock_is_sending:
  36 0000 0000     		.space	2
  37              		.section	.bss.sock_remained_size,"aw",%nobits
  38              		.align	2
  41              	sock_remained_size:
  42 0000 00000000 		.space	16
  42      00000000 
  42      00000000 
  42      00000000 
  43              		.global	sock_pack_info
  44              		.section	.bss.sock_pack_info,"aw",%nobits
  45              		.align	2
  48              	sock_pack_info:
  49 0000 00000000 		.space	8
  49      00000000 
  50              		.section	.text.socket,"ax",%progbits
  51              		.align	1
  52              		.global	socket
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	socket:
  58              	.LFB0:
  59              		.file 1 "ioLIB/socket.c"
   1:ioLIB/socket.c **** //*****************************************************************************
   2:ioLIB/socket.c **** //
   3:ioLIB/socket.c **** //! \file socket.c
   4:ioLIB/socket.c **** //! \brief SOCKET APIs Implements file.
   5:ioLIB/socket.c **** //! \details SOCKET APIs like as Berkeley Socket APIs. 
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 2


   6:ioLIB/socket.c **** //! \version 1.0.3
   7:ioLIB/socket.c **** //! \date 2013/10/21
   8:ioLIB/socket.c **** //! \par  Revision history
   9:ioLIB/socket.c **** //!       <2015/02/05> Notice
  10:ioLIB/socket.c **** //!        The version history is not updated after this point.
  11:ioLIB/socket.c **** //!        Download the latest version directly from GitHub. Please visit the our GitHub repository
  12:ioLIB/socket.c **** //!        >> https://github.com/Wiznet/ioLibrary_Driver
  13:ioLIB/socket.c **** //!       <2014/05/01> V1.0.3. Refer to M20140501
  14:ioLIB/socket.c **** //!         1. Implicit type casting -> Explicit type casting.
  15:ioLIB/socket.c **** //!         2. replace 0x01 with PACK_REMAINED in recvfrom()
  16:ioLIB/socket.c **** //!         3. Validation a destination ip in connect() & sendto(): 
  17:ioLIB/socket.c **** //!            It occurs a fatal error on converting unint32 address if uint8* addr parameter is no
  18:ioLIB/socket.c **** //!            Copy 4 byte addr value into temporary uint32 variable and then compares it.
  19:ioLIB/socket.c **** //!       <2013/12/20> V1.0.2 Refer to M20131220
  20:ioLIB/socket.c **** //!                    Remove Warning.
  21:ioLIB/socket.c **** //!       <2013/11/04> V1.0.1 2nd Release. Refer to "20131104".
  22:ioLIB/socket.c **** //!                    In sendto(), Add to clear timeout interrupt status (Sn_IR_TIMEOUT)
  23:ioLIB/socket.c **** //!       <2013/10/21> 1st Release
  24:ioLIB/socket.c **** //! \author MidnightCow
  25:ioLIB/socket.c **** //! \copyright
  26:ioLIB/socket.c **** //!
  27:ioLIB/socket.c **** //! Copyright (c)  2013, WIZnet Co., LTD.
  28:ioLIB/socket.c **** //! All rights reserved.
  29:ioLIB/socket.c **** //! 
  30:ioLIB/socket.c **** //! Redistribution and use in source and binary forms, with or without 
  31:ioLIB/socket.c **** //! modification, are permitted provided that the following conditions 
  32:ioLIB/socket.c **** //! are met: 
  33:ioLIB/socket.c **** //! 
  34:ioLIB/socket.c **** //!     * Redistributions of source code must retain the above copyright 
  35:ioLIB/socket.c **** //! notice, this list of conditions and the following disclaimer. 
  36:ioLIB/socket.c **** //!     * Redistributions in binary form must reproduce the above copyright
  37:ioLIB/socket.c **** //! notice, this list of conditions and the following disclaimer in the
  38:ioLIB/socket.c **** //! documentation and/or other materials provided with the distribution. 
  39:ioLIB/socket.c **** //!     * Neither the name of the <ORGANIZATION> nor the names of its 
  40:ioLIB/socket.c **** //! contributors may be used to endorse or promote products derived 
  41:ioLIB/socket.c **** //! from this software without specific prior written permission. 
  42:ioLIB/socket.c **** //! 
  43:ioLIB/socket.c **** //! THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  44:ioLIB/socket.c **** //! AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  45:ioLIB/socket.c **** //! IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  46:ioLIB/socket.c **** //! ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
  47:ioLIB/socket.c **** //! LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
  48:ioLIB/socket.c **** //! CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
  49:ioLIB/socket.c **** //! SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  50:ioLIB/socket.c **** //! INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  51:ioLIB/socket.c **** //! CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  52:ioLIB/socket.c **** //! ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
  53:ioLIB/socket.c **** //! THE POSSIBILITY OF SUCH DAMAGE.
  54:ioLIB/socket.c **** //
  55:ioLIB/socket.c **** //*****************************************************************************
  56:ioLIB/socket.c **** #include "socket.h"
  57:ioLIB/socket.c **** 
  58:ioLIB/socket.c **** //M20150401 : Typing Error
  59:ioLIB/socket.c **** //#define SOCK_ANY_PORT_NUM  0xC000;
  60:ioLIB/socket.c **** #define SOCK_ANY_PORT_NUM  0xC000
  61:ioLIB/socket.c **** 
  62:ioLIB/socket.c **** static uint16_t sock_any_port = SOCK_ANY_PORT_NUM;
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 3


  63:ioLIB/socket.c **** static uint16_t sock_io_mode = 0;
  64:ioLIB/socket.c **** static uint16_t sock_is_sending = 0;
  65:ioLIB/socket.c **** 
  66:ioLIB/socket.c **** static uint16_t sock_remained_size[_WIZCHIP_SOCK_NUM_] = {0,0,};
  67:ioLIB/socket.c **** 
  68:ioLIB/socket.c **** //M20150601 : For extern decleation
  69:ioLIB/socket.c **** //static uint8_t  sock_pack_info[_WIZCHIP_SOCK_NUM_] = {0,};
  70:ioLIB/socket.c **** uint8_t  sock_pack_info[_WIZCHIP_SOCK_NUM_] = {0,};
  71:ioLIB/socket.c **** //
  72:ioLIB/socket.c **** 
  73:ioLIB/socket.c **** #if _WIZCHIP_ == 5200
  74:ioLIB/socket.c ****    static uint16_t sock_next_rd[_WIZCHIP_SOCK_NUM_] ={0,};
  75:ioLIB/socket.c **** #endif
  76:ioLIB/socket.c **** 
  77:ioLIB/socket.c **** //A20150601 : For integrating with W5300
  78:ioLIB/socket.c **** #if _WIZCHIP_ == 5300
  79:ioLIB/socket.c ****    uint8_t sock_remained_byte[_WIZCHIP_SOCK_NUM_] = {0,}; // set by wiz_recv_data()
  80:ioLIB/socket.c **** #endif
  81:ioLIB/socket.c **** 
  82:ioLIB/socket.c **** 
  83:ioLIB/socket.c **** #define CHECK_SOCKNUM()   \
  84:ioLIB/socket.c ****    do{                    \
  85:ioLIB/socket.c ****       if(sn > _WIZCHIP_SOCK_NUM_) return SOCKERR_SOCKNUM;   \
  86:ioLIB/socket.c ****    }while(0);             \
  87:ioLIB/socket.c **** 
  88:ioLIB/socket.c **** #define CHECK_SOCKMODE(mode)  \
  89:ioLIB/socket.c ****    do{                     \
  90:ioLIB/socket.c ****       if((getSn_MR(sn) & 0x0F) != mode) return SOCKERR_SOCKMODE;  \
  91:ioLIB/socket.c ****    }while(0);              \
  92:ioLIB/socket.c **** 
  93:ioLIB/socket.c **** #define CHECK_SOCKINIT()   \
  94:ioLIB/socket.c ****    do{                     \
  95:ioLIB/socket.c ****       if((getSn_SR(sn) != SOCK_INIT)) return SOCKERR_SOCKINIT; \
  96:ioLIB/socket.c ****    }while(0);              \
  97:ioLIB/socket.c **** 
  98:ioLIB/socket.c **** #define CHECK_SOCKDATA()   \
  99:ioLIB/socket.c ****    do{                     \
 100:ioLIB/socket.c ****       if(len == 0) return SOCKERR_DATALEN;   \
 101:ioLIB/socket.c ****    }while(0);              \
 102:ioLIB/socket.c **** 
 103:ioLIB/socket.c **** 
 104:ioLIB/socket.c **** 
 105:ioLIB/socket.c **** int8_t socket(uint8_t sn, uint8_t protocol, uint16_t port, uint8_t flag)
 106:ioLIB/socket.c **** {
  60              		.loc 1 106 1
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 16
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 90B5     		push	{r4, r7, lr}
  65              	.LCFI0:
  66              		.cfi_def_cfa_offset 12
  67              		.cfi_offset 4, -12
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 85B0     		sub	sp, sp, #20
  71              	.LCFI1:
  72              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 4


  73 0004 00AF     		add	r7, sp, #0
  74              	.LCFI2:
  75              		.cfi_def_cfa_register 7
  76 0006 0446     		mov	r4, r0
  77 0008 0846     		mov	r0, r1
  78 000a 1146     		mov	r1, r2
  79 000c 1A46     		mov	r2, r3
  80 000e 2346     		mov	r3, r4
  81 0010 FB71     		strb	r3, [r7, #7]
  82 0012 0346     		mov	r3, r0
  83 0014 BB71     		strb	r3, [r7, #6]
  84 0016 0B46     		mov	r3, r1	@ movhi
  85 0018 BB80     		strh	r3, [r7, #4]	@ movhi
  86 001a 1346     		mov	r3, r2
  87 001c FB70     		strb	r3, [r7, #3]
 107:ioLIB/socket.c **** 	CHECK_SOCKNUM();
  88              		.loc 1 107 2
  89 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  90 0020 082B     		cmp	r3, #8
  91 0022 02D9     		bls	.L2
  92              		.loc 1 107 2 is_stmt 0 discriminator 1
  93 0024 4FF0FF33 		mov	r3, #-1
  94 0028 F2E0     		b	.L3
  95              	.L2:
 108:ioLIB/socket.c **** 	switch(protocol)
  96              		.loc 1 108 2 is_stmt 1
  97 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  98 002c 012B     		cmp	r3, #1
  99 002e 05D0     		beq	.L4
 100 0030 002B     		cmp	r3, #0
 101 0032 11DD     		ble	.L5
 102 0034 023B     		subs	r3, r3, #2
 103 0036 022B     		cmp	r3, #2
 104 0038 0ED8     		bhi	.L5
 109:ioLIB/socket.c **** 	{
 110:ioLIB/socket.c ****       case Sn_MR_TCP :
 111:ioLIB/socket.c ****          {
 112:ioLIB/socket.c ****             //M20150601 : Fixed the warning - taddr will never be NULL
 113:ioLIB/socket.c **** 		    /*
 114:ioLIB/socket.c ****             uint8_t taddr[4];
 115:ioLIB/socket.c ****             getSIPR(taddr);
 116:ioLIB/socket.c ****             */
 117:ioLIB/socket.c ****             uint32_t taddr;
 118:ioLIB/socket.c ****             getSIPR((uint8_t*)&taddr);
 119:ioLIB/socket.c ****             if(taddr == 0) return SOCKERR_SOCKINIT;
 120:ioLIB/socket.c **** 	    break;
 121:ioLIB/socket.c ****          }
 122:ioLIB/socket.c ****       case Sn_MR_UDP :
 123:ioLIB/socket.c ****       case Sn_MR_MACRAW :
 124:ioLIB/socket.c **** 	  case Sn_MR_IPRAW :
 125:ioLIB/socket.c ****          break;
 105              		.loc 1 125 10
 106 003a 11E0     		b	.L8
 107              	.L4:
 108              	.LBB2:
 118:ioLIB/socket.c ****             if(taddr == 0) return SOCKERR_SOCKINIT;
 109              		.loc 1 118 13
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 5


 110 003c 07F10C03 		add	r3, r7, #12
 111 0040 0422     		movs	r2, #4
 112 0042 1946     		mov	r1, r3
 113 0044 4FF47060 		mov	r0, #3840
 114 0048 FFF7FEFF 		bl	WIZCHIP_READ_BUF
 119:ioLIB/socket.c **** 	    break;
 115              		.loc 1 119 22
 116 004c FB68     		ldr	r3, [r7, #12]
 119:ioLIB/socket.c **** 	    break;
 117              		.loc 1 119 15
 118 004e 002B     		cmp	r3, #0
 119 0050 05D1     		bne	.L20
 119:ioLIB/socket.c **** 	    break;
 120              		.loc 1 119 35 discriminator 1
 121 0052 6FF00203 		mvn	r3, #2
 122 0056 DBE0     		b	.L3
 123              	.L5:
 124              	.LBE2:
 126:ioLIB/socket.c ****    #if ( _WIZCHIP_ < 5200 )
 127:ioLIB/socket.c ****       case Sn_MR_PPPoE :
 128:ioLIB/socket.c ****          break;
 129:ioLIB/socket.c ****    #endif
 130:ioLIB/socket.c ****       default :
 131:ioLIB/socket.c ****          return SOCKERR_SOCKMODE;
 125              		.loc 1 131 17
 126 0058 6FF00403 		mvn	r3, #4
 127 005c D8E0     		b	.L3
 128              	.L20:
 129              	.LBB3:
 120:ioLIB/socket.c ****          }
 130              		.loc 1 120 6
 131 005e 00BF     		nop
 132              	.L8:
 133              	.LBE3:
 132:ioLIB/socket.c **** 	}
 133:ioLIB/socket.c **** 	//M20150601 : For SF_TCP_ALIGN & W5300
 134:ioLIB/socket.c **** 	//if((flag & 0x06) != 0) return SOCKERR_SOCKFLAG;
 135:ioLIB/socket.c **** 	if((flag & 0x04) != 0) return SOCKERR_SOCKFLAG;
 134              		.loc 1 135 11
 135 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 136 0062 03F00403 		and	r3, r3, #4
 137              		.loc 1 135 4
 138 0066 002B     		cmp	r3, #0
 139 0068 02D0     		beq	.L9
 140              		.loc 1 135 32 discriminator 1
 141 006a 6FF00503 		mvn	r3, #5
 142 006e CFE0     		b	.L3
 143              	.L9:
 136:ioLIB/socket.c **** #if _WIZCHIP_ == 5200
 137:ioLIB/socket.c ****    if(flag & 0x10) return SOCKERR_SOCKFLAG;
 138:ioLIB/socket.c **** #endif
 139:ioLIB/socket.c **** 	   
 140:ioLIB/socket.c **** 	if(flag != 0)
 144              		.loc 1 140 4
 145 0070 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 146 0072 002B     		cmp	r3, #0
 147 0074 25D0     		beq	.L21
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 6


 141:ioLIB/socket.c **** 	{
 142:ioLIB/socket.c ****    	switch(protocol)
 148              		.loc 1 142 5
 149 0076 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 150 0078 012B     		cmp	r3, #1
 151 007a 02D0     		beq	.L11
 152 007c 022B     		cmp	r3, #2
 153 007e 08D0     		beq	.L12
 143:ioLIB/socket.c ****    	{
 144:ioLIB/socket.c ****    	   case Sn_MR_TCP:
 145:ioLIB/socket.c ****    		  //M20150601 :  For SF_TCP_ALIGN & W5300
 146:ioLIB/socket.c ****           #if _WIZCHIP_ == 5300
 147:ioLIB/socket.c ****    		     if((flag & (SF_TCP_NODELAY|SF_IO_NONBLOCK|SF_TCP_ALIGN))==0) return SOCKERR_SOCKFLAG;
 148:ioLIB/socket.c ****           #else
 149:ioLIB/socket.c ****    		     if((flag & (SF_TCP_NODELAY|SF_IO_NONBLOCK))==0) return SOCKERR_SOCKFLAG;
 150:ioLIB/socket.c ****           #endif
 151:ioLIB/socket.c **** 
 152:ioLIB/socket.c ****    	      break;
 153:ioLIB/socket.c ****    	   case Sn_MR_UDP:
 154:ioLIB/socket.c ****    	      if(flag & SF_IGMP_VER2)
 155:ioLIB/socket.c ****    	      {
 156:ioLIB/socket.c ****    	         if((flag & SF_MULTI_ENABLE)==0) return SOCKERR_SOCKFLAG;
 157:ioLIB/socket.c ****    	      }
 158:ioLIB/socket.c ****    	      #if _WIZCHIP_ == 5500
 159:ioLIB/socket.c ****       	      if(flag & SF_UNI_BLOCK)
 160:ioLIB/socket.c ****       	      {
 161:ioLIB/socket.c ****       	         if((flag & SF_MULTI_ENABLE) == 0) return SOCKERR_SOCKFLAG;
 162:ioLIB/socket.c ****       	      }
 163:ioLIB/socket.c ****    	      #endif
 164:ioLIB/socket.c ****    	      break;
 165:ioLIB/socket.c ****    	   default:
 166:ioLIB/socket.c ****    	      break;
 154              		.loc 1 166 11
 155 0080 24E0     		b	.L10
 156              	.L11:
 149:ioLIB/socket.c ****           #endif
 157              		.loc 1 149 20
 158 0082 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 159 0084 03F02103 		and	r3, r3, #33
 149:ioLIB/socket.c ****           #endif
 160              		.loc 1 149 13
 161 0088 002B     		cmp	r3, #0
 162 008a 1CD1     		bne	.L22
 149:ioLIB/socket.c ****           #endif
 163              		.loc 1 149 66 discriminator 1
 164 008c 6FF00503 		mvn	r3, #5
 165 0090 BEE0     		b	.L3
 166              	.L12:
 154:ioLIB/socket.c ****    	      {
 167              		.loc 1 154 19
 168 0092 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 169 0094 03F02003 		and	r3, r3, #32
 154:ioLIB/socket.c ****    	      {
 170              		.loc 1 154 13
 171 0098 002B     		cmp	r3, #0
 172 009a 06D0     		beq	.L15
 156:ioLIB/socket.c ****    	      }
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 7


 173              		.loc 1 156 41
 174 009c 97F90330 		ldrsb	r3, [r7, #3]
 156:ioLIB/socket.c ****    	      }
 175              		.loc 1 156 16
 176 00a0 002B     		cmp	r3, #0
 177 00a2 02DB     		blt	.L15
 156:ioLIB/socket.c ****    	      }
 178              		.loc 1 156 53 discriminator 1
 179 00a4 6FF00503 		mvn	r3, #5
 180 00a8 B2E0     		b	.L3
 181              	.L15:
 159:ioLIB/socket.c ****       	      {
 182              		.loc 1 159 22
 183 00aa FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 184 00ac 03F01003 		and	r3, r3, #16
 159:ioLIB/socket.c ****       	      {
 185              		.loc 1 159 16
 186 00b0 002B     		cmp	r3, #0
 187 00b2 0AD0     		beq	.L23
 161:ioLIB/socket.c ****       	      }
 188              		.loc 1 161 45
 189 00b4 97F90330 		ldrsb	r3, [r7, #3]
 161:ioLIB/socket.c ****       	      }
 190              		.loc 1 161 19
 191 00b8 002B     		cmp	r3, #0
 192 00ba 06DB     		blt	.L23
 161:ioLIB/socket.c ****       	      }
 193              		.loc 1 161 58 discriminator 1
 194 00bc 6FF00503 		mvn	r3, #5
 195 00c0 A6E0     		b	.L3
 196              	.L21:
 167:ioLIB/socket.c ****    	}
 168:ioLIB/socket.c ****    }
 197              		.loc 1 168 4
 198 00c2 00BF     		nop
 199 00c4 02E0     		b	.L10
 200              	.L22:
 152:ioLIB/socket.c ****    	   case Sn_MR_UDP:
 201              		.loc 1 152 11
 202 00c6 00BF     		nop
 203 00c8 00E0     		b	.L10
 204              	.L23:
 164:ioLIB/socket.c ****    	   default:
 205              		.loc 1 164 11
 206 00ca 00BF     		nop
 207              	.L10:
 169:ioLIB/socket.c **** 	close(sn);
 208              		.loc 1 169 2
 209 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 210 00ce 1846     		mov	r0, r3
 211 00d0 FFF7FEFF 		bl	close
 170:ioLIB/socket.c **** 	//M20150601
 171:ioLIB/socket.c **** 	#if _WIZCHIP_ == 5300
 172:ioLIB/socket.c **** 	   setSn_MR(sn, ((uint16_t)(protocol | (flag & 0xF0))) | (((uint16_t)(flag & 0x02)) << 7) );
 173:ioLIB/socket.c ****     #else
 174:ioLIB/socket.c **** 	   setSn_MR(sn, (protocol | (flag & 0xF0)));
 212              		.loc 1 174 5
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 8


 213 00d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 214 00d6 9B00     		lsls	r3, r3, #2
 215 00d8 0133     		adds	r3, r3, #1
 216 00da DB00     		lsls	r3, r3, #3
 217 00dc 1846     		mov	r0, r3
 218 00de 97F90330 		ldrsb	r3, [r7, #3]
 219 00e2 23F00F03 		bic	r3, r3, #15
 220 00e6 5AB2     		sxtb	r2, r3
 221 00e8 97F90630 		ldrsb	r3, [r7, #6]
 222 00ec 1343     		orrs	r3, r3, r2
 223 00ee 5BB2     		sxtb	r3, r3
 224 00f0 DBB2     		uxtb	r3, r3
 225 00f2 1946     		mov	r1, r3
 226 00f4 FFF7FEFF 		bl	WIZCHIP_WRITE
 175:ioLIB/socket.c ****     #endif
 176:ioLIB/socket.c **** 	if(!port)
 227              		.loc 1 176 4
 228 00f8 BB88     		ldrh	r3, [r7, #4]
 229 00fa 002B     		cmp	r3, #0
 230 00fc 10D1     		bne	.L17
 177:ioLIB/socket.c **** 	{
 178:ioLIB/socket.c **** 	   port = sock_any_port++;
 231              		.loc 1 178 25
 232 00fe 464B     		ldr	r3, .L24
 233 0100 1B88     		ldrh	r3, [r3]
 234 0102 5A1C     		adds	r2, r3, #1
 235 0104 91B2     		uxth	r1, r2
 236 0106 444A     		ldr	r2, .L24
 237 0108 1180     		strh	r1, [r2]	@ movhi
 238              		.loc 1 178 10
 239 010a BB80     		strh	r3, [r7, #4]	@ movhi
 179:ioLIB/socket.c **** 	   if(sock_any_port == 0xFFF0) sock_any_port = SOCK_ANY_PORT_NUM;
 240              		.loc 1 179 22
 241 010c 424B     		ldr	r3, .L24
 242 010e 1B88     		ldrh	r3, [r3]
 243              		.loc 1 179 7
 244 0110 4FF6F072 		movw	r2, #65520
 245 0114 9342     		cmp	r3, r2
 246 0116 03D1     		bne	.L17
 247              		.loc 1 179 47 discriminator 1
 248 0118 3F4B     		ldr	r3, .L24
 249 011a 4FF44042 		mov	r2, #49152
 250 011e 1A80     		strh	r2, [r3]	@ movhi
 251              	.L17:
 180:ioLIB/socket.c **** 	}
 181:ioLIB/socket.c ****    setSn_PORT(sn,port);	
 252              		.loc 1 181 4
 253 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 254 0122 9B00     		lsls	r3, r3, #2
 255 0124 0133     		adds	r3, r3, #1
 256 0126 DB00     		lsls	r3, r3, #3
 257 0128 03F58063 		add	r3, r3, #1024
 258 012c 1A46     		mov	r2, r3
 259 012e BB88     		ldrh	r3, [r7, #4]
 260 0130 1B0A     		lsrs	r3, r3, #8
 261 0132 9BB2     		uxth	r3, r3
 262 0134 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 9


 263 0136 1946     		mov	r1, r3
 264 0138 1046     		mov	r0, r2
 265 013a FFF7FEFF 		bl	WIZCHIP_WRITE
 266 013e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 267 0140 9B00     		lsls	r3, r3, #2
 268 0142 0133     		adds	r3, r3, #1
 269 0144 DB00     		lsls	r3, r3, #3
 270 0146 03F5A063 		add	r3, r3, #1280
 271 014a 1A46     		mov	r2, r3
 272 014c BB88     		ldrh	r3, [r7, #4]	@ movhi
 273 014e DBB2     		uxtb	r3, r3
 274 0150 1946     		mov	r1, r3
 275 0152 1046     		mov	r0, r2
 276 0154 FFF7FEFF 		bl	WIZCHIP_WRITE
 182:ioLIB/socket.c ****    setSn_CR(sn,Sn_CR_OPEN);
 277              		.loc 1 182 4
 278 0158 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 279 015a 9B00     		lsls	r3, r3, #2
 280 015c 0133     		adds	r3, r3, #1
 281 015e DB00     		lsls	r3, r3, #3
 282 0160 03F58073 		add	r3, r3, #256
 283 0164 0121     		movs	r1, #1
 284 0166 1846     		mov	r0, r3
 285 0168 FFF7FEFF 		bl	WIZCHIP_WRITE
 183:ioLIB/socket.c ****    while(getSn_CR(sn));
 286              		.loc 1 183 9
 287 016c 00BF     		nop
 288              	.L18:
 289              		.loc 1 183 10 discriminator 1
 290 016e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 291 0170 9B00     		lsls	r3, r3, #2
 292 0172 0133     		adds	r3, r3, #1
 293 0174 DB00     		lsls	r3, r3, #3
 294 0176 03F58073 		add	r3, r3, #256
 295 017a 1846     		mov	r0, r3
 296 017c FFF7FEFF 		bl	WIZCHIP_READ
 297 0180 0346     		mov	r3, r0
 298              		.loc 1 183 9 discriminator 1
 299 0182 002B     		cmp	r3, #0
 300 0184 F3D1     		bne	.L18
 184:ioLIB/socket.c ****    //A20150401 : For release the previous sock_io_mode
 185:ioLIB/socket.c ****    sock_io_mode &= ~(1 <<sn);
 301              		.loc 1 185 24
 302 0186 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 303 0188 0122     		movs	r2, #1
 304 018a 02FA03F3 		lsl	r3, r2, r3
 305              		.loc 1 185 17
 306 018e 1BB2     		sxth	r3, r3
 307 0190 DB43     		mvns	r3, r3
 308 0192 1AB2     		sxth	r2, r3
 309 0194 214B     		ldr	r3, .L24+4
 310 0196 1B88     		ldrh	r3, [r3]
 311 0198 1BB2     		sxth	r3, r3
 312 019a 1340     		ands	r3, r3, r2
 313 019c 1BB2     		sxth	r3, r3
 314 019e 9AB2     		uxth	r2, r3
 315 01a0 1E4B     		ldr	r3, .L24+4
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 10


 316 01a2 1A80     		strh	r2, [r3]	@ movhi
 186:ioLIB/socket.c ****    //
 187:ioLIB/socket.c **** 	sock_io_mode |= ((flag & SF_IO_NONBLOCK) << sn);   
 317              		.loc 1 187 25
 318 01a4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 319 01a6 03F00102 		and	r2, r3, #1
 320              		.loc 1 187 43
 321 01aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 322 01ac 02FA03F3 		lsl	r3, r2, r3
 323              		.loc 1 187 15
 324 01b0 1AB2     		sxth	r2, r3
 325 01b2 1A4B     		ldr	r3, .L24+4
 326 01b4 1B88     		ldrh	r3, [r3]
 327 01b6 1BB2     		sxth	r3, r3
 328 01b8 1343     		orrs	r3, r3, r2
 329 01ba 1BB2     		sxth	r3, r3
 330 01bc 9AB2     		uxth	r2, r3
 331 01be 174B     		ldr	r3, .L24+4
 332 01c0 1A80     		strh	r2, [r3]	@ movhi
 188:ioLIB/socket.c ****    sock_is_sending &= ~(1<<sn);
 333              		.loc 1 188 26
 334 01c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 335 01c4 0122     		movs	r2, #1
 336 01c6 02FA03F3 		lsl	r3, r2, r3
 337              		.loc 1 188 20
 338 01ca 1BB2     		sxth	r3, r3
 339 01cc DB43     		mvns	r3, r3
 340 01ce 1AB2     		sxth	r2, r3
 341 01d0 134B     		ldr	r3, .L24+8
 342 01d2 1B88     		ldrh	r3, [r3]
 343 01d4 1BB2     		sxth	r3, r3
 344 01d6 1340     		ands	r3, r3, r2
 345 01d8 1BB2     		sxth	r3, r3
 346 01da 9AB2     		uxth	r2, r3
 347 01dc 104B     		ldr	r3, .L24+8
 348 01de 1A80     		strh	r2, [r3]	@ movhi
 189:ioLIB/socket.c ****    sock_remained_size[sn] = 0;
 349              		.loc 1 189 22
 350 01e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 351              		.loc 1 189 27
 352 01e2 104A     		ldr	r2, .L24+12
 353 01e4 0021     		movs	r1, #0
 354 01e6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 190:ioLIB/socket.c ****    //M20150601 : repalce 0 with PACK_COMPLETED
 191:ioLIB/socket.c ****    //sock_pack_info[sn] = 0;
 192:ioLIB/socket.c ****    sock_pack_info[sn] = PACK_COMPLETED;
 355              		.loc 1 192 18
 356 01ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 357              		.loc 1 192 23
 358 01ec 0E4A     		ldr	r2, .L24+16
 359 01ee 0021     		movs	r1, #0
 360 01f0 D154     		strb	r1, [r2, r3]
 193:ioLIB/socket.c ****    //
 194:ioLIB/socket.c ****    while(getSn_SR(sn) == SOCK_CLOSED);
 361              		.loc 1 194 9
 362 01f2 00BF     		nop
 363              	.L19:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 11


 364              		.loc 1 194 10 discriminator 1
 365 01f4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 366 01f6 9B00     		lsls	r3, r3, #2
 367 01f8 0133     		adds	r3, r3, #1
 368 01fa DB00     		lsls	r3, r3, #3
 369 01fc 03F54073 		add	r3, r3, #768
 370 0200 1846     		mov	r0, r3
 371 0202 FFF7FEFF 		bl	WIZCHIP_READ
 372 0206 0346     		mov	r3, r0
 373              		.loc 1 194 9 discriminator 1
 374 0208 002B     		cmp	r3, #0
 375 020a F3D0     		beq	.L19
 195:ioLIB/socket.c ****    return (int8_t)sn;
 376              		.loc 1 195 11
 377 020c 97F90730 		ldrsb	r3, [r7, #7]
 378              	.L3:
 196:ioLIB/socket.c **** }	   
 379              		.loc 1 196 1
 380 0210 1846     		mov	r0, r3
 381 0212 1437     		adds	r7, r7, #20
 382              	.LCFI3:
 383              		.cfi_def_cfa_offset 12
 384 0214 BD46     		mov	sp, r7
 385              	.LCFI4:
 386              		.cfi_def_cfa_register 13
 387              		@ sp needed
 388 0216 90BD     		pop	{r4, r7, pc}
 389              	.L25:
 390              		.align	2
 391              	.L24:
 392 0218 00000000 		.word	sock_any_port
 393 021c 00000000 		.word	sock_io_mode
 394 0220 00000000 		.word	sock_is_sending
 395 0224 00000000 		.word	sock_remained_size
 396 0228 00000000 		.word	sock_pack_info
 397              		.cfi_endproc
 398              	.LFE0:
 400              		.section	.text.close,"ax",%progbits
 401              		.align	1
 402              		.global	close
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 407              	close:
 408              	.LFB1:
 197:ioLIB/socket.c **** 
 198:ioLIB/socket.c **** int8_t close(uint8_t sn)
 199:ioLIB/socket.c **** {
 409              		.loc 1 199 1
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 8
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              	.LCFI5:
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 7, -8
 417              		.cfi_offset 14, -4
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 12


 418 0002 82B0     		sub	sp, sp, #8
 419              	.LCFI6:
 420              		.cfi_def_cfa_offset 16
 421 0004 00AF     		add	r7, sp, #0
 422              	.LCFI7:
 423              		.cfi_def_cfa_register 7
 424 0006 0346     		mov	r3, r0
 425 0008 FB71     		strb	r3, [r7, #7]
 200:ioLIB/socket.c **** 	CHECK_SOCKNUM();
 426              		.loc 1 200 2
 427 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 428 000c 082B     		cmp	r3, #8
 429 000e 02D9     		bls	.L27
 430              		.loc 1 200 2 is_stmt 0 discriminator 1
 431 0010 4FF0FF33 		mov	r3, #-1
 432 0014 55E0     		b	.L28
 433              	.L27:
 201:ioLIB/socket.c **** //A20160426 : Applied the erratum 1 of W5300
 202:ioLIB/socket.c **** #if   (_WIZCHIP_ == 5300) 
 203:ioLIB/socket.c ****    //M20160503 : Wrong socket parameter. s -> sn 
 204:ioLIB/socket.c ****    //if( ((getSn_MR(s)& 0x0F) == Sn_MR_TCP) && (getSn_TX_FSR(s) != getSn_TxMAX(s)) ) 
 205:ioLIB/socket.c ****    if( ((getSn_MR(sn)& 0x0F) == Sn_MR_TCP) && (getSn_TX_FSR(sn) != getSn_TxMAX(sn)) ) 
 206:ioLIB/socket.c ****    { 
 207:ioLIB/socket.c ****       uint8_t destip[4] = {0, 0, 0, 1};
 208:ioLIB/socket.c ****       // TODO
 209:ioLIB/socket.c ****       // You can wait for completing to sending data;
 210:ioLIB/socket.c ****       // wait about 1 second;
 211:ioLIB/socket.c ****       // if you have completed to send data, skip the code of erratum 1
 212:ioLIB/socket.c ****       // ex> wait_1s();
 213:ioLIB/socket.c ****       //     if (getSn_TX_FSR(s) == getSn_TxMAX(s)) continue;
 214:ioLIB/socket.c ****       // 
 215:ioLIB/socket.c ****       //M20160503 : The socket() of close() calls close() itself again. It occures a infinite loop 
 216:ioLIB/socket.c ****       //socket(s,Sn_MR_UDP,0x3000,0);
 217:ioLIB/socket.c ****       //sendto(s,destip,1,destip,0x3000); // send the dummy data to an unknown destination(0.0.0.1)
 218:ioLIB/socket.c ****       setSn_MR(sn,Sn_MR_UDP);
 219:ioLIB/socket.c ****       setSn_PORTR(sn, 0x3000);
 220:ioLIB/socket.c ****       setSn_CR(sn,Sn_CR_OPEN);
 221:ioLIB/socket.c ****       while(getSn_CR(sn) != 0);
 222:ioLIB/socket.c ****       while(getSn_SR(sn) != SOCK_UDP);
 223:ioLIB/socket.c ****       sendto(sn,destip,1,destip,0x3000); // send the dummy data to an unknown destination(0.0.0.1).
 224:ioLIB/socket.c ****    };   
 225:ioLIB/socket.c **** #endif 
 226:ioLIB/socket.c **** 	setSn_CR(sn,Sn_CR_CLOSE);
 434              		.loc 1 226 2 is_stmt 1
 435 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 436 0018 9B00     		lsls	r3, r3, #2
 437 001a 0133     		adds	r3, r3, #1
 438 001c DB00     		lsls	r3, r3, #3
 439 001e 03F58073 		add	r3, r3, #256
 440 0022 1021     		movs	r1, #16
 441 0024 1846     		mov	r0, r3
 442 0026 FFF7FEFF 		bl	WIZCHIP_WRITE
 227:ioLIB/socket.c ****    /* wait to process the command... */
 228:ioLIB/socket.c **** 	while( getSn_CR(sn) );
 443              		.loc 1 228 7
 444 002a 00BF     		nop
 445              	.L29:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 13


 446              		.loc 1 228 9 discriminator 1
 447 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 448 002e 9B00     		lsls	r3, r3, #2
 449 0030 0133     		adds	r3, r3, #1
 450 0032 DB00     		lsls	r3, r3, #3
 451 0034 03F58073 		add	r3, r3, #256
 452 0038 1846     		mov	r0, r3
 453 003a FFF7FEFF 		bl	WIZCHIP_READ
 454 003e 0346     		mov	r3, r0
 455              		.loc 1 228 7 discriminator 1
 456 0040 002B     		cmp	r3, #0
 457 0042 F3D1     		bne	.L29
 229:ioLIB/socket.c **** 	/* clear all interrupt of the socket. */
 230:ioLIB/socket.c **** 	setSn_IR(sn, 0xFF);
 458              		.loc 1 230 2
 459 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 460 0046 9B00     		lsls	r3, r3, #2
 461 0048 0133     		adds	r3, r3, #1
 462 004a DB00     		lsls	r3, r3, #3
 463 004c 03F50073 		add	r3, r3, #512
 464 0050 1F21     		movs	r1, #31
 465 0052 1846     		mov	r0, r3
 466 0054 FFF7FEFF 		bl	WIZCHIP_WRITE
 231:ioLIB/socket.c **** 	//A20150401 : Release the sock_io_mode of socket n.
 232:ioLIB/socket.c **** 	sock_io_mode &= ~(1<<sn);
 467              		.loc 1 232 21
 468 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 469 005a 0122     		movs	r2, #1
 470 005c 02FA03F3 		lsl	r3, r2, r3
 471              		.loc 1 232 15
 472 0060 1BB2     		sxth	r3, r3
 473 0062 DB43     		mvns	r3, r3
 474 0064 1AB2     		sxth	r2, r3
 475 0066 194B     		ldr	r3, .L31
 476 0068 1B88     		ldrh	r3, [r3]
 477 006a 1BB2     		sxth	r3, r3
 478 006c 1340     		ands	r3, r3, r2
 479 006e 1BB2     		sxth	r3, r3
 480 0070 9AB2     		uxth	r2, r3
 481 0072 164B     		ldr	r3, .L31
 482 0074 1A80     		strh	r2, [r3]	@ movhi
 233:ioLIB/socket.c **** 	//
 234:ioLIB/socket.c **** 	sock_is_sending &= ~(1<<sn);
 483              		.loc 1 234 24
 484 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 485 0078 0122     		movs	r2, #1
 486 007a 02FA03F3 		lsl	r3, r2, r3
 487              		.loc 1 234 18
 488 007e 1BB2     		sxth	r3, r3
 489 0080 DB43     		mvns	r3, r3
 490 0082 1AB2     		sxth	r2, r3
 491 0084 124B     		ldr	r3, .L31+4
 492 0086 1B88     		ldrh	r3, [r3]
 493 0088 1BB2     		sxth	r3, r3
 494 008a 1340     		ands	r3, r3, r2
 495 008c 1BB2     		sxth	r3, r3
 496 008e 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 14


 497 0090 0F4B     		ldr	r3, .L31+4
 498 0092 1A80     		strh	r2, [r3]	@ movhi
 235:ioLIB/socket.c **** 	sock_remained_size[sn] = 0;
 499              		.loc 1 235 20
 500 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 501              		.loc 1 235 25
 502 0096 0F4A     		ldr	r2, .L31+8
 503 0098 0021     		movs	r1, #0
 504 009a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 236:ioLIB/socket.c **** 	sock_pack_info[sn] = 0;
 505              		.loc 1 236 16
 506 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 507              		.loc 1 236 21
 508 00a0 0D4A     		ldr	r2, .L31+12
 509 00a2 0021     		movs	r1, #0
 510 00a4 D154     		strb	r1, [r2, r3]
 237:ioLIB/socket.c **** 	while(getSn_SR(sn) != SOCK_CLOSED);
 511              		.loc 1 237 7
 512 00a6 00BF     		nop
 513              	.L30:
 514              		.loc 1 237 8 discriminator 1
 515 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 516 00aa 9B00     		lsls	r3, r3, #2
 517 00ac 0133     		adds	r3, r3, #1
 518 00ae DB00     		lsls	r3, r3, #3
 519 00b0 03F54073 		add	r3, r3, #768
 520 00b4 1846     		mov	r0, r3
 521 00b6 FFF7FEFF 		bl	WIZCHIP_READ
 522 00ba 0346     		mov	r3, r0
 523              		.loc 1 237 7 discriminator 1
 524 00bc 002B     		cmp	r3, #0
 525 00be F3D1     		bne	.L30
 238:ioLIB/socket.c **** 	return SOCK_OK;
 526              		.loc 1 238 9
 527 00c0 0123     		movs	r3, #1
 528              	.L28:
 239:ioLIB/socket.c **** }
 529              		.loc 1 239 1
 530 00c2 1846     		mov	r0, r3
 531 00c4 0837     		adds	r7, r7, #8
 532              	.LCFI8:
 533              		.cfi_def_cfa_offset 8
 534 00c6 BD46     		mov	sp, r7
 535              	.LCFI9:
 536              		.cfi_def_cfa_register 13
 537              		@ sp needed
 538 00c8 80BD     		pop	{r7, pc}
 539              	.L32:
 540 00ca 00BF     		.align	2
 541              	.L31:
 542 00cc 00000000 		.word	sock_io_mode
 543 00d0 00000000 		.word	sock_is_sending
 544 00d4 00000000 		.word	sock_remained_size
 545 00d8 00000000 		.word	sock_pack_info
 546              		.cfi_endproc
 547              	.LFE1:
 549              		.section	.text.listen,"ax",%progbits
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 15


 550              		.align	1
 551              		.global	listen
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 556              	listen:
 557              	.LFB2:
 240:ioLIB/socket.c **** 
 241:ioLIB/socket.c **** int8_t listen(uint8_t sn)
 242:ioLIB/socket.c **** {
 558              		.loc 1 242 1
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 8
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562 0000 80B5     		push	{r7, lr}
 563              	.LCFI10:
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 82B0     		sub	sp, sp, #8
 568              	.LCFI11:
 569              		.cfi_def_cfa_offset 16
 570 0004 00AF     		add	r7, sp, #0
 571              	.LCFI12:
 572              		.cfi_def_cfa_register 7
 573 0006 0346     		mov	r3, r0
 574 0008 FB71     		strb	r3, [r7, #7]
 243:ioLIB/socket.c **** 	CHECK_SOCKNUM();
 575              		.loc 1 243 2
 576 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 577 000c 082B     		cmp	r3, #8
 578 000e 02D9     		bls	.L34
 579              		.loc 1 243 2 is_stmt 0 discriminator 1
 580 0010 4FF0FF33 		mov	r3, #-1
 581 0014 49E0     		b	.L35
 582              	.L34:
 244:ioLIB/socket.c ****    CHECK_SOCKMODE(Sn_MR_TCP);
 583              		.loc 1 244 4 is_stmt 1
 584 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 585 0018 9B00     		lsls	r3, r3, #2
 586 001a 0133     		adds	r3, r3, #1
 587 001c DB00     		lsls	r3, r3, #3
 588 001e 1846     		mov	r0, r3
 589 0020 FFF7FEFF 		bl	WIZCHIP_READ
 590 0024 0346     		mov	r3, r0
 591 0026 03F00F03 		and	r3, r3, #15
 592 002a 012B     		cmp	r3, #1
 593 002c 02D0     		beq	.L36
 594              		.loc 1 244 4 is_stmt 0 discriminator 1
 595 002e 6FF00403 		mvn	r3, #4
 596 0032 3AE0     		b	.L35
 597              	.L36:
 245:ioLIB/socket.c **** 	CHECK_SOCKINIT();
 598              		.loc 1 245 2 is_stmt 1
 599 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 600 0036 9B00     		lsls	r3, r3, #2
 601 0038 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 16


 602 003a DB00     		lsls	r3, r3, #3
 603 003c 03F54073 		add	r3, r3, #768
 604 0040 1846     		mov	r0, r3
 605 0042 FFF7FEFF 		bl	WIZCHIP_READ
 606 0046 0346     		mov	r3, r0
 607 0048 132B     		cmp	r3, #19
 608 004a 02D0     		beq	.L37
 609              		.loc 1 245 2 is_stmt 0 discriminator 1
 610 004c 6FF00203 		mvn	r3, #2
 611 0050 2BE0     		b	.L35
 612              	.L37:
 246:ioLIB/socket.c **** 	setSn_CR(sn,Sn_CR_LISTEN);
 613              		.loc 1 246 2 is_stmt 1
 614 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 615 0054 9B00     		lsls	r3, r3, #2
 616 0056 0133     		adds	r3, r3, #1
 617 0058 DB00     		lsls	r3, r3, #3
 618 005a 03F58073 		add	r3, r3, #256
 619 005e 0221     		movs	r1, #2
 620 0060 1846     		mov	r0, r3
 621 0062 FFF7FEFF 		bl	WIZCHIP_WRITE
 247:ioLIB/socket.c **** 	while(getSn_CR(sn));
 622              		.loc 1 247 7
 623 0066 00BF     		nop
 624              	.L38:
 625              		.loc 1 247 8 discriminator 1
 626 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 627 006a 9B00     		lsls	r3, r3, #2
 628 006c 0133     		adds	r3, r3, #1
 629 006e DB00     		lsls	r3, r3, #3
 630 0070 03F58073 		add	r3, r3, #256
 631 0074 1846     		mov	r0, r3
 632 0076 FFF7FEFF 		bl	WIZCHIP_READ
 633 007a 0346     		mov	r3, r0
 634              		.loc 1 247 7 discriminator 1
 635 007c 002B     		cmp	r3, #0
 636 007e F3D1     		bne	.L38
 248:ioLIB/socket.c ****    while(getSn_SR(sn) != SOCK_LISTEN)
 637              		.loc 1 248 9
 638 0080 06E0     		b	.L41
 639              	.L40:
 249:ioLIB/socket.c ****    {
 250:ioLIB/socket.c ****          close(sn);
 640              		.loc 1 250 10
 641 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 642 0084 1846     		mov	r0, r3
 643 0086 FFF7FEFF 		bl	close
 251:ioLIB/socket.c ****          return SOCKERR_SOCKCLOSED;
 644              		.loc 1 251 17
 645 008a 6FF00303 		mvn	r3, #3
 646 008e 0CE0     		b	.L35
 647              	.L41:
 248:ioLIB/socket.c ****    while(getSn_SR(sn) != SOCK_LISTEN)
 648              		.loc 1 248 10
 649 0090 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 650 0092 9B00     		lsls	r3, r3, #2
 651 0094 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 17


 652 0096 DB00     		lsls	r3, r3, #3
 653 0098 03F54073 		add	r3, r3, #768
 654 009c 1846     		mov	r0, r3
 655 009e FFF7FEFF 		bl	WIZCHIP_READ
 656 00a2 0346     		mov	r3, r0
 248:ioLIB/socket.c ****    while(getSn_SR(sn) != SOCK_LISTEN)
 657              		.loc 1 248 9
 658 00a4 142B     		cmp	r3, #20
 659 00a6 ECD1     		bne	.L40
 252:ioLIB/socket.c ****    }
 253:ioLIB/socket.c ****    return SOCK_OK;
 660              		.loc 1 253 11
 661 00a8 0123     		movs	r3, #1
 662              	.L35:
 254:ioLIB/socket.c **** }
 663              		.loc 1 254 1
 664 00aa 1846     		mov	r0, r3
 665 00ac 0837     		adds	r7, r7, #8
 666              	.LCFI13:
 667              		.cfi_def_cfa_offset 8
 668 00ae BD46     		mov	sp, r7
 669              	.LCFI14:
 670              		.cfi_def_cfa_register 13
 671              		@ sp needed
 672 00b0 80BD     		pop	{r7, pc}
 673              		.cfi_endproc
 674              	.LFE2:
 676              		.section	.text.connect,"ax",%progbits
 677              		.align	1
 678              		.global	connect
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 683              	connect:
 684              	.LFB3:
 255:ioLIB/socket.c **** 
 256:ioLIB/socket.c **** 
 257:ioLIB/socket.c **** int8_t connect(uint8_t sn, uint8_t * addr, uint16_t port)
 258:ioLIB/socket.c **** {
 685              		.loc 1 258 1
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 16
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689 0000 80B5     		push	{r7, lr}
 690              	.LCFI15:
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 7, -8
 693              		.cfi_offset 14, -4
 694 0002 84B0     		sub	sp, sp, #16
 695              	.LCFI16:
 696              		.cfi_def_cfa_offset 24
 697 0004 00AF     		add	r7, sp, #0
 698              	.LCFI17:
 699              		.cfi_def_cfa_register 7
 700 0006 0346     		mov	r3, r0
 701 0008 3960     		str	r1, [r7]
 702 000a FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 18


 703 000c 1346     		mov	r3, r2	@ movhi
 704 000e BB80     		strh	r3, [r7, #4]	@ movhi
 259:ioLIB/socket.c ****    CHECK_SOCKNUM();
 705              		.loc 1 259 4
 706 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 707 0012 082B     		cmp	r3, #8
 708 0014 02D9     		bls	.L43
 709              		.loc 1 259 4 is_stmt 0 discriminator 1
 710 0016 4FF0FF33 		mov	r3, #-1
 711 001a C6E0     		b	.L44
 712              	.L43:
 260:ioLIB/socket.c ****    CHECK_SOCKMODE(Sn_MR_TCP);
 713              		.loc 1 260 4 is_stmt 1
 714 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 715 001e 9B00     		lsls	r3, r3, #2
 716 0020 0133     		adds	r3, r3, #1
 717 0022 DB00     		lsls	r3, r3, #3
 718 0024 1846     		mov	r0, r3
 719 0026 FFF7FEFF 		bl	WIZCHIP_READ
 720 002a 0346     		mov	r3, r0
 721 002c 03F00F03 		and	r3, r3, #15
 722 0030 012B     		cmp	r3, #1
 723 0032 02D0     		beq	.L45
 724              		.loc 1 260 4 is_stmt 0 discriminator 1
 725 0034 6FF00403 		mvn	r3, #4
 726 0038 B7E0     		b	.L44
 727              	.L45:
 261:ioLIB/socket.c ****    CHECK_SOCKINIT();
 728              		.loc 1 261 4 is_stmt 1
 729 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 730 003c 9B00     		lsls	r3, r3, #2
 731 003e 0133     		adds	r3, r3, #1
 732 0040 DB00     		lsls	r3, r3, #3
 733 0042 03F54073 		add	r3, r3, #768
 734 0046 1846     		mov	r0, r3
 735 0048 FFF7FEFF 		bl	WIZCHIP_READ
 736 004c 0346     		mov	r3, r0
 737 004e 132B     		cmp	r3, #19
 738 0050 02D0     		beq	.L46
 739              		.loc 1 261 4 is_stmt 0 discriminator 1
 740 0052 6FF00203 		mvn	r3, #2
 741 0056 A8E0     		b	.L44
 742              	.L46:
 743              	.LBB4:
 262:ioLIB/socket.c ****    //M20140501 : For avoiding fatal error on memory align mismatched
 263:ioLIB/socket.c ****    //if( *((uint32_t*)addr) == 0xFFFFFFFF || *((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
 264:ioLIB/socket.c ****    {
 265:ioLIB/socket.c ****       uint32_t taddr;
 266:ioLIB/socket.c ****       taddr = ((uint32_t)addr[0] & 0x000000FF);
 744              		.loc 1 266 30 is_stmt 1
 745 0058 3B68     		ldr	r3, [r7]
 746 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 747              		.loc 1 266 13
 748 005c FB60     		str	r3, [r7, #12]
 267:ioLIB/socket.c ****       taddr = (taddr << 8) + ((uint32_t)addr[1] & 0x000000FF);
 749              		.loc 1 267 22
 750 005e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 19


 751 0060 1B02     		lsls	r3, r3, #8
 752              		.loc 1 267 45
 753 0062 3A68     		ldr	r2, [r7]
 754 0064 0132     		adds	r2, r2, #1
 755 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 756              		.loc 1 267 13
 757 0068 1344     		add	r3, r3, r2
 758 006a FB60     		str	r3, [r7, #12]
 268:ioLIB/socket.c ****       taddr = (taddr << 8) + ((uint32_t)addr[2] & 0x000000FF);
 759              		.loc 1 268 22
 760 006c FB68     		ldr	r3, [r7, #12]
 761 006e 1B02     		lsls	r3, r3, #8
 762              		.loc 1 268 45
 763 0070 3A68     		ldr	r2, [r7]
 764 0072 0232     		adds	r2, r2, #2
 765 0074 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 766              		.loc 1 268 13
 767 0076 1344     		add	r3, r3, r2
 768 0078 FB60     		str	r3, [r7, #12]
 269:ioLIB/socket.c ****       taddr = (taddr << 8) + ((uint32_t)addr[3] & 0x000000FF);
 769              		.loc 1 269 22
 770 007a FB68     		ldr	r3, [r7, #12]
 771 007c 1B02     		lsls	r3, r3, #8
 772              		.loc 1 269 45
 773 007e 3A68     		ldr	r2, [r7]
 774 0080 0332     		adds	r2, r2, #3
 775 0082 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 776              		.loc 1 269 13
 777 0084 1344     		add	r3, r3, r2
 778 0086 FB60     		str	r3, [r7, #12]
 270:ioLIB/socket.c ****       if( taddr == 0xFFFFFFFF || taddr == 0) return SOCKERR_IPINVALID;
 779              		.loc 1 270 9
 780 0088 FB68     		ldr	r3, [r7, #12]
 781 008a B3F1FF3F 		cmp	r3, #-1
 782 008e 02D0     		beq	.L47
 783              		.loc 1 270 31 discriminator 2
 784 0090 FB68     		ldr	r3, [r7, #12]
 785 0092 002B     		cmp	r3, #0
 786 0094 02D1     		bne	.L48
 787              	.L47:
 788              		.loc 1 270 53 discriminator 3
 789 0096 6FF00B03 		mvn	r3, #11
 790 009a 86E0     		b	.L44
 791              	.L48:
 792              	.LBE4:
 271:ioLIB/socket.c ****    }
 272:ioLIB/socket.c ****    //
 273:ioLIB/socket.c **** 	
 274:ioLIB/socket.c **** 	if(port == 0) return SOCKERR_PORTZERO;
 793              		.loc 1 274 4
 794 009c BB88     		ldrh	r3, [r7, #4]
 795 009e 002B     		cmp	r3, #0
 796 00a0 02D1     		bne	.L49
 797              		.loc 1 274 23 discriminator 1
 798 00a2 6FF00A03 		mvn	r3, #10
 799 00a6 80E0     		b	.L44
 800              	.L49:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 20


 275:ioLIB/socket.c **** 	setSn_DIPR(sn,addr);
 801              		.loc 1 275 2
 802 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 803 00aa 9B00     		lsls	r3, r3, #2
 804 00ac 0133     		adds	r3, r3, #1
 805 00ae DB00     		lsls	r3, r3, #3
 806 00b0 03F54063 		add	r3, r3, #3072
 807 00b4 0422     		movs	r2, #4
 808 00b6 3968     		ldr	r1, [r7]
 809 00b8 1846     		mov	r0, r3
 810 00ba FFF7FEFF 		bl	WIZCHIP_WRITE_BUF
 276:ioLIB/socket.c **** 	setSn_DPORT(sn,port);
 811              		.loc 1 276 2
 812 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 813 00c0 9B00     		lsls	r3, r3, #2
 814 00c2 0133     		adds	r3, r3, #1
 815 00c4 DB00     		lsls	r3, r3, #3
 816 00c6 03F58053 		add	r3, r3, #4096
 817 00ca 1A46     		mov	r2, r3
 818 00cc BB88     		ldrh	r3, [r7, #4]
 819 00ce 1B0A     		lsrs	r3, r3, #8
 820 00d0 9BB2     		uxth	r3, r3
 821 00d2 DBB2     		uxtb	r3, r3
 822 00d4 1946     		mov	r1, r3
 823 00d6 1046     		mov	r0, r2
 824 00d8 FFF7FEFF 		bl	WIZCHIP_WRITE
 825 00dc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 826 00de 9B00     		lsls	r3, r3, #2
 827 00e0 0133     		adds	r3, r3, #1
 828 00e2 DB00     		lsls	r3, r3, #3
 829 00e4 03F58853 		add	r3, r3, #4352
 830 00e8 1A46     		mov	r2, r3
 831 00ea BB88     		ldrh	r3, [r7, #4]	@ movhi
 832 00ec DBB2     		uxtb	r3, r3
 833 00ee 1946     		mov	r1, r3
 834 00f0 1046     		mov	r0, r2
 835 00f2 FFF7FEFF 		bl	WIZCHIP_WRITE
 277:ioLIB/socket.c **** 	setSn_CR(sn,Sn_CR_CONNECT);
 836              		.loc 1 277 2
 837 00f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 838 00f8 9B00     		lsls	r3, r3, #2
 839 00fa 0133     		adds	r3, r3, #1
 840 00fc DB00     		lsls	r3, r3, #3
 841 00fe 03F58073 		add	r3, r3, #256
 842 0102 0421     		movs	r1, #4
 843 0104 1846     		mov	r0, r3
 844 0106 FFF7FEFF 		bl	WIZCHIP_WRITE
 278:ioLIB/socket.c ****    while(getSn_CR(sn));
 845              		.loc 1 278 9
 846 010a 00BF     		nop
 847              	.L50:
 848              		.loc 1 278 10 discriminator 1
 849 010c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 850 010e 9B00     		lsls	r3, r3, #2
 851 0110 0133     		adds	r3, r3, #1
 852 0112 DB00     		lsls	r3, r3, #3
 853 0114 03F58073 		add	r3, r3, #256
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 21


 854 0118 1846     		mov	r0, r3
 855 011a FFF7FEFF 		bl	WIZCHIP_READ
 856 011e 0346     		mov	r3, r0
 857              		.loc 1 278 9 discriminator 1
 858 0120 002B     		cmp	r3, #0
 859 0122 F3D1     		bne	.L50
 279:ioLIB/socket.c ****    if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
 860              		.loc 1 279 7
 861 0124 234B     		ldr	r3, .L55
 862 0126 1B88     		ldrh	r3, [r3]
 863 0128 1A46     		mov	r2, r3
 864 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 865 012c 42FA03F3 		asr	r3, r2, r3
 866 0130 03F00103 		and	r3, r3, #1
 867              		.loc 1 279 6
 868 0134 002B     		cmp	r3, #0
 869 0136 2BD0     		beq	.L52
 870              		.loc 1 279 38 discriminator 1
 871 0138 0023     		movs	r3, #0
 872 013a 36E0     		b	.L44
 873              	.L54:
 280:ioLIB/socket.c ****    while(getSn_SR(sn) != SOCK_ESTABLISHED)
 281:ioLIB/socket.c ****    {
 282:ioLIB/socket.c **** 		if (getSn_IR(sn) & Sn_IR_TIMEOUT)
 874              		.loc 1 282 7
 875 013c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 876 013e 9B00     		lsls	r3, r3, #2
 877 0140 0133     		adds	r3, r3, #1
 878 0142 DB00     		lsls	r3, r3, #3
 879 0144 03F50073 		add	r3, r3, #512
 880 0148 1846     		mov	r0, r3
 881 014a FFF7FEFF 		bl	WIZCHIP_READ
 882 014e 0346     		mov	r3, r0
 883              		.loc 1 282 20
 884 0150 03F00803 		and	r3, r3, #8
 885              		.loc 1 282 6
 886 0154 002B     		cmp	r3, #0
 887 0156 0CD0     		beq	.L53
 283:ioLIB/socket.c **** 		{
 284:ioLIB/socket.c **** 			setSn_IR(sn, Sn_IR_TIMEOUT);
 888              		.loc 1 284 4
 889 0158 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 890 015a 9B00     		lsls	r3, r3, #2
 891 015c 0133     		adds	r3, r3, #1
 892 015e DB00     		lsls	r3, r3, #3
 893 0160 03F50073 		add	r3, r3, #512
 894 0164 0821     		movs	r1, #8
 895 0166 1846     		mov	r0, r3
 896 0168 FFF7FEFF 		bl	WIZCHIP_WRITE
 285:ioLIB/socket.c ****             return SOCKERR_TIMEOUT;
 897              		.loc 1 285 20
 898 016c 6FF00C03 		mvn	r3, #12
 899 0170 1BE0     		b	.L44
 900              	.L53:
 286:ioLIB/socket.c **** 		}
 287:ioLIB/socket.c **** 
 288:ioLIB/socket.c **** 		if (getSn_SR(sn) == SOCK_CLOSED)
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 22


 901              		.loc 1 288 7
 902 0172 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 903 0174 9B00     		lsls	r3, r3, #2
 904 0176 0133     		adds	r3, r3, #1
 905 0178 DB00     		lsls	r3, r3, #3
 906 017a 03F54073 		add	r3, r3, #768
 907 017e 1846     		mov	r0, r3
 908 0180 FFF7FEFF 		bl	WIZCHIP_READ
 909 0184 0346     		mov	r3, r0
 910              		.loc 1 288 6
 911 0186 002B     		cmp	r3, #0
 912 0188 02D1     		bne	.L52
 289:ioLIB/socket.c **** 		{
 290:ioLIB/socket.c **** 			return SOCKERR_SOCKCLOSED;
 913              		.loc 1 290 11
 914 018a 6FF00303 		mvn	r3, #3
 915 018e 0CE0     		b	.L44
 916              	.L52:
 280:ioLIB/socket.c ****    {
 917              		.loc 1 280 10
 918 0190 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 919 0192 9B00     		lsls	r3, r3, #2
 920 0194 0133     		adds	r3, r3, #1
 921 0196 DB00     		lsls	r3, r3, #3
 922 0198 03F54073 		add	r3, r3, #768
 923 019c 1846     		mov	r0, r3
 924 019e FFF7FEFF 		bl	WIZCHIP_READ
 925 01a2 0346     		mov	r3, r0
 280:ioLIB/socket.c ****    {
 926              		.loc 1 280 9
 927 01a4 172B     		cmp	r3, #23
 928 01a6 C9D1     		bne	.L54
 291:ioLIB/socket.c **** 		}
 292:ioLIB/socket.c **** 	}
 293:ioLIB/socket.c ****    
 294:ioLIB/socket.c ****    return SOCK_OK;
 929              		.loc 1 294 11
 930 01a8 0123     		movs	r3, #1
 931              	.L44:
 295:ioLIB/socket.c **** }
 932              		.loc 1 295 1
 933 01aa 1846     		mov	r0, r3
 934 01ac 1037     		adds	r7, r7, #16
 935              	.LCFI18:
 936              		.cfi_def_cfa_offset 8
 937 01ae BD46     		mov	sp, r7
 938              	.LCFI19:
 939              		.cfi_def_cfa_register 13
 940              		@ sp needed
 941 01b0 80BD     		pop	{r7, pc}
 942              	.L56:
 943 01b2 00BF     		.align	2
 944              	.L55:
 945 01b4 00000000 		.word	sock_io_mode
 946              		.cfi_endproc
 947              	.LFE3:
 949              		.section	.text.disconnect,"ax",%progbits
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 23


 950              		.align	1
 951              		.global	disconnect
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 956              	disconnect:
 957              	.LFB4:
 296:ioLIB/socket.c **** 
 297:ioLIB/socket.c **** int8_t disconnect(uint8_t sn)
 298:ioLIB/socket.c **** {
 958              		.loc 1 298 1
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 8
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962 0000 80B5     		push	{r7, lr}
 963              	.LCFI20:
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 82B0     		sub	sp, sp, #8
 968              	.LCFI21:
 969              		.cfi_def_cfa_offset 16
 970 0004 00AF     		add	r7, sp, #0
 971              	.LCFI22:
 972              		.cfi_def_cfa_register 7
 973 0006 0346     		mov	r3, r0
 974 0008 FB71     		strb	r3, [r7, #7]
 299:ioLIB/socket.c ****    CHECK_SOCKNUM();
 975              		.loc 1 299 4
 976 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 977 000c 082B     		cmp	r3, #8
 978 000e 02D9     		bls	.L58
 979              		.loc 1 299 4 is_stmt 0 discriminator 1
 980 0010 4FF0FF33 		mov	r3, #-1
 981 0014 62E0     		b	.L59
 982              	.L58:
 300:ioLIB/socket.c ****    CHECK_SOCKMODE(Sn_MR_TCP);
 983              		.loc 1 300 4 is_stmt 1
 984 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 985 0018 9B00     		lsls	r3, r3, #2
 986 001a 0133     		adds	r3, r3, #1
 987 001c DB00     		lsls	r3, r3, #3
 988 001e 1846     		mov	r0, r3
 989 0020 FFF7FEFF 		bl	WIZCHIP_READ
 990 0024 0346     		mov	r3, r0
 991 0026 03F00F03 		and	r3, r3, #15
 992 002a 012B     		cmp	r3, #1
 993 002c 02D0     		beq	.L60
 994              		.loc 1 300 4 is_stmt 0 discriminator 1
 995 002e 6FF00403 		mvn	r3, #4
 996 0032 53E0     		b	.L59
 997              	.L60:
 301:ioLIB/socket.c **** 	setSn_CR(sn,Sn_CR_DISCON);
 998              		.loc 1 301 2 is_stmt 1
 999 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1000 0036 9B00     		lsls	r3, r3, #2
 1001 0038 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 24


 1002 003a DB00     		lsls	r3, r3, #3
 1003 003c 03F58073 		add	r3, r3, #256
 1004 0040 0821     		movs	r1, #8
 1005 0042 1846     		mov	r0, r3
 1006 0044 FFF7FEFF 		bl	WIZCHIP_WRITE
 302:ioLIB/socket.c **** 	/* wait to process the command... */
 303:ioLIB/socket.c **** 	while(getSn_CR(sn));
 1007              		.loc 1 303 7
 1008 0048 00BF     		nop
 1009              	.L61:
 1010              		.loc 1 303 8 discriminator 1
 1011 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1012 004c 9B00     		lsls	r3, r3, #2
 1013 004e 0133     		adds	r3, r3, #1
 1014 0050 DB00     		lsls	r3, r3, #3
 1015 0052 03F58073 		add	r3, r3, #256
 1016 0056 1846     		mov	r0, r3
 1017 0058 FFF7FEFF 		bl	WIZCHIP_READ
 1018 005c 0346     		mov	r3, r0
 1019              		.loc 1 303 7 discriminator 1
 1020 005e 002B     		cmp	r3, #0
 1021 0060 F3D1     		bne	.L61
 304:ioLIB/socket.c **** 	sock_is_sending &= ~(1<<sn);
 1022              		.loc 1 304 24
 1023 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1024 0064 0122     		movs	r2, #1
 1025 0066 02FA03F3 		lsl	r3, r2, r3
 1026              		.loc 1 304 18
 1027 006a 1BB2     		sxth	r3, r3
 1028 006c DB43     		mvns	r3, r3
 1029 006e 1AB2     		sxth	r2, r3
 1030 0070 1C4B     		ldr	r3, .L65
 1031 0072 1B88     		ldrh	r3, [r3]
 1032 0074 1BB2     		sxth	r3, r3
 1033 0076 1340     		ands	r3, r3, r2
 1034 0078 1BB2     		sxth	r3, r3
 1035 007a 9AB2     		uxth	r2, r3
 1036 007c 194B     		ldr	r3, .L65
 1037 007e 1A80     		strh	r2, [r3]	@ movhi
 305:ioLIB/socket.c ****    if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
 1038              		.loc 1 305 7
 1039 0080 194B     		ldr	r3, .L65+4
 1040 0082 1B88     		ldrh	r3, [r3]
 1041 0084 1A46     		mov	r2, r3
 1042 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1043 0088 42FA03F3 		asr	r3, r2, r3
 1044 008c 03F00103 		and	r3, r3, #1
 1045              		.loc 1 305 6
 1046 0090 002B     		cmp	r3, #0
 1047 0092 16D0     		beq	.L63
 1048              		.loc 1 305 38 discriminator 1
 1049 0094 0023     		movs	r3, #0
 1050 0096 21E0     		b	.L59
 1051              	.L64:
 306:ioLIB/socket.c **** 	while(getSn_SR(sn) != SOCK_CLOSED)
 307:ioLIB/socket.c **** 	{
 308:ioLIB/socket.c **** 	   if(getSn_IR(sn) & Sn_IR_TIMEOUT)
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 25


 1052              		.loc 1 308 8
 1053 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1054 009a 9B00     		lsls	r3, r3, #2
 1055 009c 0133     		adds	r3, r3, #1
 1056 009e DB00     		lsls	r3, r3, #3
 1057 00a0 03F50073 		add	r3, r3, #512
 1058 00a4 1846     		mov	r0, r3
 1059 00a6 FFF7FEFF 		bl	WIZCHIP_READ
 1060 00aa 0346     		mov	r3, r0
 1061              		.loc 1 308 21
 1062 00ac 03F00803 		and	r3, r3, #8
 1063              		.loc 1 308 7
 1064 00b0 002B     		cmp	r3, #0
 1065 00b2 06D0     		beq	.L63
 309:ioLIB/socket.c **** 	   {
 310:ioLIB/socket.c **** 	      close(sn);
 1066              		.loc 1 310 8
 1067 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1068 00b6 1846     		mov	r0, r3
 1069 00b8 FFF7FEFF 		bl	close
 311:ioLIB/socket.c **** 	      return SOCKERR_TIMEOUT;
 1070              		.loc 1 311 15
 1071 00bc 6FF00C03 		mvn	r3, #12
 1072 00c0 0CE0     		b	.L59
 1073              	.L63:
 306:ioLIB/socket.c **** 	while(getSn_SR(sn) != SOCK_CLOSED)
 1074              		.loc 1 306 8
 1075 00c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1076 00c4 9B00     		lsls	r3, r3, #2
 1077 00c6 0133     		adds	r3, r3, #1
 1078 00c8 DB00     		lsls	r3, r3, #3
 1079 00ca 03F54073 		add	r3, r3, #768
 1080 00ce 1846     		mov	r0, r3
 1081 00d0 FFF7FEFF 		bl	WIZCHIP_READ
 1082 00d4 0346     		mov	r3, r0
 306:ioLIB/socket.c **** 	while(getSn_SR(sn) != SOCK_CLOSED)
 1083              		.loc 1 306 7
 1084 00d6 002B     		cmp	r3, #0
 1085 00d8 DED1     		bne	.L64
 312:ioLIB/socket.c **** 	   }
 313:ioLIB/socket.c **** 	}
 314:ioLIB/socket.c **** 	return SOCK_OK;
 1086              		.loc 1 314 9
 1087 00da 0123     		movs	r3, #1
 1088              	.L59:
 315:ioLIB/socket.c **** }
 1089              		.loc 1 315 1
 1090 00dc 1846     		mov	r0, r3
 1091 00de 0837     		adds	r7, r7, #8
 1092              	.LCFI23:
 1093              		.cfi_def_cfa_offset 8
 1094 00e0 BD46     		mov	sp, r7
 1095              	.LCFI24:
 1096              		.cfi_def_cfa_register 13
 1097              		@ sp needed
 1098 00e2 80BD     		pop	{r7, pc}
 1099              	.L66:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 26


 1100              		.align	2
 1101              	.L65:
 1102 00e4 00000000 		.word	sock_is_sending
 1103 00e8 00000000 		.word	sock_io_mode
 1104              		.cfi_endproc
 1105              	.LFE4:
 1107              		.section	.text.send,"ax",%progbits
 1108              		.align	1
 1109              		.global	send
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1114              	send:
 1115              	.LFB5:
 316:ioLIB/socket.c **** 
 317:ioLIB/socket.c **** int32_t send(uint8_t sn, uint8_t * buf, uint16_t len)
 318:ioLIB/socket.c **** {
 1116              		.loc 1 318 1
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 16
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              	.LCFI25:
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 84B0     		sub	sp, sp, #16
 1126              	.LCFI26:
 1127              		.cfi_def_cfa_offset 24
 1128 0004 00AF     		add	r7, sp, #0
 1129              	.LCFI27:
 1130              		.cfi_def_cfa_register 7
 1131 0006 0346     		mov	r3, r0
 1132 0008 3960     		str	r1, [r7]
 1133 000a FB71     		strb	r3, [r7, #7]
 1134 000c 1346     		mov	r3, r2	@ movhi
 1135 000e BB80     		strh	r3, [r7, #4]	@ movhi
 319:ioLIB/socket.c ****    uint8_t tmp=0;
 1136              		.loc 1 319 12
 1137 0010 0023     		movs	r3, #0
 1138 0012 FB73     		strb	r3, [r7, #15]
 320:ioLIB/socket.c ****    uint16_t freesize=0;
 1139              		.loc 1 320 13
 1140 0014 0023     		movs	r3, #0
 1141 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 321:ioLIB/socket.c ****    
 322:ioLIB/socket.c ****    CHECK_SOCKNUM();
 1142              		.loc 1 322 4
 1143 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1144 001a 082B     		cmp	r3, #8
 1145 001c 02D9     		bls	.L68
 1146              		.loc 1 322 4 is_stmt 0 discriminator 1
 1147 001e 4FF0FF33 		mov	r3, #-1
 1148 0022 DEE0     		b	.L69
 1149              	.L68:
 323:ioLIB/socket.c ****    CHECK_SOCKMODE(Sn_MR_TCP);
 1150              		.loc 1 323 4 is_stmt 1
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 27


 1151 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1152 0026 9B00     		lsls	r3, r3, #2
 1153 0028 0133     		adds	r3, r3, #1
 1154 002a DB00     		lsls	r3, r3, #3
 1155 002c 1846     		mov	r0, r3
 1156 002e FFF7FEFF 		bl	WIZCHIP_READ
 1157 0032 0346     		mov	r3, r0
 1158 0034 03F00F03 		and	r3, r3, #15
 1159 0038 012B     		cmp	r3, #1
 1160 003a 02D0     		beq	.L70
 1161              		.loc 1 323 4 is_stmt 0 discriminator 1
 1162 003c 6FF00403 		mvn	r3, #4
 1163 0040 CFE0     		b	.L69
 1164              	.L70:
 324:ioLIB/socket.c ****    CHECK_SOCKDATA();
 1165              		.loc 1 324 4 is_stmt 1
 1166 0042 BB88     		ldrh	r3, [r7, #4]
 1167 0044 002B     		cmp	r3, #0
 1168 0046 02D1     		bne	.L71
 1169              		.loc 1 324 4 is_stmt 0 discriminator 1
 1170 0048 6FF00D03 		mvn	r3, #13
 1171 004c C9E0     		b	.L69
 1172              	.L71:
 325:ioLIB/socket.c ****    tmp = getSn_SR(sn);
 1173              		.loc 1 325 10 is_stmt 1
 1174 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1175 0050 9B00     		lsls	r3, r3, #2
 1176 0052 0133     		adds	r3, r3, #1
 1177 0054 DB00     		lsls	r3, r3, #3
 1178 0056 03F54073 		add	r3, r3, #768
 1179 005a 1846     		mov	r0, r3
 1180 005c FFF7FEFF 		bl	WIZCHIP_READ
 1181 0060 0346     		mov	r3, r0
 1182 0062 FB73     		strb	r3, [r7, #15]
 326:ioLIB/socket.c ****    if(tmp != SOCK_ESTABLISHED && tmp != SOCK_CLOSE_WAIT) return SOCKERR_SOCKSTATUS;
 1183              		.loc 1 326 6
 1184 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1185 0066 172B     		cmp	r3, #23
 1186 0068 05D0     		beq	.L72
 1187              		.loc 1 326 31 discriminator 1
 1188 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1189 006c 1C2B     		cmp	r3, #28
 1190 006e 02D0     		beq	.L72
 1191              		.loc 1 326 65 discriminator 2
 1192 0070 6FF00603 		mvn	r3, #6
 1193 0074 B5E0     		b	.L69
 1194              	.L72:
 327:ioLIB/socket.c ****    if( sock_is_sending & (1<<sn) )
 1195              		.loc 1 327 8
 1196 0076 5D4B     		ldr	r3, .L85
 1197 0078 1B88     		ldrh	r3, [r3]
 1198 007a 1A46     		mov	r2, r3
 1199 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1200 007e 42FA03F3 		asr	r3, r2, r3
 1201 0082 03F00103 		and	r3, r3, #1
 1202              		.loc 1 327 6
 1203 0086 002B     		cmp	r3, #0
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 28


 1204 0088 39D0     		beq	.L73
 328:ioLIB/socket.c ****    {
 329:ioLIB/socket.c ****       tmp = getSn_IR(sn);
 1205              		.loc 1 329 13
 1206 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1207 008c 9B00     		lsls	r3, r3, #2
 1208 008e 0133     		adds	r3, r3, #1
 1209 0090 DB00     		lsls	r3, r3, #3
 1210 0092 03F50073 		add	r3, r3, #512
 1211 0096 1846     		mov	r0, r3
 1212 0098 FFF7FEFF 		bl	WIZCHIP_READ
 1213 009c 0346     		mov	r3, r0
 1214              		.loc 1 329 11
 1215 009e 03F01F03 		and	r3, r3, #31
 1216 00a2 FB73     		strb	r3, [r7, #15]
 330:ioLIB/socket.c ****       if(tmp & Sn_IR_SENDOK)
 1217              		.loc 1 330 14
 1218 00a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1219 00a6 03F01003 		and	r3, r3, #16
 1220              		.loc 1 330 9
 1221 00aa 002B     		cmp	r3, #0
 1222 00ac 19D0     		beq	.L74
 331:ioLIB/socket.c ****       {
 332:ioLIB/socket.c ****          setSn_IR(sn, Sn_IR_SENDOK);
 1223              		.loc 1 332 10
 1224 00ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1225 00b0 9B00     		lsls	r3, r3, #2
 1226 00b2 0133     		adds	r3, r3, #1
 1227 00b4 DB00     		lsls	r3, r3, #3
 1228 00b6 03F50073 		add	r3, r3, #512
 1229 00ba 1021     		movs	r1, #16
 1230 00bc 1846     		mov	r0, r3
 1231 00be FFF7FEFF 		bl	WIZCHIP_WRITE
 333:ioLIB/socket.c ****          //M20150401 : Typing Error
 334:ioLIB/socket.c ****          //#if _WZICHIP_ == 5200
 335:ioLIB/socket.c ****          #if _WIZCHIP_ == 5200
 336:ioLIB/socket.c ****             if(getSn_TX_RD(sn) != sock_next_rd[sn])
 337:ioLIB/socket.c ****             {
 338:ioLIB/socket.c ****                setSn_CR(sn,Sn_CR_SEND);
 339:ioLIB/socket.c ****                while(getSn_CR(sn));
 340:ioLIB/socket.c ****                return SOCK_BUSY;
 341:ioLIB/socket.c ****             }
 342:ioLIB/socket.c ****          #endif
 343:ioLIB/socket.c ****          sock_is_sending &= ~(1<<sn);         
 1232              		.loc 1 343 32
 1233 00c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1234 00c4 0122     		movs	r2, #1
 1235 00c6 02FA03F3 		lsl	r3, r2, r3
 1236              		.loc 1 343 26
 1237 00ca 1BB2     		sxth	r3, r3
 1238 00cc DB43     		mvns	r3, r3
 1239 00ce 1AB2     		sxth	r2, r3
 1240 00d0 464B     		ldr	r3, .L85
 1241 00d2 1B88     		ldrh	r3, [r3]
 1242 00d4 1BB2     		sxth	r3, r3
 1243 00d6 1340     		ands	r3, r3, r2
 1244 00d8 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 29


 1245 00da 9AB2     		uxth	r2, r3
 1246 00dc 434B     		ldr	r3, .L85
 1247 00de 1A80     		strh	r2, [r3]	@ movhi
 1248 00e0 0DE0     		b	.L73
 1249              	.L74:
 344:ioLIB/socket.c ****       }
 345:ioLIB/socket.c ****       else if(tmp & Sn_IR_TIMEOUT)
 1250              		.loc 1 345 19
 1251 00e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1252 00e4 03F00803 		and	r3, r3, #8
 1253              		.loc 1 345 14
 1254 00e8 002B     		cmp	r3, #0
 1255 00ea 06D0     		beq	.L75
 346:ioLIB/socket.c ****       {
 347:ioLIB/socket.c ****          close(sn);
 1256              		.loc 1 347 10
 1257 00ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1258 00ee 1846     		mov	r0, r3
 1259 00f0 FFF7FEFF 		bl	close
 348:ioLIB/socket.c ****          return SOCKERR_TIMEOUT;
 1260              		.loc 1 348 17
 1261 00f4 6FF00C03 		mvn	r3, #12
 1262 00f8 73E0     		b	.L69
 1263              	.L75:
 349:ioLIB/socket.c ****       }
 350:ioLIB/socket.c ****       else return SOCK_BUSY;
 1264              		.loc 1 350 19
 1265 00fa 0023     		movs	r3, #0
 1266 00fc 71E0     		b	.L69
 1267              	.L73:
 351:ioLIB/socket.c ****    }
 352:ioLIB/socket.c ****    freesize = getSn_TxMAX(sn);
 1268              		.loc 1 352 15
 1269 00fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1270 0100 9B00     		lsls	r3, r3, #2
 1271 0102 0133     		adds	r3, r3, #1
 1272 0104 DB00     		lsls	r3, r3, #3
 1273 0106 03F5F853 		add	r3, r3, #7936
 1274 010a 1846     		mov	r0, r3
 1275 010c FFF7FEFF 		bl	WIZCHIP_READ
 1276 0110 0346     		mov	r3, r0
 1277 0112 9BB2     		uxth	r3, r3
 1278              		.loc 1 352 13
 1279 0114 9B02     		lsls	r3, r3, #10
 1280 0116 BB81     		strh	r3, [r7, #12]	@ movhi
 353:ioLIB/socket.c ****    if (len > freesize) len = freesize; // check size not to exceed MAX size.
 1281              		.loc 1 353 7
 1282 0118 BA88     		ldrh	r2, [r7, #4]
 1283 011a BB89     		ldrh	r3, [r7, #12]
 1284 011c 9A42     		cmp	r2, r3
 1285 011e 01D9     		bls	.L81
 1286              		.loc 1 353 28 discriminator 1
 1287 0120 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1288 0122 BB80     		strh	r3, [r7, #4]	@ movhi
 1289              	.L81:
 354:ioLIB/socket.c ****    while(1)
 355:ioLIB/socket.c ****    {
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 30


 356:ioLIB/socket.c ****       freesize = getSn_TX_FSR(sn);
 1290              		.loc 1 356 18
 1291 0124 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1292 0126 1846     		mov	r0, r3
 1293 0128 FFF7FEFF 		bl	getSn_TX_FSR
 1294 012c 0346     		mov	r3, r0
 1295 012e BB81     		strh	r3, [r7, #12]	@ movhi
 357:ioLIB/socket.c ****       tmp = getSn_SR(sn);
 1296              		.loc 1 357 13
 1297 0130 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1298 0132 9B00     		lsls	r3, r3, #2
 1299 0134 0133     		adds	r3, r3, #1
 1300 0136 DB00     		lsls	r3, r3, #3
 1301 0138 03F54073 		add	r3, r3, #768
 1302 013c 1846     		mov	r0, r3
 1303 013e FFF7FEFF 		bl	WIZCHIP_READ
 1304 0142 0346     		mov	r3, r0
 1305 0144 FB73     		strb	r3, [r7, #15]
 358:ioLIB/socket.c ****       if ((tmp != SOCK_ESTABLISHED) && (tmp != SOCK_CLOSE_WAIT))
 1306              		.loc 1 358 10
 1307 0146 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1308 0148 172B     		cmp	r3, #23
 1309 014a 09D0     		beq	.L77
 1310              		.loc 1 358 37 discriminator 1
 1311 014c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1312 014e 1C2B     		cmp	r3, #28
 1313 0150 06D0     		beq	.L77
 359:ioLIB/socket.c ****       {
 360:ioLIB/socket.c ****          close(sn);
 1314              		.loc 1 360 10
 1315 0152 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1316 0154 1846     		mov	r0, r3
 1317 0156 FFF7FEFF 		bl	close
 361:ioLIB/socket.c ****          return SOCKERR_SOCKSTATUS;
 1318              		.loc 1 361 17
 1319 015a 6FF00603 		mvn	r3, #6
 1320 015e 40E0     		b	.L69
 1321              	.L77:
 362:ioLIB/socket.c ****       }
 363:ioLIB/socket.c ****       if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
 1322              		.loc 1 363 11
 1323 0160 234B     		ldr	r3, .L85+4
 1324 0162 1B88     		ldrh	r3, [r3]
 1325 0164 1A46     		mov	r2, r3
 1326 0166 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1327 0168 42FA03F3 		asr	r3, r2, r3
 1328 016c 03F00103 		and	r3, r3, #1
 1329              		.loc 1 363 9
 1330 0170 002B     		cmp	r3, #0
 1331 0172 05D0     		beq	.L78
 1332              		.loc 1 363 36 discriminator 1
 1333 0174 BA88     		ldrh	r2, [r7, #4]
 1334 0176 BB89     		ldrh	r3, [r7, #12]
 1335 0178 9A42     		cmp	r2, r3
 1336 017a 01D9     		bls	.L78
 1337              		.loc 1 363 65 discriminator 2
 1338 017c 0023     		movs	r3, #0
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 31


 1339 017e 30E0     		b	.L69
 1340              	.L78:
 364:ioLIB/socket.c ****       if(len <= freesize) break;
 1341              		.loc 1 364 9
 1342 0180 BA88     		ldrh	r2, [r7, #4]
 1343 0182 BB89     		ldrh	r3, [r7, #12]
 1344 0184 9A42     		cmp	r2, r3
 1345 0186 00D9     		bls	.L84
 356:ioLIB/socket.c ****       tmp = getSn_SR(sn);
 1346              		.loc 1 356 16
 1347 0188 CCE7     		b	.L81
 1348              	.L84:
 1349              		.loc 1 364 7
 1350 018a 00BF     		nop
 365:ioLIB/socket.c ****    }
 366:ioLIB/socket.c ****    wiz_send_data(sn, buf, len);
 1351              		.loc 1 366 4
 1352 018c BA88     		ldrh	r2, [r7, #4]
 1353 018e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1354 0190 3968     		ldr	r1, [r7]
 1355 0192 1846     		mov	r0, r3
 1356 0194 FFF7FEFF 		bl	wiz_send_data
 367:ioLIB/socket.c ****    #if _WIZCHIP_ == 5200
 368:ioLIB/socket.c ****       sock_next_rd[sn] = getSn_TX_RD(sn) + len;
 369:ioLIB/socket.c ****    #endif
 370:ioLIB/socket.c **** 
 371:ioLIB/socket.c ****    #if _WIZCHIP_ == 5300
 372:ioLIB/socket.c ****       setSn_TX_WRSR(sn,len);
 373:ioLIB/socket.c ****    #endif
 374:ioLIB/socket.c ****    
 375:ioLIB/socket.c ****    setSn_CR(sn,Sn_CR_SEND);
 1357              		.loc 1 375 4
 1358 0198 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1359 019a 9B00     		lsls	r3, r3, #2
 1360 019c 0133     		adds	r3, r3, #1
 1361 019e DB00     		lsls	r3, r3, #3
 1362 01a0 03F58073 		add	r3, r3, #256
 1363 01a4 2021     		movs	r1, #32
 1364 01a6 1846     		mov	r0, r3
 1365 01a8 FFF7FEFF 		bl	WIZCHIP_WRITE
 376:ioLIB/socket.c ****    /* wait to process the command... */
 377:ioLIB/socket.c ****    while(getSn_CR(sn));
 1366              		.loc 1 377 9
 1367 01ac 00BF     		nop
 1368              	.L82:
 1369              		.loc 1 377 10 discriminator 1
 1370 01ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1371 01b0 9B00     		lsls	r3, r3, #2
 1372 01b2 0133     		adds	r3, r3, #1
 1373 01b4 DB00     		lsls	r3, r3, #3
 1374 01b6 03F58073 		add	r3, r3, #256
 1375 01ba 1846     		mov	r0, r3
 1376 01bc FFF7FEFF 		bl	WIZCHIP_READ
 1377 01c0 0346     		mov	r3, r0
 1378              		.loc 1 377 9 discriminator 1
 1379 01c2 002B     		cmp	r3, #0
 1380 01c4 F3D1     		bne	.L82
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 32


 378:ioLIB/socket.c ****    sock_is_sending |= (1 << sn);
 1381              		.loc 1 378 26
 1382 01c6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1383 01c8 0122     		movs	r2, #1
 1384 01ca 02FA03F3 		lsl	r3, r2, r3
 1385              		.loc 1 378 20
 1386 01ce 1AB2     		sxth	r2, r3
 1387 01d0 064B     		ldr	r3, .L85
 1388 01d2 1B88     		ldrh	r3, [r3]
 1389 01d4 1BB2     		sxth	r3, r3
 1390 01d6 1343     		orrs	r3, r3, r2
 1391 01d8 1BB2     		sxth	r3, r3
 1392 01da 9AB2     		uxth	r2, r3
 1393 01dc 034B     		ldr	r3, .L85
 1394 01de 1A80     		strh	r2, [r3]	@ movhi
 379:ioLIB/socket.c ****    //M20150409 : Explicit Type Casting
 380:ioLIB/socket.c ****    //return len;
 381:ioLIB/socket.c ****    return (int32_t)len;
 1395              		.loc 1 381 11
 1396 01e0 BB88     		ldrh	r3, [r7, #4]
 1397              	.L69:
 382:ioLIB/socket.c **** }
 1398              		.loc 1 382 1
 1399 01e2 1846     		mov	r0, r3
 1400 01e4 1037     		adds	r7, r7, #16
 1401              	.LCFI28:
 1402              		.cfi_def_cfa_offset 8
 1403 01e6 BD46     		mov	sp, r7
 1404              	.LCFI29:
 1405              		.cfi_def_cfa_register 13
 1406              		@ sp needed
 1407 01e8 80BD     		pop	{r7, pc}
 1408              	.L86:
 1409 01ea 00BF     		.align	2
 1410              	.L85:
 1411 01ec 00000000 		.word	sock_is_sending
 1412 01f0 00000000 		.word	sock_io_mode
 1413              		.cfi_endproc
 1414              	.LFE5:
 1416              		.section	.text.recv,"ax",%progbits
 1417              		.align	1
 1418              		.global	recv
 1419              		.syntax unified
 1420              		.thumb
 1421              		.thumb_func
 1423              	recv:
 1424              	.LFB6:
 383:ioLIB/socket.c **** 
 384:ioLIB/socket.c **** 
 385:ioLIB/socket.c **** int32_t recv(uint8_t sn, uint8_t * buf, uint16_t len)
 386:ioLIB/socket.c **** {
 1425              		.loc 1 386 1
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 16
 1428              		@ frame_needed = 1, uses_anonymous_args = 0
 1429 0000 90B5     		push	{r4, r7, lr}
 1430              	.LCFI30:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 33


 1431              		.cfi_def_cfa_offset 12
 1432              		.cfi_offset 4, -12
 1433              		.cfi_offset 7, -8
 1434              		.cfi_offset 14, -4
 1435 0002 85B0     		sub	sp, sp, #20
 1436              	.LCFI31:
 1437              		.cfi_def_cfa_offset 32
 1438 0004 00AF     		add	r7, sp, #0
 1439              	.LCFI32:
 1440              		.cfi_def_cfa_register 7
 1441 0006 0346     		mov	r3, r0
 1442 0008 3960     		str	r1, [r7]
 1443 000a FB71     		strb	r3, [r7, #7]
 1444 000c 1346     		mov	r3, r2	@ movhi
 1445 000e BB80     		strh	r3, [r7, #4]	@ movhi
 387:ioLIB/socket.c ****    uint8_t  tmp = 0;
 1446              		.loc 1 387 13
 1447 0010 0023     		movs	r3, #0
 1448 0012 FB73     		strb	r3, [r7, #15]
 388:ioLIB/socket.c ****    uint16_t recvsize = 0;
 1449              		.loc 1 388 13
 1450 0014 0023     		movs	r3, #0
 1451 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 389:ioLIB/socket.c **** //A20150601 : For integarating with W5300
 390:ioLIB/socket.c **** #if   _WIZCHIP_ == 5300
 391:ioLIB/socket.c ****    uint8_t head[2];
 392:ioLIB/socket.c ****    uint16_t mr;
 393:ioLIB/socket.c **** #endif
 394:ioLIB/socket.c **** //
 395:ioLIB/socket.c ****    CHECK_SOCKNUM();
 1452              		.loc 1 395 4
 1453 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1454 001a 082B     		cmp	r3, #8
 1455 001c 02D9     		bls	.L88
 1456              		.loc 1 395 4 is_stmt 0 discriminator 1
 1457 001e 4FF0FF33 		mov	r3, #-1
 1458 0022 9CE0     		b	.L89
 1459              	.L88:
 396:ioLIB/socket.c ****    CHECK_SOCKMODE(Sn_MR_TCP);
 1460              		.loc 1 396 4 is_stmt 1
 1461 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1462 0026 9B00     		lsls	r3, r3, #2
 1463 0028 0133     		adds	r3, r3, #1
 1464 002a DB00     		lsls	r3, r3, #3
 1465 002c 1846     		mov	r0, r3
 1466 002e FFF7FEFF 		bl	WIZCHIP_READ
 1467 0032 0346     		mov	r3, r0
 1468 0034 03F00F03 		and	r3, r3, #15
 1469 0038 012B     		cmp	r3, #1
 1470 003a 02D0     		beq	.L90
 1471              		.loc 1 396 4 is_stmt 0 discriminator 1
 1472 003c 6FF00403 		mvn	r3, #4
 1473 0040 8DE0     		b	.L89
 1474              	.L90:
 397:ioLIB/socket.c ****    CHECK_SOCKDATA();
 1475              		.loc 1 397 4 is_stmt 1
 1476 0042 BB88     		ldrh	r3, [r7, #4]
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 34


 1477 0044 002B     		cmp	r3, #0
 1478 0046 02D1     		bne	.L91
 1479              		.loc 1 397 4 is_stmt 0 discriminator 1
 1480 0048 6FF00D03 		mvn	r3, #13
 1481 004c 87E0     		b	.L89
 1482              	.L91:
 398:ioLIB/socket.c ****    
 399:ioLIB/socket.c ****    recvsize = getSn_RxMAX(sn);
 1483              		.loc 1 399 15 is_stmt 1
 1484 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1485 0050 9B00     		lsls	r3, r3, #2
 1486 0052 0133     		adds	r3, r3, #1
 1487 0054 DB00     		lsls	r3, r3, #3
 1488 0056 03F5F053 		add	r3, r3, #7680
 1489 005a 1846     		mov	r0, r3
 1490 005c FFF7FEFF 		bl	WIZCHIP_READ
 1491 0060 0346     		mov	r3, r0
 1492 0062 9BB2     		uxth	r3, r3
 1493              		.loc 1 399 13
 1494 0064 9B02     		lsls	r3, r3, #10
 1495 0066 BB81     		strh	r3, [r7, #12]	@ movhi
 400:ioLIB/socket.c ****    if(recvsize < len) len = recvsize;
 1496              		.loc 1 400 6
 1497 0068 BA89     		ldrh	r2, [r7, #12]
 1498 006a BB88     		ldrh	r3, [r7, #4]
 1499 006c 9A42     		cmp	r2, r3
 1500 006e 01D2     		bcs	.L99
 1501              		.loc 1 400 27 discriminator 1
 1502 0070 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1503 0072 BB80     		strh	r3, [r7, #4]	@ movhi
 1504              	.L99:
 401:ioLIB/socket.c ****       
 402:ioLIB/socket.c **** //A20150601 : For Integrating with W5300
 403:ioLIB/socket.c **** #if _WIZCHIP_ == 5300
 404:ioLIB/socket.c ****    //sock_pack_info[sn] = PACK_COMPLETED;    // for clear      
 405:ioLIB/socket.c ****    if(sock_remained_size[sn] == 0)
 406:ioLIB/socket.c ****    {
 407:ioLIB/socket.c **** #endif
 408:ioLIB/socket.c **** //
 409:ioLIB/socket.c ****       while(1)
 410:ioLIB/socket.c ****       {
 411:ioLIB/socket.c ****          recvsize = getSn_RX_RSR(sn);
 1505              		.loc 1 411 21
 1506 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1507 0076 1846     		mov	r0, r3
 1508 0078 FFF7FEFF 		bl	getSn_RX_RSR
 1509 007c 0346     		mov	r3, r0
 1510 007e BB81     		strh	r3, [r7, #12]	@ movhi
 412:ioLIB/socket.c ****          tmp = getSn_SR(sn);
 1511              		.loc 1 412 16
 1512 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1513 0082 9B00     		lsls	r3, r3, #2
 1514 0084 0133     		adds	r3, r3, #1
 1515 0086 DB00     		lsls	r3, r3, #3
 1516 0088 03F54073 		add	r3, r3, #768
 1517 008c 1846     		mov	r0, r3
 1518 008e FFF7FEFF 		bl	WIZCHIP_READ
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 35


 1519 0092 0346     		mov	r3, r0
 1520 0094 FB73     		strb	r3, [r7, #15]
 413:ioLIB/socket.c ****          if (tmp != SOCK_ESTABLISHED)
 1521              		.loc 1 413 13
 1522 0096 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1523 0098 172B     		cmp	r3, #23
 1524 009a 26D0     		beq	.L93
 414:ioLIB/socket.c ****          {
 415:ioLIB/socket.c ****             if(tmp == SOCK_CLOSE_WAIT)
 1525              		.loc 1 415 15
 1526 009c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1527 009e 1C2B     		cmp	r3, #28
 1528 00a0 1CD1     		bne	.L94
 416:ioLIB/socket.c ****             {
 417:ioLIB/socket.c ****                if(recvsize != 0) break;
 1529              		.loc 1 417 18
 1530 00a2 BB89     		ldrh	r3, [r7, #12]
 1531 00a4 002B     		cmp	r3, #0
 1532 00a6 33D1     		bne	.L102
 418:ioLIB/socket.c ****                else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
 1533              		.loc 1 418 24
 1534 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1535 00aa 1846     		mov	r0, r3
 1536 00ac FFF7FEFF 		bl	getSn_TX_FSR
 1537 00b0 0346     		mov	r3, r0
 1538 00b2 1C46     		mov	r4, r3
 1539              		.loc 1 418 44
 1540 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1541 00b6 9B00     		lsls	r3, r3, #2
 1542 00b8 0133     		adds	r3, r3, #1
 1543 00ba DB00     		lsls	r3, r3, #3
 1544 00bc 03F5F853 		add	r3, r3, #7936
 1545 00c0 1846     		mov	r0, r3
 1546 00c2 FFF7FEFF 		bl	WIZCHIP_READ
 1547 00c6 0346     		mov	r3, r0
 1548 00c8 9B02     		lsls	r3, r3, #10
 1549              		.loc 1 418 23
 1550 00ca 9C42     		cmp	r4, r3
 1551 00cc 0DD1     		bne	.L93
 419:ioLIB/socket.c ****                {
 420:ioLIB/socket.c ****                   close(sn);
 1552              		.loc 1 420 19
 1553 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1554 00d0 1846     		mov	r0, r3
 1555 00d2 FFF7FEFF 		bl	close
 421:ioLIB/socket.c ****                   return SOCKERR_SOCKSTATUS;
 1556              		.loc 1 421 26
 1557 00d6 6FF00603 		mvn	r3, #6
 1558 00da 40E0     		b	.L89
 1559              	.L94:
 422:ioLIB/socket.c ****                }
 423:ioLIB/socket.c ****             }
 424:ioLIB/socket.c ****             else
 425:ioLIB/socket.c ****             {
 426:ioLIB/socket.c ****                close(sn);
 1560              		.loc 1 426 16
 1561 00dc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 36


 1562 00de 1846     		mov	r0, r3
 1563 00e0 FFF7FEFF 		bl	close
 427:ioLIB/socket.c ****                return SOCKERR_SOCKSTATUS;
 1564              		.loc 1 427 23
 1565 00e4 6FF00603 		mvn	r3, #6
 1566 00e8 39E0     		b	.L89
 1567              	.L93:
 428:ioLIB/socket.c ****             }
 429:ioLIB/socket.c ****          }
 430:ioLIB/socket.c ****          if((sock_io_mode & (1<<sn)) && (recvsize == 0)) return SOCK_BUSY;
 1568              		.loc 1 430 13
 1569 00ea 1F4B     		ldr	r3, .L104
 1570 00ec 1B88     		ldrh	r3, [r3]
 1571 00ee 1A46     		mov	r2, r3
 1572 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1573 00f2 42FA03F3 		asr	r3, r2, r3
 1574 00f6 03F00103 		and	r3, r3, #1
 1575              		.loc 1 430 12
 1576 00fa 002B     		cmp	r3, #0
 1577 00fc 04D0     		beq	.L97
 1578              		.loc 1 430 38 discriminator 1
 1579 00fe BB89     		ldrh	r3, [r7, #12]
 1580 0100 002B     		cmp	r3, #0
 1581 0102 01D1     		bne	.L97
 1582              		.loc 1 430 65 discriminator 2
 1583 0104 0023     		movs	r3, #0
 1584 0106 2AE0     		b	.L89
 1585              	.L97:
 431:ioLIB/socket.c ****          if(recvsize != 0) break;
 1586              		.loc 1 431 12
 1587 0108 BB89     		ldrh	r3, [r7, #12]
 1588 010a 002B     		cmp	r3, #0
 1589 010c 02D1     		bne	.L103
 411:ioLIB/socket.c ****          tmp = getSn_SR(sn);
 1590              		.loc 1 411 19
 1591 010e B1E7     		b	.L99
 1592              	.L102:
 417:ioLIB/socket.c ****                else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
 1593              		.loc 1 417 16
 1594 0110 00BF     		nop
 1595 0112 00E0     		b	.L96
 1596              	.L103:
 1597              		.loc 1 431 10
 1598 0114 00BF     		nop
 1599              	.L96:
 432:ioLIB/socket.c ****       };
 433:ioLIB/socket.c **** #if _WIZCHIP_ == 5300
 434:ioLIB/socket.c ****    }
 435:ioLIB/socket.c **** #endif
 436:ioLIB/socket.c **** 
 437:ioLIB/socket.c **** //A20150601 : For integrating with W5300
 438:ioLIB/socket.c **** #if _WIZCHIP_ == 5300
 439:ioLIB/socket.c ****    if((sock_remained_size[sn] == 0) || (getSn_MR(sn) & Sn_MR_ALIGN))
 440:ioLIB/socket.c ****    {
 441:ioLIB/socket.c ****       mr = getMR();
 442:ioLIB/socket.c ****       if((getSn_MR(sn) & Sn_MR_ALIGN)==0)
 443:ioLIB/socket.c ****       {
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 37


 444:ioLIB/socket.c ****          wiz_recv_data(sn,head,2);
 445:ioLIB/socket.c ****          if(mr & MR_FS)
 446:ioLIB/socket.c ****             recvsize = (((uint16_t)head[1]) << 8) | ((uint16_t)head[0]);
 447:ioLIB/socket.c ****          else
 448:ioLIB/socket.c ****             recvsize = (((uint16_t)head[0]) << 8) | ((uint16_t)head[1]);
 449:ioLIB/socket.c ****          sock_pack_info[sn] = PACK_FIRST;
 450:ioLIB/socket.c ****       }
 451:ioLIB/socket.c ****       sock_remained_size[sn] = recvsize;
 452:ioLIB/socket.c ****    }
 453:ioLIB/socket.c ****    if(len > sock_remained_size[sn]) len = sock_remained_size[sn];
 454:ioLIB/socket.c ****    recvsize = len;   
 455:ioLIB/socket.c ****    if(sock_pack_info[sn] & PACK_FIFOBYTE)
 456:ioLIB/socket.c ****    {
 457:ioLIB/socket.c ****       *buf = sock_remained_byte[sn];
 458:ioLIB/socket.c ****       buf++;
 459:ioLIB/socket.c ****       sock_pack_info[sn] &= ~(PACK_FIFOBYTE);
 460:ioLIB/socket.c ****       recvsize -= 1;
 461:ioLIB/socket.c ****       sock_remained_size[sn] -= 1;
 462:ioLIB/socket.c ****    }
 463:ioLIB/socket.c ****    if(recvsize != 0)
 464:ioLIB/socket.c ****    {
 465:ioLIB/socket.c ****       wiz_recv_data(sn, buf, recvsize);
 466:ioLIB/socket.c ****       setSn_CR(sn,Sn_CR_RECV);
 467:ioLIB/socket.c ****       while(getSn_CR(sn));
 468:ioLIB/socket.c ****    }
 469:ioLIB/socket.c ****    sock_remained_size[sn] -= recvsize;
 470:ioLIB/socket.c ****    if(sock_remained_size[sn] != 0)
 471:ioLIB/socket.c ****    {
 472:ioLIB/socket.c ****       sock_pack_info[sn] |= PACK_REMAINED;
 473:ioLIB/socket.c ****       if(recvsize & 0x1) sock_pack_info[sn] |= PACK_FIFOBYTE;
 474:ioLIB/socket.c ****    }
 475:ioLIB/socket.c ****    else sock_pack_info[sn] = PACK_COMPLETED;
 476:ioLIB/socket.c ****    if(getSn_MR(sn) & Sn_MR_ALIGN) sock_remained_size[sn] = 0;
 477:ioLIB/socket.c ****    //len = recvsize;
 478:ioLIB/socket.c **** #else   
 479:ioLIB/socket.c ****    if(recvsize < len) len = recvsize;   
 1600              		.loc 1 479 6
 1601 0116 BA89     		ldrh	r2, [r7, #12]
 1602 0118 BB88     		ldrh	r3, [r7, #4]
 1603 011a 9A42     		cmp	r2, r3
 1604 011c 01D2     		bcs	.L100
 1605              		.loc 1 479 27 discriminator 1
 1606 011e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1607 0120 BB80     		strh	r3, [r7, #4]	@ movhi
 1608              	.L100:
 480:ioLIB/socket.c ****    wiz_recv_data(sn, buf, len);
 1609              		.loc 1 480 4
 1610 0122 BA88     		ldrh	r2, [r7, #4]
 1611 0124 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1612 0126 3968     		ldr	r1, [r7]
 1613 0128 1846     		mov	r0, r3
 1614 012a FFF7FEFF 		bl	wiz_recv_data
 481:ioLIB/socket.c ****    setSn_CR(sn,Sn_CR_RECV);
 1615              		.loc 1 481 4
 1616 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1617 0130 9B00     		lsls	r3, r3, #2
 1618 0132 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 38


 1619 0134 DB00     		lsls	r3, r3, #3
 1620 0136 03F58073 		add	r3, r3, #256
 1621 013a 4021     		movs	r1, #64
 1622 013c 1846     		mov	r0, r3
 1623 013e FFF7FEFF 		bl	WIZCHIP_WRITE
 482:ioLIB/socket.c ****    while(getSn_CR(sn));
 1624              		.loc 1 482 9
 1625 0142 00BF     		nop
 1626              	.L101:
 1627              		.loc 1 482 10 discriminator 1
 1628 0144 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1629 0146 9B00     		lsls	r3, r3, #2
 1630 0148 0133     		adds	r3, r3, #1
 1631 014a DB00     		lsls	r3, r3, #3
 1632 014c 03F58073 		add	r3, r3, #256
 1633 0150 1846     		mov	r0, r3
 1634 0152 FFF7FEFF 		bl	WIZCHIP_READ
 1635 0156 0346     		mov	r3, r0
 1636              		.loc 1 482 9 discriminator 1
 1637 0158 002B     		cmp	r3, #0
 1638 015a F3D1     		bne	.L101
 483:ioLIB/socket.c **** #endif
 484:ioLIB/socket.c ****      
 485:ioLIB/socket.c ****    //M20150409 : Explicit Type Casting
 486:ioLIB/socket.c ****    //return len;
 487:ioLIB/socket.c ****    return (int32_t)len;
 1639              		.loc 1 487 11
 1640 015c BB88     		ldrh	r3, [r7, #4]
 1641              	.L89:
 488:ioLIB/socket.c **** }
 1642              		.loc 1 488 1
 1643 015e 1846     		mov	r0, r3
 1644 0160 1437     		adds	r7, r7, #20
 1645              	.LCFI33:
 1646              		.cfi_def_cfa_offset 12
 1647 0162 BD46     		mov	sp, r7
 1648              	.LCFI34:
 1649              		.cfi_def_cfa_register 13
 1650              		@ sp needed
 1651 0164 90BD     		pop	{r4, r7, pc}
 1652              	.L105:
 1653 0166 00BF     		.align	2
 1654              	.L104:
 1655 0168 00000000 		.word	sock_io_mode
 1656              		.cfi_endproc
 1657              	.LFE6:
 1659              		.section	.text.sendto,"ax",%progbits
 1660              		.align	1
 1661              		.global	sendto
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1666              	sendto:
 1667              	.LFB7:
 489:ioLIB/socket.c **** 
 490:ioLIB/socket.c **** int32_t sendto(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t port)
 491:ioLIB/socket.c **** {
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 39


 1668              		.loc 1 491 1
 1669              		.cfi_startproc
 1670              		@ args = 4, pretend = 0, frame = 24
 1671              		@ frame_needed = 1, uses_anonymous_args = 0
 1672 0000 80B5     		push	{r7, lr}
 1673              	.LCFI35:
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 86B0     		sub	sp, sp, #24
 1678              	.LCFI36:
 1679              		.cfi_def_cfa_offset 32
 1680 0004 00AF     		add	r7, sp, #0
 1681              	.LCFI37:
 1682              		.cfi_def_cfa_register 7
 1683 0006 B960     		str	r1, [r7, #8]
 1684 0008 7B60     		str	r3, [r7, #4]
 1685 000a 0346     		mov	r3, r0
 1686 000c FB73     		strb	r3, [r7, #15]
 1687 000e 1346     		mov	r3, r2	@ movhi
 1688 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 492:ioLIB/socket.c ****    uint8_t tmp = 0;
 1689              		.loc 1 492 12
 1690 0012 0023     		movs	r3, #0
 1691 0014 FB75     		strb	r3, [r7, #23]
 493:ioLIB/socket.c ****    uint16_t freesize = 0;
 1692              		.loc 1 493 13
 1693 0016 0023     		movs	r3, #0
 1694 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 494:ioLIB/socket.c ****    uint32_t taddr;
 495:ioLIB/socket.c **** 
 496:ioLIB/socket.c ****    CHECK_SOCKNUM();
 1695              		.loc 1 496 4
 1696 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1697 001c 082B     		cmp	r3, #8
 1698 001e 02D9     		bls	.L107
 1699              		.loc 1 496 4 is_stmt 0 discriminator 1
 1700 0020 4FF0FF33 		mov	r3, #-1
 1701 0024 1BE1     		b	.L108
 1702              	.L107:
 497:ioLIB/socket.c ****    switch(getSn_MR(sn) & 0x0F)
 1703              		.loc 1 497 11 is_stmt 1
 1704 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1705 0028 9B00     		lsls	r3, r3, #2
 1706 002a 0133     		adds	r3, r3, #1
 1707 002c DB00     		lsls	r3, r3, #3
 1708 002e 1846     		mov	r0, r3
 1709 0030 FFF7FEFF 		bl	WIZCHIP_READ
 1710 0034 0346     		mov	r3, r0
 1711              		.loc 1 497 24
 1712 0036 03F00F03 		and	r3, r3, #15
 1713 003a 023B     		subs	r3, r3, #2
 1714              		.loc 1 497 4
 1715 003c 022B     		cmp	r3, #2
 1716 003e 02D9     		bls	.L128
 498:ioLIB/socket.c ****    {
 499:ioLIB/socket.c ****       case Sn_MR_UDP:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 40


 500:ioLIB/socket.c ****       case Sn_MR_MACRAW:
 501:ioLIB/socket.c **** //         break;
 502:ioLIB/socket.c **** //   #if ( _WIZCHIP_ < 5200 )
 503:ioLIB/socket.c ****       case Sn_MR_IPRAW:
 504:ioLIB/socket.c ****          break;
 505:ioLIB/socket.c **** //   #endif
 506:ioLIB/socket.c ****       default:
 507:ioLIB/socket.c ****          return SOCKERR_SOCKMODE;
 1717              		.loc 1 507 17
 1718 0040 6FF00403 		mvn	r3, #4
 1719 0044 0BE1     		b	.L108
 1720              	.L128:
 504:ioLIB/socket.c **** //   #endif
 1721              		.loc 1 504 10
 1722 0046 00BF     		nop
 508:ioLIB/socket.c ****    }
 509:ioLIB/socket.c ****    CHECK_SOCKDATA();
 1723              		.loc 1 509 4
 1724 0048 BB89     		ldrh	r3, [r7, #12]
 1725 004a 002B     		cmp	r3, #0
 1726 004c 02D1     		bne	.L111
 1727              		.loc 1 509 4 is_stmt 0 discriminator 1
 1728 004e 6FF00D03 		mvn	r3, #13
 1729 0052 04E1     		b	.L108
 1730              	.L111:
 510:ioLIB/socket.c ****    //M20140501 : For avoiding fatal error on memory align mismatched
 511:ioLIB/socket.c ****    //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
 512:ioLIB/socket.c ****    //{
 513:ioLIB/socket.c ****       //uint32_t taddr;
 514:ioLIB/socket.c ****       taddr = ((uint32_t)addr[0]) & 0x000000FF;
 1731              		.loc 1 514 30 is_stmt 1
 1732 0054 7B68     		ldr	r3, [r7, #4]
 1733 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1734              		.loc 1 514 13
 1735 0058 3B61     		str	r3, [r7, #16]
 515:ioLIB/socket.c ****       taddr = (taddr << 8) + ((uint32_t)addr[1] & 0x000000FF);
 1736              		.loc 1 515 22
 1737 005a 3B69     		ldr	r3, [r7, #16]
 1738 005c 1B02     		lsls	r3, r3, #8
 1739              		.loc 1 515 45
 1740 005e 7A68     		ldr	r2, [r7, #4]
 1741 0060 0132     		adds	r2, r2, #1
 1742 0062 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1743              		.loc 1 515 13
 1744 0064 1344     		add	r3, r3, r2
 1745 0066 3B61     		str	r3, [r7, #16]
 516:ioLIB/socket.c ****       taddr = (taddr << 8) + ((uint32_t)addr[2] & 0x000000FF);
 1746              		.loc 1 516 22
 1747 0068 3B69     		ldr	r3, [r7, #16]
 1748 006a 1B02     		lsls	r3, r3, #8
 1749              		.loc 1 516 45
 1750 006c 7A68     		ldr	r2, [r7, #4]
 1751 006e 0232     		adds	r2, r2, #2
 1752 0070 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1753              		.loc 1 516 13
 1754 0072 1344     		add	r3, r3, r2
 1755 0074 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 41


 517:ioLIB/socket.c ****       taddr = (taddr << 8) + ((uint32_t)addr[3] & 0x000000FF);
 1756              		.loc 1 517 22
 1757 0076 3B69     		ldr	r3, [r7, #16]
 1758 0078 1B02     		lsls	r3, r3, #8
 1759              		.loc 1 517 45
 1760 007a 7A68     		ldr	r2, [r7, #4]
 1761 007c 0332     		adds	r2, r2, #3
 1762 007e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1763              		.loc 1 517 13
 1764 0080 1344     		add	r3, r3, r2
 1765 0082 3B61     		str	r3, [r7, #16]
 518:ioLIB/socket.c ****    //}
 519:ioLIB/socket.c ****    //
 520:ioLIB/socket.c ****    //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
 521:ioLIB/socket.c ****    if((taddr == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_IPINVALID;
 1766              		.loc 1 521 6
 1767 0084 3B69     		ldr	r3, [r7, #16]
 1768 0086 002B     		cmp	r3, #0
 1769 0088 0ED1     		bne	.L112
 1770              		.loc 1 521 25 discriminator 1
 1771 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1772 008c 9B00     		lsls	r3, r3, #2
 1773 008e 0133     		adds	r3, r3, #1
 1774 0090 DB00     		lsls	r3, r3, #3
 1775 0092 1846     		mov	r0, r3
 1776 0094 FFF7FEFF 		bl	WIZCHIP_READ
 1777 0098 0346     		mov	r3, r0
 1778              		.loc 1 521 37 discriminator 1
 1779 009a 03F00403 		and	r3, r3, #4
 1780              		.loc 1 521 20 discriminator 1
 1781 009e 042B     		cmp	r3, #4
 1782 00a0 02D0     		beq	.L112
 1783              		.loc 1 521 77 discriminator 2
 1784 00a2 6FF00B03 		mvn	r3, #11
 1785 00a6 DAE0     		b	.L108
 1786              	.L112:
 522:ioLIB/socket.c ****    if((port  == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_PORTZERO;
 1787              		.loc 1 522 6
 1788 00a8 3B8C     		ldrh	r3, [r7, #32]
 1789 00aa 002B     		cmp	r3, #0
 1790 00ac 0ED1     		bne	.L113
 1791              		.loc 1 522 25 discriminator 1
 1792 00ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1793 00b0 9B00     		lsls	r3, r3, #2
 1794 00b2 0133     		adds	r3, r3, #1
 1795 00b4 DB00     		lsls	r3, r3, #3
 1796 00b6 1846     		mov	r0, r3
 1797 00b8 FFF7FEFF 		bl	WIZCHIP_READ
 1798 00bc 0346     		mov	r3, r0
 1799              		.loc 1 522 37 discriminator 1
 1800 00be 03F00403 		and	r3, r3, #4
 1801              		.loc 1 522 20 discriminator 1
 1802 00c2 042B     		cmp	r3, #4
 1803 00c4 02D0     		beq	.L113
 1804              		.loc 1 522 77 discriminator 2
 1805 00c6 6FF00A03 		mvn	r3, #10
 1806 00ca C8E0     		b	.L108
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 42


 1807              	.L113:
 523:ioLIB/socket.c ****    tmp = getSn_SR(sn);
 1808              		.loc 1 523 10
 1809 00cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1810 00ce 9B00     		lsls	r3, r3, #2
 1811 00d0 0133     		adds	r3, r3, #1
 1812 00d2 DB00     		lsls	r3, r3, #3
 1813 00d4 03F54073 		add	r3, r3, #768
 1814 00d8 1846     		mov	r0, r3
 1815 00da FFF7FEFF 		bl	WIZCHIP_READ
 1816 00de 0346     		mov	r3, r0
 1817 00e0 FB75     		strb	r3, [r7, #23]
 524:ioLIB/socket.c **** //#if ( _WIZCHIP_ < 5200 )
 525:ioLIB/socket.c ****    if((tmp != SOCK_MACRAW) && (tmp != SOCK_UDP) && (tmp != SOCK_IPRAW)) return SOCKERR_SOCKSTATUS;
 1818              		.loc 1 525 6
 1819 00e2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1820 00e4 422B     		cmp	r3, #66
 1821 00e6 08D0     		beq	.L114
 1822              		.loc 1 525 28 discriminator 1
 1823 00e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1824 00ea 222B     		cmp	r3, #34
 1825 00ec 05D0     		beq	.L114
 1826              		.loc 1 525 49 discriminator 2
 1827 00ee FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1828 00f0 322B     		cmp	r3, #50
 1829 00f2 02D0     		beq	.L114
 1830              		.loc 1 525 80 discriminator 3
 1831 00f4 6FF00603 		mvn	r3, #6
 1832 00f8 B1E0     		b	.L108
 1833              	.L114:
 526:ioLIB/socket.c **** //#else
 527:ioLIB/socket.c **** //   if(tmp != SOCK_MACRAW && tmp != SOCK_UDP) return SOCKERR_SOCKSTATUS;
 528:ioLIB/socket.c **** //#endif
 529:ioLIB/socket.c ****       
 530:ioLIB/socket.c ****    setSn_DIPR(sn,addr);
 1834              		.loc 1 530 4
 1835 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1836 00fc 9B00     		lsls	r3, r3, #2
 1837 00fe 0133     		adds	r3, r3, #1
 1838 0100 DB00     		lsls	r3, r3, #3
 1839 0102 03F54063 		add	r3, r3, #3072
 1840 0106 0422     		movs	r2, #4
 1841 0108 7968     		ldr	r1, [r7, #4]
 1842 010a 1846     		mov	r0, r3
 1843 010c FFF7FEFF 		bl	WIZCHIP_WRITE_BUF
 531:ioLIB/socket.c ****    setSn_DPORT(sn,port);      
 1844              		.loc 1 531 4
 1845 0110 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1846 0112 9B00     		lsls	r3, r3, #2
 1847 0114 0133     		adds	r3, r3, #1
 1848 0116 DB00     		lsls	r3, r3, #3
 1849 0118 03F58053 		add	r3, r3, #4096
 1850 011c 1A46     		mov	r2, r3
 1851 011e 3B8C     		ldrh	r3, [r7, #32]
 1852 0120 1B0A     		lsrs	r3, r3, #8
 1853 0122 9BB2     		uxth	r3, r3
 1854 0124 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 43


 1855 0126 1946     		mov	r1, r3
 1856 0128 1046     		mov	r0, r2
 1857 012a FFF7FEFF 		bl	WIZCHIP_WRITE
 1858 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1859 0130 9B00     		lsls	r3, r3, #2
 1860 0132 0133     		adds	r3, r3, #1
 1861 0134 DB00     		lsls	r3, r3, #3
 1862 0136 03F58853 		add	r3, r3, #4352
 1863 013a 1A46     		mov	r2, r3
 1864 013c 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1865 013e DBB2     		uxtb	r3, r3
 1866 0140 1946     		mov	r1, r3
 1867 0142 1046     		mov	r0, r2
 1868 0144 FFF7FEFF 		bl	WIZCHIP_WRITE
 532:ioLIB/socket.c ****    freesize = getSn_TxMAX(sn);
 1869              		.loc 1 532 15
 1870 0148 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1871 014a 9B00     		lsls	r3, r3, #2
 1872 014c 0133     		adds	r3, r3, #1
 1873 014e DB00     		lsls	r3, r3, #3
 1874 0150 03F5F853 		add	r3, r3, #7936
 1875 0154 1846     		mov	r0, r3
 1876 0156 FFF7FEFF 		bl	WIZCHIP_READ
 1877 015a 0346     		mov	r3, r0
 1878 015c 9BB2     		uxth	r3, r3
 1879              		.loc 1 532 13
 1880 015e 9B02     		lsls	r3, r3, #10
 1881 0160 BB82     		strh	r3, [r7, #20]	@ movhi
 533:ioLIB/socket.c ****    if (len > freesize) len = freesize; // check size not to exceed MAX size.
 1882              		.loc 1 533 7
 1883 0162 BA89     		ldrh	r2, [r7, #12]
 1884 0164 BB8A     		ldrh	r3, [r7, #20]
 1885 0166 9A42     		cmp	r2, r3
 1886 0168 01D9     		bls	.L120
 1887              		.loc 1 533 28 discriminator 1
 1888 016a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1889 016c BB81     		strh	r3, [r7, #12]	@ movhi
 1890              	.L120:
 534:ioLIB/socket.c ****    while(1)
 535:ioLIB/socket.c ****    {
 536:ioLIB/socket.c ****       freesize = getSn_TX_FSR(sn);
 1891              		.loc 1 536 18
 1892 016e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1893 0170 1846     		mov	r0, r3
 1894 0172 FFF7FEFF 		bl	getSn_TX_FSR
 1895 0176 0346     		mov	r3, r0
 1896 0178 BB82     		strh	r3, [r7, #20]	@ movhi
 537:ioLIB/socket.c ****       if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
 1897              		.loc 1 537 10
 1898 017a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1899 017c 9B00     		lsls	r3, r3, #2
 1900 017e 0133     		adds	r3, r3, #1
 1901 0180 DB00     		lsls	r3, r3, #3
 1902 0182 03F54073 		add	r3, r3, #768
 1903 0186 1846     		mov	r0, r3
 1904 0188 FFF7FEFF 		bl	WIZCHIP_READ
 1905 018c 0346     		mov	r3, r0
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 44


 1906              		.loc 1 537 9
 1907 018e 002B     		cmp	r3, #0
 1908 0190 02D1     		bne	.L116
 1909              		.loc 1 537 46 discriminator 1
 1910 0192 6FF00303 		mvn	r3, #3
 1911 0196 62E0     		b	.L108
 1912              	.L116:
 538:ioLIB/socket.c ****       if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
 1913              		.loc 1 538 11
 1914 0198 334B     		ldr	r3, .L130
 1915 019a 1B88     		ldrh	r3, [r3]
 1916 019c 1A46     		mov	r2, r3
 1917 019e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1918 01a0 42FA03F3 		asr	r3, r2, r3
 1919 01a4 03F00103 		and	r3, r3, #1
 1920              		.loc 1 538 9
 1921 01a8 002B     		cmp	r3, #0
 1922 01aa 05D0     		beq	.L117
 1923              		.loc 1 538 36 discriminator 1
 1924 01ac BA89     		ldrh	r2, [r7, #12]
 1925 01ae BB8A     		ldrh	r3, [r7, #20]
 1926 01b0 9A42     		cmp	r2, r3
 1927 01b2 01D9     		bls	.L117
 1928              		.loc 1 538 65 discriminator 2
 1929 01b4 0023     		movs	r3, #0
 1930 01b6 52E0     		b	.L108
 1931              	.L117:
 539:ioLIB/socket.c ****       if(len <= freesize) break;
 1932              		.loc 1 539 9
 1933 01b8 BA89     		ldrh	r2, [r7, #12]
 1934 01ba BB8A     		ldrh	r3, [r7, #20]
 1935 01bc 9A42     		cmp	r2, r3
 1936 01be 00D9     		bls	.L129
 536:ioLIB/socket.c ****       if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
 1937              		.loc 1 536 16
 1938 01c0 D5E7     		b	.L120
 1939              	.L129:
 1940              		.loc 1 539 7
 1941 01c2 00BF     		nop
 540:ioLIB/socket.c ****    };
 541:ioLIB/socket.c **** 	wiz_send_data(sn, buf, len);
 1942              		.loc 1 541 2
 1943 01c4 BA89     		ldrh	r2, [r7, #12]
 1944 01c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1945 01c8 B968     		ldr	r1, [r7, #8]
 1946 01ca 1846     		mov	r0, r3
 1947 01cc FFF7FEFF 		bl	wiz_send_data
 542:ioLIB/socket.c **** 
 543:ioLIB/socket.c ****    #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
 544:ioLIB/socket.c ****       getSIPR((uint8_t*)&taddr);
 545:ioLIB/socket.c ****       if(taddr == 0)
 546:ioLIB/socket.c ****       {
 547:ioLIB/socket.c ****          getSUBR((uint8_t*)&taddr);
 548:ioLIB/socket.c ****          setSUBR((uint8_t*)"\x00\x00\x00\x00");
 549:ioLIB/socket.c ****       }
 550:ioLIB/socket.c ****       else taddr = 0;
 551:ioLIB/socket.c ****    #endif
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 45


 552:ioLIB/socket.c **** 
 553:ioLIB/socket.c **** //A20150601 : For W5300
 554:ioLIB/socket.c **** #if _WIZCHIP_ == 5300
 555:ioLIB/socket.c ****    setSn_TX_WRSR(sn, len);
 556:ioLIB/socket.c **** #endif
 557:ioLIB/socket.c **** //   
 558:ioLIB/socket.c **** 	setSn_CR(sn,Sn_CR_SEND);
 1948              		.loc 1 558 2
 1949 01d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1950 01d2 9B00     		lsls	r3, r3, #2
 1951 01d4 0133     		adds	r3, r3, #1
 1952 01d6 DB00     		lsls	r3, r3, #3
 1953 01d8 03F58073 		add	r3, r3, #256
 1954 01dc 2021     		movs	r1, #32
 1955 01de 1846     		mov	r0, r3
 1956 01e0 FFF7FEFF 		bl	WIZCHIP_WRITE
 559:ioLIB/socket.c **** 	/* wait to process the command... */
 560:ioLIB/socket.c **** 	while(getSn_CR(sn));
 1957              		.loc 1 560 7
 1958 01e4 00BF     		nop
 1959              	.L121:
 1960              		.loc 1 560 8 discriminator 1
 1961 01e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1962 01e8 9B00     		lsls	r3, r3, #2
 1963 01ea 0133     		adds	r3, r3, #1
 1964 01ec DB00     		lsls	r3, r3, #3
 1965 01ee 03F58073 		add	r3, r3, #256
 1966 01f2 1846     		mov	r0, r3
 1967 01f4 FFF7FEFF 		bl	WIZCHIP_READ
 1968 01f8 0346     		mov	r3, r0
 1969              		.loc 1 560 7 discriminator 1
 1970 01fa 002B     		cmp	r3, #0
 1971 01fc F3D1     		bne	.L121
 1972              	.L125:
 561:ioLIB/socket.c ****    while(1)
 562:ioLIB/socket.c ****    {
 563:ioLIB/socket.c ****       tmp = getSn_IR(sn);
 1973              		.loc 1 563 13
 1974 01fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1975 0200 9B00     		lsls	r3, r3, #2
 1976 0202 0133     		adds	r3, r3, #1
 1977 0204 DB00     		lsls	r3, r3, #3
 1978 0206 03F50073 		add	r3, r3, #512
 1979 020a 1846     		mov	r0, r3
 1980 020c FFF7FEFF 		bl	WIZCHIP_READ
 1981 0210 0346     		mov	r3, r0
 1982              		.loc 1 563 11
 1983 0212 03F01F03 		and	r3, r3, #31
 1984 0216 FB75     		strb	r3, [r7, #23]
 564:ioLIB/socket.c ****       if(tmp & Sn_IR_SENDOK)
 1985              		.loc 1 564 14
 1986 0218 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1987 021a 03F01003 		and	r3, r3, #16
 1988              		.loc 1 564 9
 1989 021e 002B     		cmp	r3, #0
 1990 0220 0CD0     		beq	.L122
 565:ioLIB/socket.c ****       {
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 46


 566:ioLIB/socket.c ****          setSn_IR(sn, Sn_IR_SENDOK);
 1991              		.loc 1 566 10
 1992 0222 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1993 0224 9B00     		lsls	r3, r3, #2
 1994 0226 0133     		adds	r3, r3, #1
 1995 0228 DB00     		lsls	r3, r3, #3
 1996 022a 03F50073 		add	r3, r3, #512
 1997 022e 1021     		movs	r1, #16
 1998 0230 1846     		mov	r0, r3
 1999 0232 FFF7FEFF 		bl	WIZCHIP_WRITE
 567:ioLIB/socket.c ****          break;
 2000              		.loc 1 567 10
 2001 0236 00BF     		nop
 568:ioLIB/socket.c ****       }
 569:ioLIB/socket.c ****       //M:20131104
 570:ioLIB/socket.c ****       //else if(tmp & Sn_IR_TIMEOUT) return SOCKERR_TIMEOUT;
 571:ioLIB/socket.c ****       else if(tmp & Sn_IR_TIMEOUT)
 572:ioLIB/socket.c ****       {
 573:ioLIB/socket.c ****          setSn_IR(sn, Sn_IR_TIMEOUT);
 574:ioLIB/socket.c ****          //M20150409 : Fixed the lost of sign bits by type casting.
 575:ioLIB/socket.c ****          //len = (uint16_t)SOCKERR_TIMEOUT;
 576:ioLIB/socket.c ****          //break;
 577:ioLIB/socket.c ****          #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
 578:ioLIB/socket.c ****             if(taddr) setSUBR((uint8_t*)&taddr);
 579:ioLIB/socket.c ****          #endif
 580:ioLIB/socket.c ****          return SOCKERR_TIMEOUT;
 581:ioLIB/socket.c ****       }
 582:ioLIB/socket.c ****       ////////////
 583:ioLIB/socket.c ****    }
 584:ioLIB/socket.c ****    #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
 585:ioLIB/socket.c ****       if(taddr) setSUBR((uint8_t*)&taddr);
 586:ioLIB/socket.c ****    #endif
 587:ioLIB/socket.c ****    //M20150409 : Explicit Type Casting
 588:ioLIB/socket.c ****    //return len;
 589:ioLIB/socket.c ****    return (int32_t)len;
 2002              		.loc 1 589 11
 2003 0238 BB89     		ldrh	r3, [r7, #12]
 2004 023a 10E0     		b	.L108
 2005              	.L122:
 571:ioLIB/socket.c ****       {
 2006              		.loc 1 571 19
 2007 023c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2008 023e 03F00803 		and	r3, r3, #8
 571:ioLIB/socket.c ****       {
 2009              		.loc 1 571 14
 2010 0242 002B     		cmp	r3, #0
 2011 0244 DBD0     		beq	.L125
 573:ioLIB/socket.c ****          //M20150409 : Fixed the lost of sign bits by type casting.
 2012              		.loc 1 573 10
 2013 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2014 0248 9B00     		lsls	r3, r3, #2
 2015 024a 0133     		adds	r3, r3, #1
 2016 024c DB00     		lsls	r3, r3, #3
 2017 024e 03F50073 		add	r3, r3, #512
 2018 0252 0821     		movs	r1, #8
 2019 0254 1846     		mov	r0, r3
 2020 0256 FFF7FEFF 		bl	WIZCHIP_WRITE
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 47


 580:ioLIB/socket.c ****       }
 2021              		.loc 1 580 17
 2022 025a 6FF00C03 		mvn	r3, #12
 2023              	.L108:
 590:ioLIB/socket.c **** }
 2024              		.loc 1 590 1
 2025 025e 1846     		mov	r0, r3
 2026 0260 1837     		adds	r7, r7, #24
 2027              	.LCFI38:
 2028              		.cfi_def_cfa_offset 8
 2029 0262 BD46     		mov	sp, r7
 2030              	.LCFI39:
 2031              		.cfi_def_cfa_register 13
 2032              		@ sp needed
 2033 0264 80BD     		pop	{r7, pc}
 2034              	.L131:
 2035 0266 00BF     		.align	2
 2036              	.L130:
 2037 0268 00000000 		.word	sock_io_mode
 2038              		.cfi_endproc
 2039              	.LFE7:
 2041              		.section	.text.recvfrom,"ax",%progbits
 2042              		.align	1
 2043              		.global	recvfrom
 2044              		.syntax unified
 2045              		.thumb
 2046              		.thumb_func
 2048              	recvfrom:
 2049              	.LFB8:
 591:ioLIB/socket.c **** 
 592:ioLIB/socket.c **** 
 593:ioLIB/socket.c **** 
 594:ioLIB/socket.c **** int32_t recvfrom(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t *port)
 595:ioLIB/socket.c **** {
 2050              		.loc 1 595 1
 2051              		.cfi_startproc
 2052              		@ args = 4, pretend = 0, frame = 32
 2053              		@ frame_needed = 1, uses_anonymous_args = 0
 2054 0000 80B5     		push	{r7, lr}
 2055              	.LCFI40:
 2056              		.cfi_def_cfa_offset 8
 2057              		.cfi_offset 7, -8
 2058              		.cfi_offset 14, -4
 2059 0002 88B0     		sub	sp, sp, #32
 2060              	.LCFI41:
 2061              		.cfi_def_cfa_offset 40
 2062 0004 00AF     		add	r7, sp, #0
 2063              	.LCFI42:
 2064              		.cfi_def_cfa_register 7
 2065 0006 B960     		str	r1, [r7, #8]
 2066 0008 7B60     		str	r3, [r7, #4]
 2067 000a 0346     		mov	r3, r0
 2068 000c FB73     		strb	r3, [r7, #15]
 2069 000e 1346     		mov	r3, r2	@ movhi
 2070 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 596:ioLIB/socket.c **** //M20150601 : For W5300   
 597:ioLIB/socket.c **** #if _WIZCHIP_ == 5300
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 48


 598:ioLIB/socket.c ****    uint16_t mr;
 599:ioLIB/socket.c ****    uint16_t mr1;
 600:ioLIB/socket.c **** #else   
 601:ioLIB/socket.c ****    uint8_t  mr;
 602:ioLIB/socket.c **** #endif
 603:ioLIB/socket.c **** //   
 604:ioLIB/socket.c ****    uint8_t  head[8];
 605:ioLIB/socket.c **** 	uint16_t pack_len=0;
 2071              		.loc 1 605 11
 2072 0012 0023     		movs	r3, #0
 2073 0014 FB83     		strh	r3, [r7, #30]	@ movhi
 606:ioLIB/socket.c **** 
 607:ioLIB/socket.c ****    CHECK_SOCKNUM();
 2074              		.loc 1 607 4
 2075 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2076 0018 082B     		cmp	r3, #8
 2077 001a 02D9     		bls	.L133
 2078              		.loc 1 607 4 is_stmt 0 discriminator 1
 2079 001c 4FF0FF33 		mov	r3, #-1
 2080 0020 D4E1     		b	.L164
 2081              	.L133:
 608:ioLIB/socket.c ****    //CHECK_SOCKMODE(Sn_MR_UDP);
 609:ioLIB/socket.c **** //A20150601
 610:ioLIB/socket.c **** #if _WIZCHIP_ == 5300
 611:ioLIB/socket.c ****    mr1 = getMR();
 612:ioLIB/socket.c **** #endif   
 613:ioLIB/socket.c **** 
 614:ioLIB/socket.c ****    switch((mr=getSn_MR(sn)) & 0x0F)
 2082              		.loc 1 614 15 is_stmt 1
 2083 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2084 0024 9B00     		lsls	r3, r3, #2
 2085 0026 0133     		adds	r3, r3, #1
 2086 0028 DB00     		lsls	r3, r3, #3
 2087 002a 1846     		mov	r0, r3
 2088 002c FFF7FEFF 		bl	WIZCHIP_READ
 2089 0030 0346     		mov	r3, r0
 2090 0032 7B77     		strb	r3, [r7, #29]
 2091              		.loc 1 614 29
 2092 0034 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2093 0036 03F00F03 		and	r3, r3, #15
 2094 003a 023B     		subs	r3, r3, #2
 2095              		.loc 1 614 4
 2096 003c 022B     		cmp	r3, #2
 2097 003e 02D9     		bls	.L166
 615:ioLIB/socket.c ****    {
 616:ioLIB/socket.c ****       case Sn_MR_UDP:
 617:ioLIB/socket.c **** 	  case Sn_MR_IPRAW:
 618:ioLIB/socket.c ****       case Sn_MR_MACRAW:
 619:ioLIB/socket.c ****          break;
 620:ioLIB/socket.c ****    #if ( _WIZCHIP_ < 5200 )         
 621:ioLIB/socket.c ****       case Sn_MR_PPPoE:
 622:ioLIB/socket.c ****          break;
 623:ioLIB/socket.c ****    #endif
 624:ioLIB/socket.c ****       default:
 625:ioLIB/socket.c ****          return SOCKERR_SOCKMODE;
 2098              		.loc 1 625 17
 2099 0040 6FF00403 		mvn	r3, #4
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 49


 2100 0044 C2E1     		b	.L164
 2101              	.L166:
 619:ioLIB/socket.c ****    #if ( _WIZCHIP_ < 5200 )         
 2102              		.loc 1 619 10
 2103 0046 00BF     		nop
 626:ioLIB/socket.c ****    }
 627:ioLIB/socket.c ****    CHECK_SOCKDATA();
 2104              		.loc 1 627 4
 2105 0048 BB89     		ldrh	r3, [r7, #12]
 2106 004a 002B     		cmp	r3, #0
 2107 004c 02D1     		bne	.L137
 2108              		.loc 1 627 4 is_stmt 0 discriminator 1
 2109 004e 6FF00D03 		mvn	r3, #13
 2110 0052 BBE1     		b	.L164
 2111              	.L137:
 628:ioLIB/socket.c ****    if(sock_remained_size[sn] == 0)
 2112              		.loc 1 628 25 is_stmt 1
 2113 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2114 0056 884A     		ldr	r2, .L168
 2115 0058 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2116              		.loc 1 628 6
 2117 005c 002B     		cmp	r3, #0
 2118 005e 28D1     		bne	.L138
 2119              	.L142:
 629:ioLIB/socket.c ****    {
 630:ioLIB/socket.c ****       while(1)
 631:ioLIB/socket.c ****       {
 632:ioLIB/socket.c ****          pack_len = getSn_RX_RSR(sn);
 2120              		.loc 1 632 21
 2121 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2122 0062 1846     		mov	r0, r3
 2123 0064 FFF7FEFF 		bl	getSn_RX_RSR
 2124 0068 0346     		mov	r3, r0
 2125 006a FB83     		strh	r3, [r7, #30]	@ movhi
 633:ioLIB/socket.c ****          if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
 2126              		.loc 1 633 13
 2127 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2128 006e 9B00     		lsls	r3, r3, #2
 2129 0070 0133     		adds	r3, r3, #1
 2130 0072 DB00     		lsls	r3, r3, #3
 2131 0074 03F54073 		add	r3, r3, #768
 2132 0078 1846     		mov	r0, r3
 2133 007a FFF7FEFF 		bl	WIZCHIP_READ
 2134 007e 0346     		mov	r3, r0
 2135              		.loc 1 633 12
 2136 0080 002B     		cmp	r3, #0
 2137 0082 02D1     		bne	.L139
 2138              		.loc 1 633 49 discriminator 1
 2139 0084 6FF00303 		mvn	r3, #3
 2140 0088 A0E1     		b	.L164
 2141              	.L139:
 634:ioLIB/socket.c ****          if( (sock_io_mode & (1<<sn)) && (pack_len == 0) ) return SOCK_BUSY;
 2142              		.loc 1 634 14
 2143 008a 7C4B     		ldr	r3, .L168+4
 2144 008c 1B88     		ldrh	r3, [r3]
 2145 008e 1A46     		mov	r2, r3
 2146 0090 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 50


 2147 0092 42FA03F3 		asr	r3, r2, r3
 2148 0096 03F00103 		and	r3, r3, #1
 2149              		.loc 1 634 12
 2150 009a 002B     		cmp	r3, #0
 2151 009c 04D0     		beq	.L140
 2152              		.loc 1 634 39 discriminator 1
 2153 009e FB8B     		ldrh	r3, [r7, #30]
 2154 00a0 002B     		cmp	r3, #0
 2155 00a2 01D1     		bne	.L140
 2156              		.loc 1 634 67 discriminator 2
 2157 00a4 0023     		movs	r3, #0
 2158 00a6 91E1     		b	.L164
 2159              	.L140:
 635:ioLIB/socket.c ****          if(pack_len != 0) break;
 2160              		.loc 1 635 12
 2161 00a8 FB8B     		ldrh	r3, [r7, #30]
 2162 00aa 002B     		cmp	r3, #0
 2163 00ac 00D1     		bne	.L167
 632:ioLIB/socket.c ****          if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
 2164              		.loc 1 632 19
 2165 00ae D7E7     		b	.L142
 2166              	.L167:
 2167              		.loc 1 635 10
 2168 00b0 00BF     		nop
 2169              	.L138:
 636:ioLIB/socket.c ****       };
 637:ioLIB/socket.c ****    }
 638:ioLIB/socket.c **** //D20150601 : Move it to bottom
 639:ioLIB/socket.c **** // sock_pack_info[sn] = PACK_COMPLETED;
 640:ioLIB/socket.c **** 	switch (mr & 0x07)
 2170              		.loc 1 640 13
 2171 00b2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2172 00b4 03F00703 		and	r3, r3, #7
 2173              		.loc 1 640 2
 2174 00b8 042B     		cmp	r3, #4
 2175 00ba 79D0     		beq	.L143
 2176 00bc 042B     		cmp	r3, #4
 2177 00be 00F34281 		bgt	.L144
 2178 00c2 022B     		cmp	r3, #2
 2179 00c4 03D0     		beq	.L145
 2180 00c6 032B     		cmp	r3, #3
 2181 00c8 00F0DC80 		beq	.L146
 2182 00cc 3BE1     		b	.L144
 2183              	.L145:
 641:ioLIB/socket.c **** 	{
 642:ioLIB/socket.c **** 	   case Sn_MR_UDP :
 643:ioLIB/socket.c **** 	      if(sock_remained_size[sn] == 0)
 2184              		.loc 1 643 29
 2185 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2186 00d0 694A     		ldr	r2, .L168
 2187 00d2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2188              		.loc 1 643 10
 2189 00d6 002B     		cmp	r3, #0
 2190 00d8 52D1     		bne	.L147
 644:ioLIB/socket.c **** 	      {
 645:ioLIB/socket.c ****    			wiz_recv_data(sn, head, 8);
 2191              		.loc 1 645 7
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 51


 2192 00da 07F11401 		add	r1, r7, #20
 2193 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2194 00e0 0822     		movs	r2, #8
 2195 00e2 1846     		mov	r0, r3
 2196 00e4 FFF7FEFF 		bl	wiz_recv_data
 646:ioLIB/socket.c ****    			setSn_CR(sn,Sn_CR_RECV);
 2197              		.loc 1 646 7
 2198 00e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2199 00ea 9B00     		lsls	r3, r3, #2
 2200 00ec 0133     		adds	r3, r3, #1
 2201 00ee DB00     		lsls	r3, r3, #3
 2202 00f0 03F58073 		add	r3, r3, #256
 2203 00f4 4021     		movs	r1, #64
 2204 00f6 1846     		mov	r0, r3
 2205 00f8 FFF7FEFF 		bl	WIZCHIP_WRITE
 647:ioLIB/socket.c ****    			while(getSn_CR(sn));
 2206              		.loc 1 647 12
 2207 00fc 00BF     		nop
 2208              	.L148:
 2209              		.loc 1 647 13 discriminator 1
 2210 00fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2211 0100 9B00     		lsls	r3, r3, #2
 2212 0102 0133     		adds	r3, r3, #1
 2213 0104 DB00     		lsls	r3, r3, #3
 2214 0106 03F58073 		add	r3, r3, #256
 2215 010a 1846     		mov	r0, r3
 2216 010c FFF7FEFF 		bl	WIZCHIP_READ
 2217 0110 0346     		mov	r3, r0
 2218              		.loc 1 647 12 discriminator 1
 2219 0112 002B     		cmp	r3, #0
 2220 0114 F3D1     		bne	.L148
 648:ioLIB/socket.c ****    			// read peer's IP address, port number & packet length
 649:ioLIB/socket.c ****    	   //A20150601 : For W5300
 650:ioLIB/socket.c ****    		#if _WIZCHIP_ == 5300
 651:ioLIB/socket.c ****    		   if(mr1 & MR_FS)
 652:ioLIB/socket.c ****    		   {
 653:ioLIB/socket.c ****    		      addr[0] = head[1];
 654:ioLIB/socket.c ****    		      addr[1] = head[0];
 655:ioLIB/socket.c ****    		      addr[2] = head[3];
 656:ioLIB/socket.c ****    		      addr[3] = head[2];
 657:ioLIB/socket.c ****    		      *port = head[5];
 658:ioLIB/socket.c ****    		      *port = (*port << 8) + head[4];
 659:ioLIB/socket.c ****       			sock_remained_size[sn] = head[7];
 660:ioLIB/socket.c ****       			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[6];
 661:ioLIB/socket.c ****    		   }
 662:ioLIB/socket.c ****             else
 663:ioLIB/socket.c ****             {
 664:ioLIB/socket.c ****          #endif
 665:ioLIB/socket.c ****                addr[0] = head[0];
 2221              		.loc 1 665 30
 2222 0116 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 2223              		.loc 1 665 24
 2224 0118 7B68     		ldr	r3, [r7, #4]
 2225 011a 1A70     		strb	r2, [r3]
 666:ioLIB/socket.c ****       			addr[1] = head[1];
 2226              		.loc 1 666 14
 2227 011c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 52


 2228 011e 0133     		adds	r3, r3, #1
 2229              		.loc 1 666 24
 2230 0120 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 2231              		.loc 1 666 18
 2232 0122 1A70     		strb	r2, [r3]
 667:ioLIB/socket.c ****       			addr[2] = head[2];
 2233              		.loc 1 667 14
 2234 0124 7B68     		ldr	r3, [r7, #4]
 2235 0126 0233     		adds	r3, r3, #2
 2236              		.loc 1 667 24
 2237 0128 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2238              		.loc 1 667 18
 2239 012a 1A70     		strb	r2, [r3]
 668:ioLIB/socket.c ****       			addr[3] = head[3];
 2240              		.loc 1 668 14
 2241 012c 7B68     		ldr	r3, [r7, #4]
 2242 012e 0333     		adds	r3, r3, #3
 2243              		.loc 1 668 24
 2244 0130 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2245              		.loc 1 668 18
 2246 0132 1A70     		strb	r2, [r3]
 669:ioLIB/socket.c ****       			*port = head[4];
 2247              		.loc 1 669 22
 2248 0134 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2249 0136 9AB2     		uxth	r2, r3
 2250              		.loc 1 669 16
 2251 0138 BB6A     		ldr	r3, [r7, #40]
 2252 013a 1A80     		strh	r2, [r3]	@ movhi
 670:ioLIB/socket.c ****       			*port = (*port << 8) + head[5];
 2253              		.loc 1 670 19
 2254 013c BB6A     		ldr	r3, [r7, #40]
 2255 013e 1B88     		ldrh	r3, [r3]
 2256              		.loc 1 670 25
 2257 0140 1B02     		lsls	r3, r3, #8
 2258 0142 9AB2     		uxth	r2, r3
 2259              		.loc 1 670 37
 2260 0144 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2261 0146 9BB2     		uxth	r3, r3
 2262              		.loc 1 670 31
 2263 0148 1344     		add	r3, r3, r2
 2264 014a 9AB2     		uxth	r2, r3
 2265              		.loc 1 670 16
 2266 014c BB6A     		ldr	r3, [r7, #40]
 2267 014e 1A80     		strh	r2, [r3]	@ movhi
 671:ioLIB/socket.c ****       			sock_remained_size[sn] = head[6];
 2268              		.loc 1 671 39
 2269 0150 BA7E     		ldrb	r2, [r7, #26]	@ zero_extendqisi2
 2270              		.loc 1 671 28
 2271 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2272              		.loc 1 671 39
 2273 0154 91B2     		uxth	r1, r2
 2274              		.loc 1 671 33
 2275 0156 484A     		ldr	r2, .L168
 2276 0158 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 672:ioLIB/socket.c ****       			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[7];
 2277              		.loc 1 672 54
 2278 015c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 53


 2279 015e 464A     		ldr	r2, .L168
 2280 0160 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2281              		.loc 1 672 59
 2282 0164 1B02     		lsls	r3, r3, #8
 2283 0166 99B2     		uxth	r1, r3
 2284              		.loc 1 672 71
 2285 0168 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 2286 016a 9AB2     		uxth	r2, r3
 2287              		.loc 1 672 28
 2288 016c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2289              		.loc 1 672 65
 2290 016e 0A44     		add	r2, r2, r1
 2291 0170 91B2     		uxth	r1, r2
 2292              		.loc 1 672 33
 2293 0172 414A     		ldr	r2, .L168
 2294 0174 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 673:ioLIB/socket.c ****          #if _WIZCHIP_ == 5300
 674:ioLIB/socket.c ****             }
 675:ioLIB/socket.c ****          #endif
 676:ioLIB/socket.c ****    			sock_pack_info[sn] = PACK_FIRST;
 2295              		.loc 1 676 21
 2296 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2297              		.loc 1 676 26
 2298 017a 414A     		ldr	r2, .L168+8
 2299 017c 8021     		movs	r1, #128
 2300 017e D154     		strb	r1, [r2, r3]
 2301              	.L147:
 677:ioLIB/socket.c ****    	   }
 678:ioLIB/socket.c **** 			if(len < sock_remained_size[sn]) pack_len = len;
 2302              		.loc 1 678 31
 2303 0180 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2304 0182 3D4A     		ldr	r2, .L168
 2305 0184 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2306              		.loc 1 678 6
 2307 0188 BA89     		ldrh	r2, [r7, #12]
 2308 018a 9A42     		cmp	r2, r3
 2309 018c 02D2     		bcs	.L149
 2310              		.loc 1 678 46 discriminator 1
 2311 018e BB89     		ldrh	r3, [r7, #12]	@ movhi
 2312 0190 FB83     		strh	r3, [r7, #30]	@ movhi
 2313 0192 04E0     		b	.L150
 2314              	.L149:
 679:ioLIB/socket.c **** 			else pack_len = sock_remained_size[sn];
 2315              		.loc 1 679 38
 2316 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2317              		.loc 1 679 18
 2318 0196 384A     		ldr	r2, .L168
 2319 0198 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2320 019c FB83     		strh	r3, [r7, #30]	@ movhi
 2321              	.L150:
 680:ioLIB/socket.c **** 			//A20150601 : For W5300
 681:ioLIB/socket.c **** 			len = pack_len;
 2322              		.loc 1 681 8
 2323 019e FB8B     		ldrh	r3, [r7, #30]	@ movhi
 2324 01a0 BB81     		strh	r3, [r7, #12]	@ movhi
 682:ioLIB/socket.c **** 			#if _WIZCHIP_ == 5300
 683:ioLIB/socket.c **** 			   if(sock_pack_info[sn] & PACK_FIFOBYTE)
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 54


 684:ioLIB/socket.c **** 			   {
 685:ioLIB/socket.c **** 			      *buf++ = sock_remained_byte[sn];
 686:ioLIB/socket.c **** 			      pack_len -= 1;
 687:ioLIB/socket.c **** 			      sock_remained_size[sn] -= 1;
 688:ioLIB/socket.c **** 			      sock_pack_info[sn] &= ~PACK_FIFOBYTE;
 689:ioLIB/socket.c **** 			   }
 690:ioLIB/socket.c **** 			#endif
 691:ioLIB/socket.c **** 			//
 692:ioLIB/socket.c **** 			// Need to packet length check (default 1472)
 693:ioLIB/socket.c **** 			//
 694:ioLIB/socket.c ****    		wiz_recv_data(sn, buf, pack_len); // data copy.
 2325              		.loc 1 694 6
 2326 01a2 FA8B     		ldrh	r2, [r7, #30]
 2327 01a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2328 01a6 B968     		ldr	r1, [r7, #8]
 2329 01a8 1846     		mov	r0, r3
 2330 01aa FFF7FEFF 		bl	wiz_recv_data
 695:ioLIB/socket.c **** 			break;
 2331              		.loc 1 695 4
 2332 01ae D6E0     		b	.L151
 2333              	.L143:
 696:ioLIB/socket.c **** 	   case Sn_MR_MACRAW :
 697:ioLIB/socket.c **** 	      if(sock_remained_size[sn] == 0)
 2334              		.loc 1 697 29
 2335 01b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2336 01b2 314A     		ldr	r2, .L168
 2337 01b4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2338              		.loc 1 697 10
 2339 01b8 002B     		cmp	r3, #0
 2340 01ba 46D1     		bne	.L152
 698:ioLIB/socket.c **** 	      {
 699:ioLIB/socket.c ****    			wiz_recv_data(sn, head, 2);
 2341              		.loc 1 699 7
 2342 01bc 07F11401 		add	r1, r7, #20
 2343 01c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2344 01c2 0222     		movs	r2, #2
 2345 01c4 1846     		mov	r0, r3
 2346 01c6 FFF7FEFF 		bl	wiz_recv_data
 700:ioLIB/socket.c ****    			setSn_CR(sn,Sn_CR_RECV);
 2347              		.loc 1 700 7
 2348 01ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2349 01cc 9B00     		lsls	r3, r3, #2
 2350 01ce 0133     		adds	r3, r3, #1
 2351 01d0 DB00     		lsls	r3, r3, #3
 2352 01d2 03F58073 		add	r3, r3, #256
 2353 01d6 4021     		movs	r1, #64
 2354 01d8 1846     		mov	r0, r3
 2355 01da FFF7FEFF 		bl	WIZCHIP_WRITE
 701:ioLIB/socket.c ****    			while(getSn_CR(sn));
 2356              		.loc 1 701 12
 2357 01de 00BF     		nop
 2358              	.L153:
 2359              		.loc 1 701 13 discriminator 1
 2360 01e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2361 01e2 9B00     		lsls	r3, r3, #2
 2362 01e4 0133     		adds	r3, r3, #1
 2363 01e6 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 55


 2364 01e8 03F58073 		add	r3, r3, #256
 2365 01ec 1846     		mov	r0, r3
 2366 01ee FFF7FEFF 		bl	WIZCHIP_READ
 2367 01f2 0346     		mov	r3, r0
 2368              		.loc 1 701 12 discriminator 1
 2369 01f4 002B     		cmp	r3, #0
 2370 01f6 F3D1     		bne	.L153
 702:ioLIB/socket.c ****    			// read peer's IP address, port number & packet length
 703:ioLIB/socket.c ****     			sock_remained_size[sn] = head[0];
 2371              		.loc 1 703 37
 2372 01f8 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 2373              		.loc 1 703 26
 2374 01fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2375              		.loc 1 703 37
 2376 01fc 91B2     		uxth	r1, r2
 2377              		.loc 1 703 31
 2378 01fe 1E4A     		ldr	r2, .L168
 2379 0200 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 704:ioLIB/socket.c ****    			sock_remained_size[sn] = (sock_remained_size[sn] <<8) + head[1] -2;
 2380              		.loc 1 704 51
 2381 0204 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2382 0206 1C4A     		ldr	r2, .L168
 2383 0208 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2384              		.loc 1 704 56
 2385 020c 1B02     		lsls	r3, r3, #8
 2386 020e 9AB2     		uxth	r2, r3
 2387              		.loc 1 704 67
 2388 0210 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 2389 0212 9BB2     		uxth	r3, r3
 2390              		.loc 1 704 61
 2391 0214 1344     		add	r3, r3, r2
 2392 0216 9AB2     		uxth	r2, r3
 2393              		.loc 1 704 25
 2394 0218 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2395              		.loc 1 704 71
 2396 021a 023A     		subs	r2, r2, #2
 2397 021c 91B2     		uxth	r1, r2
 2398              		.loc 1 704 30
 2399 021e 164A     		ldr	r2, .L168
 2400 0220 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 705:ioLIB/socket.c ****    			#if _WIZCHIP_ == W5300
 706:ioLIB/socket.c ****    			if(sock_remained_size[sn] & 0x01)
 707:ioLIB/socket.c ****    				sock_remained_size[sn] = sock_remained_size[sn] + 1 - 4;
 708:ioLIB/socket.c ****    			else
 709:ioLIB/socket.c ****    				sock_remained_size[sn] -= 4;
 710:ioLIB/socket.c **** 			#endif
 711:ioLIB/socket.c ****    			if(sock_remained_size[sn] > 1514) 
 2401              		.loc 1 711 28
 2402 0224 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2403 0226 144A     		ldr	r2, .L168
 2404 0228 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2405              		.loc 1 711 9
 2406 022c 40F2EA52 		movw	r2, #1514
 2407 0230 9342     		cmp	r3, r2
 2408 0232 06D9     		bls	.L154
 712:ioLIB/socket.c ****    			{
 713:ioLIB/socket.c ****    			   close(sn);
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 56


 2409              		.loc 1 713 10
 2410 0234 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2411 0236 1846     		mov	r0, r3
 2412 0238 FFF7FEFF 		bl	close
 714:ioLIB/socket.c ****    			   return SOCKFATAL_PACKLEN;
 2413              		.loc 1 714 17
 2414 023c 6FF47A73 		mvn	r3, #1000
 2415 0240 C4E0     		b	.L164
 2416              	.L154:
 715:ioLIB/socket.c ****    			}
 716:ioLIB/socket.c ****    			sock_pack_info[sn] = PACK_FIRST;
 2417              		.loc 1 716 21
 2418 0242 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2419              		.loc 1 716 26
 2420 0244 0E4A     		ldr	r2, .L168+8
 2421 0246 8021     		movs	r1, #128
 2422 0248 D154     		strb	r1, [r2, r3]
 2423              	.L152:
 717:ioLIB/socket.c ****    	   }
 718:ioLIB/socket.c **** 			if(len < sock_remained_size[sn]) pack_len = len;
 2424              		.loc 1 718 31
 2425 024a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2426 024c 0A4A     		ldr	r2, .L168
 2427 024e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2428              		.loc 1 718 6
 2429 0252 BA89     		ldrh	r2, [r7, #12]
 2430 0254 9A42     		cmp	r2, r3
 2431 0256 02D2     		bcs	.L155
 2432              		.loc 1 718 46 discriminator 1
 2433 0258 BB89     		ldrh	r3, [r7, #12]	@ movhi
 2434 025a FB83     		strh	r3, [r7, #30]	@ movhi
 2435 025c 04E0     		b	.L156
 2436              	.L155:
 719:ioLIB/socket.c **** 			else pack_len = sock_remained_size[sn];
 2437              		.loc 1 719 38
 2438 025e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2439              		.loc 1 719 18
 2440 0260 054A     		ldr	r2, .L168
 2441 0262 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2442 0266 FB83     		strh	r3, [r7, #30]	@ movhi
 2443              	.L156:
 720:ioLIB/socket.c **** 			wiz_recv_data(sn,buf,pack_len);
 2444              		.loc 1 720 4
 2445 0268 FA8B     		ldrh	r2, [r7, #30]
 2446 026a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2447 026c B968     		ldr	r1, [r7, #8]
 2448 026e 1846     		mov	r0, r3
 2449 0270 FFF7FEFF 		bl	wiz_recv_data
 721:ioLIB/socket.c **** 		   break;
 2450              		.loc 1 721 6
 2451 0274 73E0     		b	.L151
 2452              	.L169:
 2453 0276 00BF     		.align	2
 2454              	.L168:
 2455 0278 00000000 		.word	sock_remained_size
 2456 027c 00000000 		.word	sock_io_mode
 2457 0280 00000000 		.word	sock_pack_info
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 57


 2458              	.L146:
 722:ioLIB/socket.c ****    //#if ( _WIZCHIP_ < 5200 )
 723:ioLIB/socket.c **** 		case Sn_MR_IPRAW:
 724:ioLIB/socket.c **** 		   if(sock_remained_size[sn] == 0)
 2459              		.loc 1 724 27
 2460 0284 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2461 0286 534A     		ldr	r2, .L170
 2462 0288 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2463              		.loc 1 724 8
 2464 028c 002B     		cmp	r3, #0
 2465 028e 44D1     		bne	.L157
 725:ioLIB/socket.c **** 		   {
 726:ioLIB/socket.c ****    			wiz_recv_data(sn, head, 6);
 2466              		.loc 1 726 7
 2467 0290 07F11401 		add	r1, r7, #20
 2468 0294 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2469 0296 0622     		movs	r2, #6
 2470 0298 1846     		mov	r0, r3
 2471 029a FFF7FEFF 		bl	wiz_recv_data
 727:ioLIB/socket.c ****    			setSn_CR(sn,Sn_CR_RECV);
 2472              		.loc 1 727 7
 2473 029e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2474 02a0 9B00     		lsls	r3, r3, #2
 2475 02a2 0133     		adds	r3, r3, #1
 2476 02a4 DB00     		lsls	r3, r3, #3
 2477 02a6 03F58073 		add	r3, r3, #256
 2478 02aa 4021     		movs	r1, #64
 2479 02ac 1846     		mov	r0, r3
 2480 02ae FFF7FEFF 		bl	WIZCHIP_WRITE
 728:ioLIB/socket.c ****    			while(getSn_CR(sn));
 2481              		.loc 1 728 12
 2482 02b2 00BF     		nop
 2483              	.L158:
 2484              		.loc 1 728 13 discriminator 1
 2485 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2486 02b6 9B00     		lsls	r3, r3, #2
 2487 02b8 0133     		adds	r3, r3, #1
 2488 02ba DB00     		lsls	r3, r3, #3
 2489 02bc 03F58073 		add	r3, r3, #256
 2490 02c0 1846     		mov	r0, r3
 2491 02c2 FFF7FEFF 		bl	WIZCHIP_READ
 2492 02c6 0346     		mov	r3, r0
 2493              		.loc 1 728 12 discriminator 1
 2494 02c8 002B     		cmp	r3, #0
 2495 02ca F3D1     		bne	.L158
 729:ioLIB/socket.c ****    			addr[0] = head[0];
 2496              		.loc 1 729 21
 2497 02cc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 2498              		.loc 1 729 15
 2499 02ce 7B68     		ldr	r3, [r7, #4]
 2500 02d0 1A70     		strb	r2, [r3]
 730:ioLIB/socket.c ****    			addr[1] = head[1];
 2501              		.loc 1 730 11
 2502 02d2 7B68     		ldr	r3, [r7, #4]
 2503 02d4 0133     		adds	r3, r3, #1
 2504              		.loc 1 730 21
 2505 02d6 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 58


 2506              		.loc 1 730 15
 2507 02d8 1A70     		strb	r2, [r3]
 731:ioLIB/socket.c ****    			addr[2] = head[2];
 2508              		.loc 1 731 11
 2509 02da 7B68     		ldr	r3, [r7, #4]
 2510 02dc 0233     		adds	r3, r3, #2
 2511              		.loc 1 731 21
 2512 02de BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2513              		.loc 1 731 15
 2514 02e0 1A70     		strb	r2, [r3]
 732:ioLIB/socket.c ****    			addr[3] = head[3];
 2515              		.loc 1 732 11
 2516 02e2 7B68     		ldr	r3, [r7, #4]
 2517 02e4 0333     		adds	r3, r3, #3
 2518              		.loc 1 732 21
 2519 02e6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2520              		.loc 1 732 15
 2521 02e8 1A70     		strb	r2, [r3]
 733:ioLIB/socket.c ****    			sock_remained_size[sn] = head[4];
 2522              		.loc 1 733 36
 2523 02ea 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2524              		.loc 1 733 25
 2525 02ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2526              		.loc 1 733 36
 2527 02ee 91B2     		uxth	r1, r2
 2528              		.loc 1 733 30
 2529 02f0 384A     		ldr	r2, .L170
 2530 02f2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 734:ioLIB/socket.c ****    			//M20150401 : For Typing Error
 735:ioLIB/socket.c ****    			//sock_remaiend_size[sn] = (sock_remained_size[sn] << 8) + head[5];
 736:ioLIB/socket.c ****    			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[5];
 2531              		.loc 1 736 51
 2532 02f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2533 02f8 364A     		ldr	r2, .L170
 2534 02fa 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2535              		.loc 1 736 56
 2536 02fe 1B02     		lsls	r3, r3, #8
 2537 0300 99B2     		uxth	r1, r3
 2538              		.loc 1 736 68
 2539 0302 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2540 0304 9AB2     		uxth	r2, r3
 2541              		.loc 1 736 25
 2542 0306 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2543              		.loc 1 736 62
 2544 0308 0A44     		add	r2, r2, r1
 2545 030a 91B2     		uxth	r1, r2
 2546              		.loc 1 736 30
 2547 030c 314A     		ldr	r2, .L170
 2548 030e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 737:ioLIB/socket.c ****    			sock_pack_info[sn] = PACK_FIRST;
 2549              		.loc 1 737 21
 2550 0312 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2551              		.loc 1 737 26
 2552 0314 304A     		ldr	r2, .L170+4
 2553 0316 8021     		movs	r1, #128
 2554 0318 D154     		strb	r1, [r2, r3]
 2555              	.L157:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 59


 738:ioLIB/socket.c ****          }
 739:ioLIB/socket.c **** 			//
 740:ioLIB/socket.c **** 			// Need to packet length check
 741:ioLIB/socket.c **** 			//
 742:ioLIB/socket.c **** 			if(len < sock_remained_size[sn]) pack_len = len;
 2556              		.loc 1 742 31
 2557 031a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2558 031c 2D4A     		ldr	r2, .L170
 2559 031e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2560              		.loc 1 742 6
 2561 0322 BA89     		ldrh	r2, [r7, #12]
 2562 0324 9A42     		cmp	r2, r3
 2563 0326 02D2     		bcs	.L159
 2564              		.loc 1 742 46 discriminator 1
 2565 0328 BB89     		ldrh	r3, [r7, #12]	@ movhi
 2566 032a FB83     		strh	r3, [r7, #30]	@ movhi
 2567 032c 04E0     		b	.L160
 2568              	.L159:
 743:ioLIB/socket.c **** 			else pack_len = sock_remained_size[sn];
 2569              		.loc 1 743 38
 2570 032e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2571              		.loc 1 743 18
 2572 0330 284A     		ldr	r2, .L170
 2573 0332 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2574 0336 FB83     		strh	r3, [r7, #30]	@ movhi
 2575              	.L160:
 744:ioLIB/socket.c ****    		wiz_recv_data(sn, buf, pack_len); // data copy.
 2576              		.loc 1 744 6
 2577 0338 FA8B     		ldrh	r2, [r7, #30]
 2578 033a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2579 033c B968     		ldr	r1, [r7, #8]
 2580 033e 1846     		mov	r0, r3
 2581 0340 FFF7FEFF 		bl	wiz_recv_data
 745:ioLIB/socket.c **** 			break;
 2582              		.loc 1 745 4
 2583 0344 0BE0     		b	.L151
 2584              	.L144:
 746:ioLIB/socket.c ****    //#endif
 747:ioLIB/socket.c ****       default:
 748:ioLIB/socket.c ****          wiz_recv_ignore(sn, pack_len); // data copy.
 2585              		.loc 1 748 10
 2586 0346 FA8B     		ldrh	r2, [r7, #30]
 2587 0348 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2588 034a 1146     		mov	r1, r2
 2589 034c 1846     		mov	r0, r3
 2590 034e FFF7FEFF 		bl	wiz_recv_ignore
 749:ioLIB/socket.c ****          sock_remained_size[sn] = pack_len;
 2591              		.loc 1 749 28
 2592 0352 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2593              		.loc 1 749 33
 2594 0354 1F49     		ldr	r1, .L170
 2595 0356 FA8B     		ldrh	r2, [r7, #30]	@ movhi
 2596 0358 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 750:ioLIB/socket.c ****          break;
 2597              		.loc 1 750 10
 2598 035c 00BF     		nop
 2599              	.L151:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 60


 751:ioLIB/socket.c ****    }
 752:ioLIB/socket.c **** 	setSn_CR(sn,Sn_CR_RECV);
 2600              		.loc 1 752 2
 2601 035e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2602 0360 9B00     		lsls	r3, r3, #2
 2603 0362 0133     		adds	r3, r3, #1
 2604 0364 DB00     		lsls	r3, r3, #3
 2605 0366 03F58073 		add	r3, r3, #256
 2606 036a 4021     		movs	r1, #64
 2607 036c 1846     		mov	r0, r3
 2608 036e FFF7FEFF 		bl	WIZCHIP_WRITE
 753:ioLIB/socket.c **** 	/* wait to process the command... */
 754:ioLIB/socket.c **** 	while(getSn_CR(sn)) ;
 2609              		.loc 1 754 7
 2610 0372 00BF     		nop
 2611              	.L161:
 2612              		.loc 1 754 8 discriminator 1
 2613 0374 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2614 0376 9B00     		lsls	r3, r3, #2
 2615 0378 0133     		adds	r3, r3, #1
 2616 037a DB00     		lsls	r3, r3, #3
 2617 037c 03F58073 		add	r3, r3, #256
 2618 0380 1846     		mov	r0, r3
 2619 0382 FFF7FEFF 		bl	WIZCHIP_READ
 2620 0386 0346     		mov	r3, r0
 2621              		.loc 1 754 7 discriminator 1
 2622 0388 002B     		cmp	r3, #0
 2623 038a F3D1     		bne	.L161
 755:ioLIB/socket.c **** 	sock_remained_size[sn] -= pack_len;
 2624              		.loc 1 755 25
 2625 038c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2626 038e 114A     		ldr	r2, .L170
 2627 0390 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 2628 0394 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2629 0396 FA8B     		ldrh	r2, [r7, #30]	@ movhi
 2630 0398 8A1A     		subs	r2, r1, r2
 2631 039a 91B2     		uxth	r1, r2
 2632 039c 0D4A     		ldr	r2, .L170
 2633 039e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 756:ioLIB/socket.c **** 	//M20150601 : 
 757:ioLIB/socket.c **** 	//if(sock_remained_size[sn] != 0) sock_pack_info[sn] |= 0x01;
 758:ioLIB/socket.c **** 	if(sock_remained_size[sn] != 0)
 2634              		.loc 1 758 23
 2635 03a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2636 03a4 0B4A     		ldr	r2, .L170
 2637 03a6 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 2638              		.loc 1 758 4
 2639 03aa 002B     		cmp	r3, #0
 2640 03ac 09D0     		beq	.L162
 759:ioLIB/socket.c **** 	{
 760:ioLIB/socket.c **** 	   sock_pack_info[sn] |= PACK_REMAINED;
 2641              		.loc 1 760 24
 2642 03ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2643 03b0 094A     		ldr	r2, .L170+4
 2644 03b2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2645 03b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2646 03b6 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 61


 2647 03ba D1B2     		uxtb	r1, r2
 2648 03bc 064A     		ldr	r2, .L170+4
 2649 03be D154     		strb	r1, [r2, r3]
 2650 03c0 03E0     		b	.L163
 2651              	.L162:
 761:ioLIB/socket.c ****    #if _WIZCHIP_ == 5300	   
 762:ioLIB/socket.c **** 	   if(pack_len & 0x01) sock_pack_info[sn] |= PACK_FIFOBYTE;
 763:ioLIB/socket.c ****    #endif	      
 764:ioLIB/socket.c **** 	}
 765:ioLIB/socket.c **** 	else sock_pack_info[sn] = PACK_COMPLETED;
 2652              		.loc 1 765 21
 2653 03c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2654              		.loc 1 765 26
 2655 03c4 044A     		ldr	r2, .L170+4
 2656 03c6 0021     		movs	r1, #0
 2657 03c8 D154     		strb	r1, [r2, r3]
 2658              	.L163:
 766:ioLIB/socket.c **** #if _WIZCHIP_ == 5300	   
 767:ioLIB/socket.c ****    pack_len = len;
 768:ioLIB/socket.c **** #endif
 769:ioLIB/socket.c ****    //
 770:ioLIB/socket.c ****    //M20150409 : Explicit Type Casting
 771:ioLIB/socket.c ****    //return pack_len;
 772:ioLIB/socket.c ****    return (int32_t)pack_len;
 2659              		.loc 1 772 11
 2660 03ca FB8B     		ldrh	r3, [r7, #30]
 2661              	.L164:
 773:ioLIB/socket.c **** }
 2662              		.loc 1 773 1 discriminator 1
 2663 03cc 1846     		mov	r0, r3
 2664 03ce 2037     		adds	r7, r7, #32
 2665              	.LCFI43:
 2666              		.cfi_def_cfa_offset 8
 2667 03d0 BD46     		mov	sp, r7
 2668              	.LCFI44:
 2669              		.cfi_def_cfa_register 13
 2670              		@ sp needed
 2671 03d2 80BD     		pop	{r7, pc}
 2672              	.L171:
 2673              		.align	2
 2674              	.L170:
 2675 03d4 00000000 		.word	sock_remained_size
 2676 03d8 00000000 		.word	sock_pack_info
 2677              		.cfi_endproc
 2678              	.LFE8:
 2680              		.section	.text.ctlsocket,"ax",%progbits
 2681              		.align	1
 2682              		.global	ctlsocket
 2683              		.syntax unified
 2684              		.thumb
 2685              		.thumb_func
 2687              	ctlsocket:
 2688              	.LFB9:
 774:ioLIB/socket.c **** 
 775:ioLIB/socket.c **** 
 776:ioLIB/socket.c **** int8_t  ctlsocket(uint8_t sn, ctlsock_type cstype, void* arg)
 777:ioLIB/socket.c **** {
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 62


 2689              		.loc 1 777 1
 2690              		.cfi_startproc
 2691              		@ args = 0, pretend = 0, frame = 16
 2692              		@ frame_needed = 1, uses_anonymous_args = 0
 2693 0000 80B5     		push	{r7, lr}
 2694              	.LCFI45:
 2695              		.cfi_def_cfa_offset 8
 2696              		.cfi_offset 7, -8
 2697              		.cfi_offset 14, -4
 2698 0002 84B0     		sub	sp, sp, #16
 2699              	.LCFI46:
 2700              		.cfi_def_cfa_offset 24
 2701 0004 00AF     		add	r7, sp, #0
 2702              	.LCFI47:
 2703              		.cfi_def_cfa_register 7
 2704 0006 0346     		mov	r3, r0
 2705 0008 3A60     		str	r2, [r7]
 2706 000a FB71     		strb	r3, [r7, #7]
 2707 000c 0B46     		mov	r3, r1
 2708 000e BB71     		strb	r3, [r7, #6]
 778:ioLIB/socket.c ****    uint8_t tmp = 0;
 2709              		.loc 1 778 12
 2710 0010 0023     		movs	r3, #0
 2711 0012 FB73     		strb	r3, [r7, #15]
 779:ioLIB/socket.c ****    CHECK_SOCKNUM();
 2712              		.loc 1 779 4
 2713 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2714 0016 082B     		cmp	r3, #8
 2715 0018 02D9     		bls	.L173
 2716              		.loc 1 779 4 is_stmt 0 discriminator 1
 2717 001a 4FF0FF33 		mov	r3, #-1
 2718 001e C2E0     		b	.L174
 2719              	.L173:
 780:ioLIB/socket.c ****    switch(cstype)
 2720              		.loc 1 780 4 is_stmt 1
 2721 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2722 0022 072B     		cmp	r3, #7
 2723 0024 00F2BB80 		bhi	.L175
 2724 0028 01A2     		adr	r2, .L177
 2725 002a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2726 002e 00BF     		.p2align 2
 2727              	.L177:
 2728 0030 51000000 		.word	.L184+1
 2729 0034 A5000000 		.word	.L183+1
 2730 0038 BF000000 		.word	.L182+1
 2731 003c DF000000 		.word	.L181+1
 2732 0040 FF000000 		.word	.L180+1
 2733 0044 2F010000 		.word	.L179+1
 2734 0048 4F010000 		.word	.L178+1
 2735 004c 7F010000 		.word	.L176+1
 2736              		.p2align 1
 2737              	.L184:
 781:ioLIB/socket.c ****    {
 782:ioLIB/socket.c ****       case CS_SET_IOMODE:
 783:ioLIB/socket.c ****          tmp = *((uint8_t*)arg);
 2738              		.loc 1 783 14
 2739 0050 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 63


 2740 0052 1B78     		ldrb	r3, [r3]
 2741 0054 FB73     		strb	r3, [r7, #15]
 784:ioLIB/socket.c ****          if(tmp == SOCK_IO_NONBLOCK)  sock_io_mode |= (1<<sn);
 2742              		.loc 1 784 12
 2743 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2744 0058 012B     		cmp	r3, #1
 2745 005a 0DD1     		bne	.L185
 2746              		.loc 1 784 57 discriminator 1
 2747 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2748 005e 0122     		movs	r2, #1
 2749 0060 02FA03F3 		lsl	r3, r2, r3
 2750              		.loc 1 784 52 discriminator 1
 2751 0064 1AB2     		sxth	r2, r3
 2752 0066 524B     		ldr	r3, .L191
 2753 0068 1B88     		ldrh	r3, [r3]
 2754 006a 1BB2     		sxth	r3, r3
 2755 006c 1343     		orrs	r3, r3, r2
 2756 006e 1BB2     		sxth	r3, r3
 2757 0070 9AB2     		uxth	r2, r3
 2758 0072 4F4B     		ldr	r3, .L191
 2759 0074 1A80     		strh	r2, [r3]	@ movhi
 785:ioLIB/socket.c ****          else if(tmp == SOCK_IO_BLOCK) sock_io_mode &= ~(1<<sn);
 786:ioLIB/socket.c ****          else return SOCKERR_ARG;
 787:ioLIB/socket.c ****          break;
 2760              		.loc 1 787 10 discriminator 1
 2761 0076 95E0     		b	.L188
 2762              	.L185:
 785:ioLIB/socket.c ****          else if(tmp == SOCK_IO_BLOCK) sock_io_mode &= ~(1<<sn);
 2763              		.loc 1 785 17
 2764 0078 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2765 007a 002B     		cmp	r3, #0
 2766 007c 0FD1     		bne	.L187
 785:ioLIB/socket.c ****          else if(tmp == SOCK_IO_BLOCK) sock_io_mode &= ~(1<<sn);
 2767              		.loc 1 785 59 discriminator 1
 2768 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2769 0080 0122     		movs	r2, #1
 2770 0082 02FA03F3 		lsl	r3, r2, r3
 785:ioLIB/socket.c ****          else if(tmp == SOCK_IO_BLOCK) sock_io_mode &= ~(1<<sn);
 2771              		.loc 1 785 53 discriminator 1
 2772 0086 1BB2     		sxth	r3, r3
 2773 0088 DB43     		mvns	r3, r3
 2774 008a 1AB2     		sxth	r2, r3
 2775 008c 484B     		ldr	r3, .L191
 2776 008e 1B88     		ldrh	r3, [r3]
 2777 0090 1BB2     		sxth	r3, r3
 2778 0092 1340     		ands	r3, r3, r2
 2779 0094 1BB2     		sxth	r3, r3
 2780 0096 9AB2     		uxth	r2, r3
 2781 0098 454B     		ldr	r3, .L191
 2782 009a 1A80     		strh	r2, [r3]	@ movhi
 2783              		.loc 1 787 10 discriminator 1
 2784 009c 82E0     		b	.L188
 2785              	.L187:
 786:ioLIB/socket.c ****          break;
 2786              		.loc 1 786 22
 2787 009e 6FF00903 		mvn	r3, #9
 2788 00a2 80E0     		b	.L174
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 64


 2789              	.L183:
 788:ioLIB/socket.c ****       case CS_GET_IOMODE:   
 789:ioLIB/socket.c ****          //M20140501 : implict type casting -> explict type casting
 790:ioLIB/socket.c ****          //*((uint8_t*)arg) = (sock_io_mode >> sn) & 0x0001;
 791:ioLIB/socket.c ****          *((uint8_t*)arg) = (uint8_t)((sock_io_mode >> sn) & 0x0001);
 2790              		.loc 1 791 53
 2791 00a4 424B     		ldr	r3, .L191
 2792 00a6 1B88     		ldrh	r3, [r3]
 2793 00a8 1A46     		mov	r2, r3
 2794 00aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2795 00ac 42FA03F3 		asr	r3, r2, r3
 2796              		.loc 1 791 60
 2797 00b0 DBB2     		uxtb	r3, r3
 2798              		.loc 1 791 29
 2799 00b2 03F00103 		and	r3, r3, #1
 2800 00b6 DAB2     		uxtb	r2, r3
 2801              		.loc 1 791 27
 2802 00b8 3B68     		ldr	r3, [r7]
 2803 00ba 1A70     		strb	r2, [r3]
 792:ioLIB/socket.c ****          //
 793:ioLIB/socket.c ****          break;
 2804              		.loc 1 793 10
 2805 00bc 72E0     		b	.L188
 2806              	.L182:
 794:ioLIB/socket.c ****       case CS_GET_MAXTXBUF:
 795:ioLIB/socket.c ****          *((uint16_t*)arg) = getSn_TxMAX(sn);
 2807              		.loc 1 795 30
 2808 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2809 00c0 9B00     		lsls	r3, r3, #2
 2810 00c2 0133     		adds	r3, r3, #1
 2811 00c4 DB00     		lsls	r3, r3, #3
 2812 00c6 03F5F853 		add	r3, r3, #7936
 2813 00ca 1846     		mov	r0, r3
 2814 00cc FFF7FEFF 		bl	WIZCHIP_READ
 2815 00d0 0346     		mov	r3, r0
 2816 00d2 9BB2     		uxth	r3, r3
 2817 00d4 9B02     		lsls	r3, r3, #10
 2818 00d6 9AB2     		uxth	r2, r3
 2819              		.loc 1 795 28
 2820 00d8 3B68     		ldr	r3, [r7]
 2821 00da 1A80     		strh	r2, [r3]	@ movhi
 796:ioLIB/socket.c ****          break;
 2822              		.loc 1 796 10
 2823 00dc 62E0     		b	.L188
 2824              	.L181:
 797:ioLIB/socket.c ****       case CS_GET_MAXRXBUF:    
 798:ioLIB/socket.c ****          *((uint16_t*)arg) = getSn_RxMAX(sn);
 2825              		.loc 1 798 30
 2826 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2827 00e0 9B00     		lsls	r3, r3, #2
 2828 00e2 0133     		adds	r3, r3, #1
 2829 00e4 DB00     		lsls	r3, r3, #3
 2830 00e6 03F5F053 		add	r3, r3, #7680
 2831 00ea 1846     		mov	r0, r3
 2832 00ec FFF7FEFF 		bl	WIZCHIP_READ
 2833 00f0 0346     		mov	r3, r0
 2834 00f2 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 65


 2835 00f4 9B02     		lsls	r3, r3, #10
 2836 00f6 9AB2     		uxth	r2, r3
 2837              		.loc 1 798 28
 2838 00f8 3B68     		ldr	r3, [r7]
 2839 00fa 1A80     		strh	r2, [r3]	@ movhi
 799:ioLIB/socket.c ****          break;
 2840              		.loc 1 799 10
 2841 00fc 52E0     		b	.L188
 2842              	.L180:
 800:ioLIB/socket.c ****       case CS_CLR_INTERRUPT:
 801:ioLIB/socket.c ****          if( (*(uint8_t*)arg) > SIK_ALL) return SOCKERR_ARG;
 2843              		.loc 1 801 15
 2844 00fe 3B68     		ldr	r3, [r7]
 2845 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2846              		.loc 1 801 12
 2847 0102 1F2B     		cmp	r3, #31
 2848 0104 02D9     		bls	.L189
 2849              		.loc 1 801 49 discriminator 1
 2850 0106 6FF00903 		mvn	r3, #9
 2851 010a 4CE0     		b	.L174
 2852              	.L189:
 802:ioLIB/socket.c ****          setSn_IR(sn,*(uint8_t*)arg);
 2853              		.loc 1 802 10
 2854 010c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2855 010e 9B00     		lsls	r3, r3, #2
 2856 0110 0133     		adds	r3, r3, #1
 2857 0112 DB00     		lsls	r3, r3, #3
 2858 0114 03F50073 		add	r3, r3, #512
 2859 0118 1A46     		mov	r2, r3
 2860 011a 3B68     		ldr	r3, [r7]
 2861 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2862 011e 03F01F03 		and	r3, r3, #31
 2863 0122 DBB2     		uxtb	r3, r3
 2864 0124 1946     		mov	r1, r3
 2865 0126 1046     		mov	r0, r2
 2866 0128 FFF7FEFF 		bl	WIZCHIP_WRITE
 803:ioLIB/socket.c ****          break;
 2867              		.loc 1 803 10
 2868 012c 3AE0     		b	.L188
 2869              	.L179:
 804:ioLIB/socket.c ****       case CS_GET_INTERRUPT:
 805:ioLIB/socket.c ****          *((uint8_t*)arg) = getSn_IR(sn);
 2870              		.loc 1 805 29
 2871 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2872 0130 9B00     		lsls	r3, r3, #2
 2873 0132 0133     		adds	r3, r3, #1
 2874 0134 DB00     		lsls	r3, r3, #3
 2875 0136 03F50073 		add	r3, r3, #512
 2876 013a 1846     		mov	r0, r3
 2877 013c FFF7FEFF 		bl	WIZCHIP_READ
 2878 0140 0346     		mov	r3, r0
 2879 0142 03F01F03 		and	r3, r3, #31
 2880 0146 DAB2     		uxtb	r2, r3
 2881              		.loc 1 805 27
 2882 0148 3B68     		ldr	r3, [r7]
 2883 014a 1A70     		strb	r2, [r3]
 806:ioLIB/socket.c ****          break;
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 66


 2884              		.loc 1 806 10
 2885 014c 2AE0     		b	.L188
 2886              	.L178:
 807:ioLIB/socket.c ****    #if _WIZCHIP_ != 5100
 808:ioLIB/socket.c ****       case CS_SET_INTMASK:  
 809:ioLIB/socket.c ****          if( (*(uint8_t*)arg) > SIK_ALL) return SOCKERR_ARG;
 2887              		.loc 1 809 15
 2888 014e 3B68     		ldr	r3, [r7]
 2889 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2890              		.loc 1 809 12
 2891 0152 1F2B     		cmp	r3, #31
 2892 0154 02D9     		bls	.L190
 2893              		.loc 1 809 49 discriminator 1
 2894 0156 6FF00903 		mvn	r3, #9
 2895 015a 24E0     		b	.L174
 2896              	.L190:
 810:ioLIB/socket.c ****          setSn_IMR(sn,*(uint8_t*)arg);
 2897              		.loc 1 810 10
 2898 015c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2899 015e 9B00     		lsls	r3, r3, #2
 2900 0160 0133     		adds	r3, r3, #1
 2901 0162 DB00     		lsls	r3, r3, #3
 2902 0164 03F53053 		add	r3, r3, #11264
 2903 0168 1A46     		mov	r2, r3
 2904 016a 3B68     		ldr	r3, [r7]
 2905 016c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2906 016e 03F01F03 		and	r3, r3, #31
 2907 0172 DBB2     		uxtb	r3, r3
 2908 0174 1946     		mov	r1, r3
 2909 0176 1046     		mov	r0, r2
 2910 0178 FFF7FEFF 		bl	WIZCHIP_WRITE
 811:ioLIB/socket.c ****          break;
 2911              		.loc 1 811 10
 2912 017c 12E0     		b	.L188
 2913              	.L176:
 812:ioLIB/socket.c ****       case CS_GET_INTMASK:   
 813:ioLIB/socket.c ****          *((uint8_t*)arg) = getSn_IMR(sn);
 2914              		.loc 1 813 29
 2915 017e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2916 0180 9B00     		lsls	r3, r3, #2
 2917 0182 0133     		adds	r3, r3, #1
 2918 0184 DB00     		lsls	r3, r3, #3
 2919 0186 03F53053 		add	r3, r3, #11264
 2920 018a 1846     		mov	r0, r3
 2921 018c FFF7FEFF 		bl	WIZCHIP_READ
 2922 0190 0346     		mov	r3, r0
 2923 0192 03F01F03 		and	r3, r3, #31
 2924 0196 DAB2     		uxtb	r2, r3
 2925              		.loc 1 813 27
 2926 0198 3B68     		ldr	r3, [r7]
 2927 019a 1A70     		strb	r2, [r3]
 814:ioLIB/socket.c ****          break;
 2928              		.loc 1 814 10
 2929 019c 02E0     		b	.L188
 2930              	.L175:
 815:ioLIB/socket.c ****    #endif
 816:ioLIB/socket.c ****       default:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 67


 817:ioLIB/socket.c ****          return SOCKERR_ARG;
 2931              		.loc 1 817 17
 2932 019e 6FF00903 		mvn	r3, #9
 2933 01a2 00E0     		b	.L174
 2934              	.L188:
 818:ioLIB/socket.c ****    }
 819:ioLIB/socket.c ****    return SOCK_OK;
 2935              		.loc 1 819 11
 2936 01a4 0123     		movs	r3, #1
 2937              	.L174:
 820:ioLIB/socket.c **** }
 2938              		.loc 1 820 1
 2939 01a6 1846     		mov	r0, r3
 2940 01a8 1037     		adds	r7, r7, #16
 2941              	.LCFI48:
 2942              		.cfi_def_cfa_offset 8
 2943 01aa BD46     		mov	sp, r7
 2944              	.LCFI49:
 2945              		.cfi_def_cfa_register 13
 2946              		@ sp needed
 2947 01ac 80BD     		pop	{r7, pc}
 2948              	.L192:
 2949 01ae 00BF     		.align	2
 2950              	.L191:
 2951 01b0 00000000 		.word	sock_io_mode
 2952              		.cfi_endproc
 2953              	.LFE9:
 2955              		.section	.text.setsockopt,"ax",%progbits
 2956              		.align	1
 2957              		.global	setsockopt
 2958              		.syntax unified
 2959              		.thumb
 2960              		.thumb_func
 2962              	setsockopt:
 2963              	.LFB10:
 821:ioLIB/socket.c **** 
 822:ioLIB/socket.c **** int8_t  setsockopt(uint8_t sn, sockopt_type sotype, void* arg)
 823:ioLIB/socket.c **** {
 2964              		.loc 1 823 1
 2965              		.cfi_startproc
 2966              		@ args = 0, pretend = 0, frame = 8
 2967              		@ frame_needed = 1, uses_anonymous_args = 0
 2968 0000 80B5     		push	{r7, lr}
 2969              	.LCFI50:
 2970              		.cfi_def_cfa_offset 8
 2971              		.cfi_offset 7, -8
 2972              		.cfi_offset 14, -4
 2973 0002 82B0     		sub	sp, sp, #8
 2974              	.LCFI51:
 2975              		.cfi_def_cfa_offset 16
 2976 0004 00AF     		add	r7, sp, #0
 2977              	.LCFI52:
 2978              		.cfi_def_cfa_register 7
 2979 0006 0346     		mov	r3, r0
 2980 0008 3A60     		str	r2, [r7]
 2981 000a FB71     		strb	r3, [r7, #7]
 2982 000c 0B46     		mov	r3, r1
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 68


 2983 000e BB71     		strb	r3, [r7, #6]
 824:ioLIB/socket.c ****  // M20131220 : Remove warning
 825:ioLIB/socket.c ****  //uint8_t tmp;
 826:ioLIB/socket.c ****    CHECK_SOCKNUM();
 2984              		.loc 1 826 4
 2985 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2986 0012 082B     		cmp	r3, #8
 2987 0014 02D9     		bls	.L194
 2988              		.loc 1 826 4 is_stmt 0 discriminator 1
 2989 0016 4FF0FF33 		mov	r3, #-1
 2990 001a EDE0     		b	.L195
 2991              	.L194:
 827:ioLIB/socket.c ****    switch(sotype)
 2992              		.loc 1 827 4 is_stmt 1
 2993 001c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2994 001e 013B     		subs	r3, r3, #1
 2995 0020 062B     		cmp	r3, #6
 2996 0022 00F2E580 		bhi	.L196
 2997 0026 01A2     		adr	r2, .L198
 2998 0028 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2999              		.p2align 2
 3000              	.L198:
 3001 002c 49000000 		.word	.L204+1
 3002 0030 65000000 		.word	.L203+1
 3003 0034 81000000 		.word	.L202+1
 3004 0038 BF000000 		.word	.L201+1
 3005 003c D7000000 		.word	.L200+1
 3006 0040 15010000 		.word	.L199+1
 3007 0044 B7010000 		.word	.L197+1
 3008              		.p2align 1
 3009              	.L204:
 828:ioLIB/socket.c ****    {
 829:ioLIB/socket.c ****       case SO_TTL:
 830:ioLIB/socket.c ****          setSn_TTL(sn,*(uint8_t*)arg);
 3010              		.loc 1 830 10
 3011 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3012 004a 9B00     		lsls	r3, r3, #2
 3013 004c 0133     		adds	r3, r3, #1
 3014 004e DB00     		lsls	r3, r3, #3
 3015 0050 03F5B053 		add	r3, r3, #5632
 3016 0054 1A46     		mov	r2, r3
 3017 0056 3B68     		ldr	r3, [r7]
 3018 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3019 005a 1946     		mov	r1, r3
 3020 005c 1046     		mov	r0, r2
 3021 005e FFF7FEFF 		bl	WIZCHIP_WRITE
 831:ioLIB/socket.c ****          break;
 3022              		.loc 1 831 10
 3023 0062 C8E0     		b	.L205
 3024              	.L203:
 832:ioLIB/socket.c ****       case SO_TOS:
 833:ioLIB/socket.c ****          setSn_TOS(sn,*(uint8_t*)arg);
 3025              		.loc 1 833 10
 3026 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3027 0066 9B00     		lsls	r3, r3, #2
 3028 0068 0133     		adds	r3, r3, #1
 3029 006a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 69


 3030 006c 03F5A853 		add	r3, r3, #5376
 3031 0070 1A46     		mov	r2, r3
 3032 0072 3B68     		ldr	r3, [r7]
 3033 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3034 0076 1946     		mov	r1, r3
 3035 0078 1046     		mov	r0, r2
 3036 007a FFF7FEFF 		bl	WIZCHIP_WRITE
 834:ioLIB/socket.c ****          break;
 3037              		.loc 1 834 10
 3038 007e BAE0     		b	.L205
 3039              	.L202:
 835:ioLIB/socket.c ****       case SO_MSS:
 836:ioLIB/socket.c ****          setSn_MSSR(sn,*(uint16_t*)arg);
 3040              		.loc 1 836 10
 3041 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3042 0082 9B00     		lsls	r3, r3, #2
 3043 0084 0133     		adds	r3, r3, #1
 3044 0086 DB00     		lsls	r3, r3, #3
 3045 0088 03F59053 		add	r3, r3, #4608
 3046 008c 1A46     		mov	r2, r3
 3047 008e 3B68     		ldr	r3, [r7]
 3048 0090 1B88     		ldrh	r3, [r3]
 3049 0092 1B0A     		lsrs	r3, r3, #8
 3050 0094 9BB2     		uxth	r3, r3
 3051 0096 DBB2     		uxtb	r3, r3
 3052 0098 1946     		mov	r1, r3
 3053 009a 1046     		mov	r0, r2
 3054 009c FFF7FEFF 		bl	WIZCHIP_WRITE
 3055 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3056 00a2 9B00     		lsls	r3, r3, #2
 3057 00a4 0133     		adds	r3, r3, #1
 3058 00a6 DB00     		lsls	r3, r3, #3
 3059 00a8 03F59853 		add	r3, r3, #4864
 3060 00ac 1A46     		mov	r2, r3
 3061 00ae 3B68     		ldr	r3, [r7]
 3062 00b0 1B88     		ldrh	r3, [r3]
 3063 00b2 DBB2     		uxtb	r3, r3
 3064 00b4 1946     		mov	r1, r3
 3065 00b6 1046     		mov	r0, r2
 3066 00b8 FFF7FEFF 		bl	WIZCHIP_WRITE
 837:ioLIB/socket.c ****          break;
 3067              		.loc 1 837 10
 3068 00bc 9BE0     		b	.L205
 3069              	.L201:
 838:ioLIB/socket.c ****       case SO_DESTIP:
 839:ioLIB/socket.c ****          setSn_DIPR(sn, (uint8_t*)arg);
 3070              		.loc 1 839 10
 3071 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3072 00c0 9B00     		lsls	r3, r3, #2
 3073 00c2 0133     		adds	r3, r3, #1
 3074 00c4 DB00     		lsls	r3, r3, #3
 3075 00c6 03F54063 		add	r3, r3, #3072
 3076 00ca 0422     		movs	r2, #4
 3077 00cc 3968     		ldr	r1, [r7]
 3078 00ce 1846     		mov	r0, r3
 3079 00d0 FFF7FEFF 		bl	WIZCHIP_WRITE_BUF
 840:ioLIB/socket.c ****          break;
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 70


 3080              		.loc 1 840 10
 3081 00d4 8FE0     		b	.L205
 3082              	.L200:
 841:ioLIB/socket.c ****       case SO_DESTPORT:
 842:ioLIB/socket.c ****          setSn_DPORT(sn, *(uint16_t*)arg);
 3083              		.loc 1 842 10
 3084 00d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3085 00d8 9B00     		lsls	r3, r3, #2
 3086 00da 0133     		adds	r3, r3, #1
 3087 00dc DB00     		lsls	r3, r3, #3
 3088 00de 03F58053 		add	r3, r3, #4096
 3089 00e2 1A46     		mov	r2, r3
 3090 00e4 3B68     		ldr	r3, [r7]
 3091 00e6 1B88     		ldrh	r3, [r3]
 3092 00e8 1B0A     		lsrs	r3, r3, #8
 3093 00ea 9BB2     		uxth	r3, r3
 3094 00ec DBB2     		uxtb	r3, r3
 3095 00ee 1946     		mov	r1, r3
 3096 00f0 1046     		mov	r0, r2
 3097 00f2 FFF7FEFF 		bl	WIZCHIP_WRITE
 3098 00f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3099 00f8 9B00     		lsls	r3, r3, #2
 3100 00fa 0133     		adds	r3, r3, #1
 3101 00fc DB00     		lsls	r3, r3, #3
 3102 00fe 03F58853 		add	r3, r3, #4352
 3103 0102 1A46     		mov	r2, r3
 3104 0104 3B68     		ldr	r3, [r7]
 3105 0106 1B88     		ldrh	r3, [r3]
 3106 0108 DBB2     		uxtb	r3, r3
 3107 010a 1946     		mov	r1, r3
 3108 010c 1046     		mov	r0, r2
 3109 010e FFF7FEFF 		bl	WIZCHIP_WRITE
 843:ioLIB/socket.c ****          break;
 3110              		.loc 1 843 10
 3111 0112 70E0     		b	.L205
 3112              	.L199:
 844:ioLIB/socket.c **** #if _WIZCHIP_ != 5100
 845:ioLIB/socket.c ****       case SO_KEEPALIVESEND:
 846:ioLIB/socket.c ****          CHECK_SOCKMODE(Sn_MR_TCP);
 3113              		.loc 1 846 10
 3114 0114 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3115 0116 9B00     		lsls	r3, r3, #2
 3116 0118 0133     		adds	r3, r3, #1
 3117 011a DB00     		lsls	r3, r3, #3
 3118 011c 1846     		mov	r0, r3
 3119 011e FFF7FEFF 		bl	WIZCHIP_READ
 3120 0122 0346     		mov	r3, r0
 3121 0124 03F00F03 		and	r3, r3, #15
 3122 0128 012B     		cmp	r3, #1
 3123 012a 02D0     		beq	.L206
 3124              		.loc 1 846 10 is_stmt 0 discriminator 1
 3125 012c 6FF00403 		mvn	r3, #4
 3126 0130 62E0     		b	.L195
 3127              	.L206:
 847:ioLIB/socket.c ****          #if _WIZCHIP_ > 5200
 848:ioLIB/socket.c ****             if(getSn_KPALVTR(sn) != 0) return SOCKERR_SOCKOPT;
 3128              		.loc 1 848 16 is_stmt 1
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 71


 3129 0132 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3130 0134 9B00     		lsls	r3, r3, #2
 3131 0136 0133     		adds	r3, r3, #1
 3132 0138 DB00     		lsls	r3, r3, #3
 3133 013a 03F53C53 		add	r3, r3, #12032
 3134 013e 1846     		mov	r0, r3
 3135 0140 FFF7FEFF 		bl	WIZCHIP_READ
 3136 0144 0346     		mov	r3, r0
 3137              		.loc 1 848 15
 3138 0146 002B     		cmp	r3, #0
 3139 0148 02D0     		beq	.L207
 3140              		.loc 1 848 47 discriminator 1
 3141 014a 6FF00103 		mvn	r3, #1
 3142 014e 53E0     		b	.L195
 3143              	.L207:
 849:ioLIB/socket.c ****          #endif
 850:ioLIB/socket.c ****             setSn_CR(sn,Sn_CR_SEND_KEEP);
 3144              		.loc 1 850 13
 3145 0150 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3146 0152 9B00     		lsls	r3, r3, #2
 3147 0154 0133     		adds	r3, r3, #1
 3148 0156 DB00     		lsls	r3, r3, #3
 3149 0158 03F58073 		add	r3, r3, #256
 3150 015c 2221     		movs	r1, #34
 3151 015e 1846     		mov	r0, r3
 3152 0160 FFF7FEFF 		bl	WIZCHIP_WRITE
 851:ioLIB/socket.c ****             while(getSn_CR(sn) != 0)
 3153              		.loc 1 851 18
 3154 0164 1AE0     		b	.L208
 3155              	.L209:
 852:ioLIB/socket.c ****             {
 853:ioLIB/socket.c ****                // M20131220
 854:ioLIB/socket.c ****          		//if ((tmp = getSn_IR(sn)) & Sn_IR_TIMEOUT)
 855:ioLIB/socket.c ****                if (getSn_IR(sn) & Sn_IR_TIMEOUT)
 3156              		.loc 1 855 20
 3157 0166 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3158 0168 9B00     		lsls	r3, r3, #2
 3159 016a 0133     		adds	r3, r3, #1
 3160 016c DB00     		lsls	r3, r3, #3
 3161 016e 03F50073 		add	r3, r3, #512
 3162 0172 1846     		mov	r0, r3
 3163 0174 FFF7FEFF 		bl	WIZCHIP_READ
 3164 0178 0346     		mov	r3, r0
 3165              		.loc 1 855 33
 3166 017a 03F00803 		and	r3, r3, #8
 3167              		.loc 1 855 19
 3168 017e 002B     		cmp	r3, #0
 3169 0180 0CD0     		beq	.L208
 856:ioLIB/socket.c ****          		{
 857:ioLIB/socket.c ****          			setSn_IR(sn, Sn_IR_TIMEOUT);
 3170              		.loc 1 857 13
 3171 0182 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3172 0184 9B00     		lsls	r3, r3, #2
 3173 0186 0133     		adds	r3, r3, #1
 3174 0188 DB00     		lsls	r3, r3, #3
 3175 018a 03F50073 		add	r3, r3, #512
 3176 018e 0821     		movs	r1, #8
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 72


 3177 0190 1846     		mov	r0, r3
 3178 0192 FFF7FEFF 		bl	WIZCHIP_WRITE
 858:ioLIB/socket.c ****                   return SOCKERR_TIMEOUT;
 3179              		.loc 1 858 26
 3180 0196 6FF00C03 		mvn	r3, #12
 3181 019a 2DE0     		b	.L195
 3182              	.L208:
 851:ioLIB/socket.c ****             {
 3183              		.loc 1 851 19
 3184 019c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3185 019e 9B00     		lsls	r3, r3, #2
 3186 01a0 0133     		adds	r3, r3, #1
 3187 01a2 DB00     		lsls	r3, r3, #3
 3188 01a4 03F58073 		add	r3, r3, #256
 3189 01a8 1846     		mov	r0, r3
 3190 01aa FFF7FEFF 		bl	WIZCHIP_READ
 3191 01ae 0346     		mov	r3, r0
 851:ioLIB/socket.c ****             {
 3192              		.loc 1 851 18
 3193 01b0 002B     		cmp	r3, #0
 3194 01b2 D8D1     		bne	.L209
 859:ioLIB/socket.c ****          		}
 860:ioLIB/socket.c ****             }
 861:ioLIB/socket.c ****          break;
 3195              		.loc 1 861 10
 3196 01b4 1FE0     		b	.L205
 3197              	.L197:
 862:ioLIB/socket.c ****    #if !( (_WIZCHIP_ == 5100) || (_WIZCHIP_ == 5200) )
 863:ioLIB/socket.c ****       case SO_KEEPALIVEAUTO:
 864:ioLIB/socket.c ****          CHECK_SOCKMODE(Sn_MR_TCP);
 3198              		.loc 1 864 10
 3199 01b6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3200 01b8 9B00     		lsls	r3, r3, #2
 3201 01ba 0133     		adds	r3, r3, #1
 3202 01bc DB00     		lsls	r3, r3, #3
 3203 01be 1846     		mov	r0, r3
 3204 01c0 FFF7FEFF 		bl	WIZCHIP_READ
 3205 01c4 0346     		mov	r3, r0
 3206 01c6 03F00F03 		and	r3, r3, #15
 3207 01ca 012B     		cmp	r3, #1
 3208 01cc 02D0     		beq	.L210
 3209              		.loc 1 864 10 is_stmt 0 discriminator 1
 3210 01ce 6FF00403 		mvn	r3, #4
 3211 01d2 11E0     		b	.L195
 3212              	.L210:
 865:ioLIB/socket.c ****          setSn_KPALVTR(sn,*(uint8_t*)arg);
 3213              		.loc 1 865 10 is_stmt 1
 3214 01d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3215 01d6 9B00     		lsls	r3, r3, #2
 3216 01d8 0133     		adds	r3, r3, #1
 3217 01da DB00     		lsls	r3, r3, #3
 3218 01dc 03F53C53 		add	r3, r3, #12032
 3219 01e0 1A46     		mov	r2, r3
 3220 01e2 3B68     		ldr	r3, [r7]
 3221 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3222 01e6 1946     		mov	r1, r3
 3223 01e8 1046     		mov	r0, r2
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 73


 3224 01ea FFF7FEFF 		bl	WIZCHIP_WRITE
 866:ioLIB/socket.c ****          break;
 3225              		.loc 1 866 10
 3226 01ee 02E0     		b	.L205
 3227              	.L196:
 867:ioLIB/socket.c ****    #endif      
 868:ioLIB/socket.c **** #endif   
 869:ioLIB/socket.c ****       default:
 870:ioLIB/socket.c ****          return SOCKERR_ARG;
 3228              		.loc 1 870 17
 3229 01f0 6FF00903 		mvn	r3, #9
 3230 01f4 00E0     		b	.L195
 3231              	.L205:
 871:ioLIB/socket.c ****    }   
 872:ioLIB/socket.c ****    return SOCK_OK;
 3232              		.loc 1 872 11
 3233 01f6 0123     		movs	r3, #1
 3234              	.L195:
 873:ioLIB/socket.c **** }
 3235              		.loc 1 873 1
 3236 01f8 1846     		mov	r0, r3
 3237 01fa 0837     		adds	r7, r7, #8
 3238              	.LCFI53:
 3239              		.cfi_def_cfa_offset 8
 3240 01fc BD46     		mov	sp, r7
 3241              	.LCFI54:
 3242              		.cfi_def_cfa_register 13
 3243              		@ sp needed
 3244 01fe 80BD     		pop	{r7, pc}
 3245              		.cfi_endproc
 3246              	.LFE10:
 3248              		.section	.text.getsockopt,"ax",%progbits
 3249              		.align	1
 3250              		.global	getsockopt
 3251              		.syntax unified
 3252              		.thumb
 3253              		.thumb_func
 3255              	getsockopt:
 3256              	.LFB11:
 874:ioLIB/socket.c **** 
 875:ioLIB/socket.c **** int8_t  getsockopt(uint8_t sn, sockopt_type sotype, void* arg)
 876:ioLIB/socket.c **** {
 3257              		.loc 1 876 1
 3258              		.cfi_startproc
 3259              		@ args = 0, pretend = 0, frame = 8
 3260              		@ frame_needed = 1, uses_anonymous_args = 0
 3261 0000 90B5     		push	{r4, r7, lr}
 3262              	.LCFI55:
 3263              		.cfi_def_cfa_offset 12
 3264              		.cfi_offset 4, -12
 3265              		.cfi_offset 7, -8
 3266              		.cfi_offset 14, -4
 3267 0002 83B0     		sub	sp, sp, #12
 3268              	.LCFI56:
 3269              		.cfi_def_cfa_offset 24
 3270 0004 00AF     		add	r7, sp, #0
 3271              	.LCFI57:
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 74


 3272              		.cfi_def_cfa_register 7
 3273 0006 0346     		mov	r3, r0
 3274 0008 3A60     		str	r2, [r7]
 3275 000a FB71     		strb	r3, [r7, #7]
 3276 000c 0B46     		mov	r3, r1
 3277 000e BB71     		strb	r3, [r7, #6]
 877:ioLIB/socket.c ****    CHECK_SOCKNUM();
 3278              		.loc 1 877 4
 3279 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3280 0012 082B     		cmp	r3, #8
 3281 0014 02D9     		bls	.L212
 3282              		.loc 1 877 4 is_stmt 0 discriminator 1
 3283 0016 4FF0FF33 		mov	r3, #-1
 3284 001a 01E1     		b	.L213
 3285              	.L212:
 878:ioLIB/socket.c ****    switch(sotype)
 3286              		.loc 1 878 4 is_stmt 1
 3287 001c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3288 001e 0C2B     		cmp	r3, #12
 3289 0020 00F2FA80 		bhi	.L214
 3290 0024 01A2     		adr	r2, .L216
 3291 0026 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3292 002a 00BF     		.p2align 2
 3293              	.L216:
 3294 002c 61000000 		.word	.L227+1
 3295 0030 7D000000 		.word	.L226+1
 3296 0034 99000000 		.word	.L225+1
 3297 0038 B5000000 		.word	.L224+1
 3298 003c EF000000 		.word	.L223+1
 3299 0040 07010000 		.word	.L222+1
 3300 0044 19020000 		.word	.L214+1
 3301 0048 41010000 		.word	.L221+1
 3302 004c 7B010000 		.word	.L220+1
 3303 0050 8D010000 		.word	.L219+1
 3304 0054 9F010000 		.word	.L218+1
 3305 0058 BB010000 		.word	.L217+1
 3306 005c F3010000 		.word	.L215+1
 3307              		.p2align 1
 3308              	.L227:
 879:ioLIB/socket.c ****    {
 880:ioLIB/socket.c ****       case SO_FLAG:
 881:ioLIB/socket.c ****          *(uint8_t*)arg = getSn_MR(sn) & 0xF0;
 3309              		.loc 1 881 27
 3310 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3311 0062 9B00     		lsls	r3, r3, #2
 3312 0064 0133     		adds	r3, r3, #1
 3313 0066 DB00     		lsls	r3, r3, #3
 3314 0068 1846     		mov	r0, r3
 3315 006a FFF7FEFF 		bl	WIZCHIP_READ
 3316 006e 0346     		mov	r3, r0
 3317              		.loc 1 881 40
 3318 0070 23F00F03 		bic	r3, r3, #15
 3319 0074 DAB2     		uxtb	r2, r3
 3320              		.loc 1 881 25
 3321 0076 3B68     		ldr	r3, [r7]
 3322 0078 1A70     		strb	r2, [r3]
 882:ioLIB/socket.c ****          break;
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 75


 3323              		.loc 1 882 10
 3324 007a D0E0     		b	.L228
 3325              	.L226:
 883:ioLIB/socket.c ****       case SO_TTL:
 884:ioLIB/socket.c ****          *(uint8_t*) arg = getSn_TTL(sn);
 3326              		.loc 1 884 28
 3327 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3328 007e 9B00     		lsls	r3, r3, #2
 3329 0080 0133     		adds	r3, r3, #1
 3330 0082 DB00     		lsls	r3, r3, #3
 3331 0084 03F5B053 		add	r3, r3, #5632
 3332 0088 1846     		mov	r0, r3
 3333 008a FFF7FEFF 		bl	WIZCHIP_READ
 3334 008e 0346     		mov	r3, r0
 3335 0090 1A46     		mov	r2, r3
 3336              		.loc 1 884 26
 3337 0092 3B68     		ldr	r3, [r7]
 3338 0094 1A70     		strb	r2, [r3]
 885:ioLIB/socket.c ****          break;
 3339              		.loc 1 885 10
 3340 0096 C2E0     		b	.L228
 3341              	.L225:
 886:ioLIB/socket.c ****       case SO_TOS:
 887:ioLIB/socket.c ****          *(uint8_t*) arg = getSn_TOS(sn);
 3342              		.loc 1 887 28
 3343 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3344 009a 9B00     		lsls	r3, r3, #2
 3345 009c 0133     		adds	r3, r3, #1
 3346 009e DB00     		lsls	r3, r3, #3
 3347 00a0 03F5A853 		add	r3, r3, #5376
 3348 00a4 1846     		mov	r0, r3
 3349 00a6 FFF7FEFF 		bl	WIZCHIP_READ
 3350 00aa 0346     		mov	r3, r0
 3351 00ac 1A46     		mov	r2, r3
 3352              		.loc 1 887 26
 3353 00ae 3B68     		ldr	r3, [r7]
 3354 00b0 1A70     		strb	r2, [r3]
 888:ioLIB/socket.c ****          break;
 3355              		.loc 1 888 10
 3356 00b2 B4E0     		b	.L228
 3357              	.L224:
 889:ioLIB/socket.c ****       case SO_MSS:   
 890:ioLIB/socket.c ****          *(uint16_t*) arg = getSn_MSSR(sn);
 3358              		.loc 1 890 29
 3359 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3360 00b6 9B00     		lsls	r3, r3, #2
 3361 00b8 0133     		adds	r3, r3, #1
 3362 00ba DB00     		lsls	r3, r3, #3
 3363 00bc 03F59053 		add	r3, r3, #4608
 3364 00c0 1846     		mov	r0, r3
 3365 00c2 FFF7FEFF 		bl	WIZCHIP_READ
 3366 00c6 0346     		mov	r3, r0
 3367 00c8 9BB2     		uxth	r3, r3
 3368 00ca 1B02     		lsls	r3, r3, #8
 3369 00cc 9CB2     		uxth	r4, r3
 3370 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3371 00d0 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 76


 3372 00d2 0133     		adds	r3, r3, #1
 3373 00d4 DB00     		lsls	r3, r3, #3
 3374 00d6 03F59853 		add	r3, r3, #4864
 3375 00da 1846     		mov	r0, r3
 3376 00dc FFF7FEFF 		bl	WIZCHIP_READ
 3377 00e0 0346     		mov	r3, r0
 3378 00e2 9BB2     		uxth	r3, r3
 3379 00e4 2344     		add	r3, r3, r4
 3380 00e6 9AB2     		uxth	r2, r3
 3381              		.loc 1 890 27
 3382 00e8 3B68     		ldr	r3, [r7]
 3383 00ea 1A80     		strh	r2, [r3]	@ movhi
 891:ioLIB/socket.c ****          break;
 3384              		.loc 1 891 10
 3385 00ec 97E0     		b	.L228
 3386              	.L223:
 892:ioLIB/socket.c ****       case SO_DESTIP:
 893:ioLIB/socket.c ****          getSn_DIPR(sn, (uint8_t*)arg);
 3387              		.loc 1 893 10
 3388 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3389 00f0 9B00     		lsls	r3, r3, #2
 3390 00f2 0133     		adds	r3, r3, #1
 3391 00f4 DB00     		lsls	r3, r3, #3
 3392 00f6 03F54063 		add	r3, r3, #3072
 3393 00fa 0422     		movs	r2, #4
 3394 00fc 3968     		ldr	r1, [r7]
 3395 00fe 1846     		mov	r0, r3
 3396 0100 FFF7FEFF 		bl	WIZCHIP_READ_BUF
 894:ioLIB/socket.c ****          break;
 3397              		.loc 1 894 10
 3398 0104 8BE0     		b	.L228
 3399              	.L222:
 895:ioLIB/socket.c ****       case SO_DESTPORT:  
 896:ioLIB/socket.c ****          *(uint16_t*) arg = getSn_DPORT(sn);
 3400              		.loc 1 896 29
 3401 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3402 0108 9B00     		lsls	r3, r3, #2
 3403 010a 0133     		adds	r3, r3, #1
 3404 010c DB00     		lsls	r3, r3, #3
 3405 010e 03F58053 		add	r3, r3, #4096
 3406 0112 1846     		mov	r0, r3
 3407 0114 FFF7FEFF 		bl	WIZCHIP_READ
 3408 0118 0346     		mov	r3, r0
 3409 011a 9BB2     		uxth	r3, r3
 3410 011c 1B02     		lsls	r3, r3, #8
 3411 011e 9CB2     		uxth	r4, r3
 3412 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3413 0122 9B00     		lsls	r3, r3, #2
 3414 0124 0133     		adds	r3, r3, #1
 3415 0126 DB00     		lsls	r3, r3, #3
 3416 0128 03F58853 		add	r3, r3, #4352
 3417 012c 1846     		mov	r0, r3
 3418 012e FFF7FEFF 		bl	WIZCHIP_READ
 3419 0132 0346     		mov	r3, r0
 3420 0134 9BB2     		uxth	r3, r3
 3421 0136 2344     		add	r3, r3, r4
 3422 0138 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 77


 3423              		.loc 1 896 27
 3424 013a 3B68     		ldr	r3, [r7]
 3425 013c 1A80     		strh	r2, [r3]	@ movhi
 897:ioLIB/socket.c ****          break;
 3426              		.loc 1 897 10
 3427 013e 6EE0     		b	.L228
 3428              	.L221:
 898:ioLIB/socket.c ****    #if _WIZCHIP_ > 5200   
 899:ioLIB/socket.c ****       case SO_KEEPALIVEAUTO:
 900:ioLIB/socket.c ****          CHECK_SOCKMODE(Sn_MR_TCP);
 3429              		.loc 1 900 10
 3430 0140 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3431 0142 9B00     		lsls	r3, r3, #2
 3432 0144 0133     		adds	r3, r3, #1
 3433 0146 DB00     		lsls	r3, r3, #3
 3434 0148 1846     		mov	r0, r3
 3435 014a FFF7FEFF 		bl	WIZCHIP_READ
 3436 014e 0346     		mov	r3, r0
 3437 0150 03F00F03 		and	r3, r3, #15
 3438 0154 012B     		cmp	r3, #1
 3439 0156 02D0     		beq	.L229
 3440              		.loc 1 900 10 is_stmt 0 discriminator 1
 3441 0158 6FF00403 		mvn	r3, #4
 3442 015c 60E0     		b	.L213
 3443              	.L229:
 901:ioLIB/socket.c ****          *(uint16_t*) arg = getSn_KPALVTR(sn);
 3444              		.loc 1 901 29 is_stmt 1
 3445 015e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3446 0160 9B00     		lsls	r3, r3, #2
 3447 0162 0133     		adds	r3, r3, #1
 3448 0164 DB00     		lsls	r3, r3, #3
 3449 0166 03F53C53 		add	r3, r3, #12032
 3450 016a 1846     		mov	r0, r3
 3451 016c FFF7FEFF 		bl	WIZCHIP_READ
 3452 0170 0346     		mov	r3, r0
 3453 0172 9AB2     		uxth	r2, r3
 3454              		.loc 1 901 27
 3455 0174 3B68     		ldr	r3, [r7]
 3456 0176 1A80     		strh	r2, [r3]	@ movhi
 902:ioLIB/socket.c ****          break;
 3457              		.loc 1 902 10
 3458 0178 51E0     		b	.L228
 3459              	.L220:
 903:ioLIB/socket.c ****    #endif      
 904:ioLIB/socket.c ****       case SO_SENDBUF:
 905:ioLIB/socket.c ****          *(uint16_t*) arg = getSn_TX_FSR(sn);
 3460              		.loc 1 905 29
 3461 017a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3462 017c 1846     		mov	r0, r3
 3463 017e FFF7FEFF 		bl	getSn_TX_FSR
 3464 0182 0346     		mov	r3, r0
 3465 0184 1A46     		mov	r2, r3
 3466              		.loc 1 905 27
 3467 0186 3B68     		ldr	r3, [r7]
 3468 0188 1A80     		strh	r2, [r3]	@ movhi
 906:ioLIB/socket.c ****          break;
 3469              		.loc 1 906 10
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 78


 3470 018a 48E0     		b	.L228
 3471              	.L219:
 907:ioLIB/socket.c ****       case SO_RECVBUF:
 908:ioLIB/socket.c ****          *(uint16_t*) arg = getSn_RX_RSR(sn);
 3472              		.loc 1 908 29
 3473 018c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3474 018e 1846     		mov	r0, r3
 3475 0190 FFF7FEFF 		bl	getSn_RX_RSR
 3476 0194 0346     		mov	r3, r0
 3477 0196 1A46     		mov	r2, r3
 3478              		.loc 1 908 27
 3479 0198 3B68     		ldr	r3, [r7]
 3480 019a 1A80     		strh	r2, [r3]	@ movhi
 909:ioLIB/socket.c ****          break;
 3481              		.loc 1 909 10
 3482 019c 3FE0     		b	.L228
 3483              	.L218:
 910:ioLIB/socket.c ****       case SO_STATUS:
 911:ioLIB/socket.c ****          *(uint8_t*) arg = getSn_SR(sn);
 3484              		.loc 1 911 28
 3485 019e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3486 01a0 9B00     		lsls	r3, r3, #2
 3487 01a2 0133     		adds	r3, r3, #1
 3488 01a4 DB00     		lsls	r3, r3, #3
 3489 01a6 03F54073 		add	r3, r3, #768
 3490 01aa 1846     		mov	r0, r3
 3491 01ac FFF7FEFF 		bl	WIZCHIP_READ
 3492 01b0 0346     		mov	r3, r0
 3493 01b2 1A46     		mov	r2, r3
 3494              		.loc 1 911 26
 3495 01b4 3B68     		ldr	r3, [r7]
 3496 01b6 1A70     		strb	r2, [r3]
 912:ioLIB/socket.c ****          break;
 3497              		.loc 1 912 10
 3498 01b8 31E0     		b	.L228
 3499              	.L217:
 913:ioLIB/socket.c ****       case SO_REMAINSIZE:
 914:ioLIB/socket.c ****          if(getSn_MR(sn) & Sn_MR_TCP)
 3500              		.loc 1 914 13
 3501 01ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3502 01bc 9B00     		lsls	r3, r3, #2
 3503 01be 0133     		adds	r3, r3, #1
 3504 01c0 DB00     		lsls	r3, r3, #3
 3505 01c2 1846     		mov	r0, r3
 3506 01c4 FFF7FEFF 		bl	WIZCHIP_READ
 3507 01c8 0346     		mov	r3, r0
 3508              		.loc 1 914 26
 3509 01ca 03F00103 		and	r3, r3, #1
 3510              		.loc 1 914 12
 3511 01ce 002B     		cmp	r3, #0
 3512 01d0 08D0     		beq	.L230
 915:ioLIB/socket.c ****             *(uint16_t*)arg = getSn_RX_RSR(sn);
 3513              		.loc 1 915 31
 3514 01d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3515 01d4 1846     		mov	r0, r3
 3516 01d6 FFF7FEFF 		bl	getSn_RX_RSR
 3517 01da 0346     		mov	r3, r0
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 79


 3518 01dc 1A46     		mov	r2, r3
 3519              		.loc 1 915 29
 3520 01de 3B68     		ldr	r3, [r7]
 3521 01e0 1A80     		strh	r2, [r3]	@ movhi
 916:ioLIB/socket.c ****          else
 917:ioLIB/socket.c ****             *(uint16_t*)arg = sock_remained_size[sn];
 918:ioLIB/socket.c ****          break;
 3522              		.loc 1 918 10
 3523 01e2 1CE0     		b	.L228
 3524              	.L230:
 917:ioLIB/socket.c ****          break;
 3525              		.loc 1 917 49
 3526 01e4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3527 01e6 104A     		ldr	r2, .L233
 3528 01e8 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 917:ioLIB/socket.c ****          break;
 3529              		.loc 1 917 29
 3530 01ec 3B68     		ldr	r3, [r7]
 3531 01ee 1A80     		strh	r2, [r3]	@ movhi
 3532              		.loc 1 918 10
 3533 01f0 15E0     		b	.L228
 3534              	.L215:
 919:ioLIB/socket.c ****       case SO_PACKINFO:
 920:ioLIB/socket.c ****          //CHECK_SOCKMODE(Sn_MR_TCP);
 921:ioLIB/socket.c **** #if _WIZCHIP_ != 5300
 922:ioLIB/socket.c ****          if((getSn_MR(sn) == Sn_MR_TCP))
 3535              		.loc 1 922 14
 3536 01f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3537 01f4 9B00     		lsls	r3, r3, #2
 3538 01f6 0133     		adds	r3, r3, #1
 3539 01f8 DB00     		lsls	r3, r3, #3
 3540 01fa 1846     		mov	r0, r3
 3541 01fc FFF7FEFF 		bl	WIZCHIP_READ
 3542 0200 0346     		mov	r3, r0
 3543              		.loc 1 922 12
 3544 0202 012B     		cmp	r3, #1
 3545 0204 02D1     		bne	.L232
 923:ioLIB/socket.c ****              return SOCKERR_SOCKMODE;
 3546              		.loc 1 923 21
 3547 0206 6FF00403 		mvn	r3, #4
 3548 020a 09E0     		b	.L213
 3549              	.L232:
 924:ioLIB/socket.c **** #endif
 925:ioLIB/socket.c ****          *(uint8_t*)arg = sock_pack_info[sn];
 3550              		.loc 1 925 41
 3551 020c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3552 020e 074A     		ldr	r2, .L233+4
 3553 0210 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3554              		.loc 1 925 25
 3555 0212 3B68     		ldr	r3, [r7]
 3556 0214 1A70     		strb	r2, [r3]
 926:ioLIB/socket.c ****          break;
 3557              		.loc 1 926 10
 3558 0216 02E0     		b	.L228
 3559              	.L214:
 927:ioLIB/socket.c ****       default:
 928:ioLIB/socket.c ****          return SOCKERR_SOCKOPT;
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 80


 3560              		.loc 1 928 17
 3561 0218 6FF00103 		mvn	r3, #1
 3562 021c 00E0     		b	.L213
 3563              	.L228:
 929:ioLIB/socket.c ****    }
 930:ioLIB/socket.c ****    return SOCK_OK;
 3564              		.loc 1 930 11
 3565 021e 0123     		movs	r3, #1
 3566              	.L213:
 931:ioLIB/socket.c **** }
 3567              		.loc 1 931 1
 3568 0220 1846     		mov	r0, r3
 3569 0222 0C37     		adds	r7, r7, #12
 3570              	.LCFI58:
 3571              		.cfi_def_cfa_offset 12
 3572 0224 BD46     		mov	sp, r7
 3573              	.LCFI59:
 3574              		.cfi_def_cfa_register 13
 3575              		@ sp needed
 3576 0226 90BD     		pop	{r4, r7, pc}
 3577              	.L234:
 3578              		.align	2
 3579              	.L233:
 3580 0228 00000000 		.word	sock_remained_size
 3581 022c 00000000 		.word	sock_pack_info
 3582              		.cfi_endproc
 3583              	.LFE11:
 3585              		.text
 3586              	.Letext0:
 3587              		.file 2 "d:\\gcc arm\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 3588              		.file 3 "d:\\gcc arm\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 3589              		.file 4 "ioLIB/socket.h"
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 81


DEFINED SYMBOLS
                            *ABS*:00000000 socket.c
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:20     .data.sock_any_port:00000000 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:23     .data.sock_any_port:00000000 sock_any_port
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:26     .bss.sock_io_mode:00000000 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:29     .bss.sock_io_mode:00000000 sock_io_mode
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:32     .bss.sock_is_sending:00000000 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:35     .bss.sock_is_sending:00000000 sock_is_sending
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:38     .bss.sock_remained_size:00000000 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:41     .bss.sock_remained_size:00000000 sock_remained_size
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:48     .bss.sock_pack_info:00000000 sock_pack_info
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:45     .bss.sock_pack_info:00000000 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:51     .text.socket:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:57     .text.socket:00000000 socket
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:407    .text.close:00000000 close
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:392    .text.socket:00000218 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:401    .text.close:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:542    .text.close:000000cc $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:550    .text.listen:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:556    .text.listen:00000000 listen
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:677    .text.connect:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:683    .text.connect:00000000 connect
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:945    .text.connect:000001b4 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:950    .text.disconnect:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:956    .text.disconnect:00000000 disconnect
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:1102   .text.disconnect:000000e4 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:1108   .text.send:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:1114   .text.send:00000000 send
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:1411   .text.send:000001ec $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:1417   .text.recv:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:1423   .text.recv:00000000 recv
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:1655   .text.recv:00000168 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:1660   .text.sendto:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:1666   .text.sendto:00000000 sendto
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2037   .text.sendto:00000268 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2042   .text.recvfrom:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2048   .text.recvfrom:00000000 recvfrom
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2455   .text.recvfrom:00000278 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2460   .text.recvfrom:00000284 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2675   .text.recvfrom:000003d4 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2681   .text.ctlsocket:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2687   .text.ctlsocket:00000000 ctlsocket
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2728   .text.ctlsocket:00000030 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2736   .text.ctlsocket:00000050 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2951   .text.ctlsocket:000001b0 $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2956   .text.setsockopt:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:2962   .text.setsockopt:00000000 setsockopt
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:3001   .text.setsockopt:0000002c $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:3008   .text.setsockopt:00000048 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:3249   .text.getsockopt:00000000 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:3255   .text.getsockopt:00000000 getsockopt
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:3294   .text.getsockopt:0000002c $d
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:3307   .text.getsockopt:00000060 $t
C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s:3580   .text.getsockopt:00000228 $d

UNDEFINED SYMBOLS
WIZCHIP_READ_BUF
ARM GAS  C:\Users\clay0\AppData\Local\Temp\ccbeGsRd.s 			page 82


WIZCHIP_WRITE
WIZCHIP_READ
WIZCHIP_WRITE_BUF
getSn_TX_FSR
wiz_send_data
getSn_RX_RSR
wiz_recv_data
wiz_recv_ignore
